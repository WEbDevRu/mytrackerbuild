{"version":3,"sources":["components/content/counters/counterslist/counterslist.module.scss","components/navbar/navbar.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/graphic/graphic.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","components/content/summary/dayusers/dayusers.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/content/summary/dayusers/shortuser/shortuser.module.scss","components/sidebar/sidebar.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/content/summary/daystat/daystat.module.scss","components/content/audiences/audienceslist/audienceslist.module.scss","components/profile/login/login.module.scss","serviceWorker.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","redux/profile-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","api/api.js","components/navbar/navbarContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/content/summary/dayusers/shortuser/shortuser.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/dayusers/dayusers.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/haveaccess/haveaccess.jsx","components/profile/profilesettings/profilesettings.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","counterslistData","pageSize","totalCounters","currentPage","counterNameInput","counterDomenInput","isFetching","countersReducer","state","action","type","newCounter","id","name","domen","dayusers","allusers","status","inputName","value","countersData","data","items","totalPages","audiencelistData","description","counters","counterId","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","totalUsers","dayusersData","graphicData","day","summaryReducer","usersData","newCurrentPage","userName","userDescription","profileReducer","profileId","email","login","regDate","token","isAuth","loginInput","emailInput","passwordInput","repeatPasswordInput","emailInputState","passwordInputState","loginFormState","isLoginButtonDisabled","signUpInputsDangers","loginDanger","emailDanger","passwordDanger","repeatPasswordDanger","setProfileData","authProfileData","reloadInput","setToken","authReducer","userId","inputState","formState","buttonState","inputDanger","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","auth","store","createStore","Sidebar","className","s","sidebar","sidebar_menu","href","link_item","Navbar","props","navbar","logo","navbar_menu","to","activeClassName","active","profile","profileLogin","onClick","logout","authedInstance","axios","baseURL","authAPI","get","headers","getState","then","response","NavbarContainer","getCookie","matches","document","cookie","RegExp","replace","decodeURIComponent","undefined","post","deleteProfileData","React","Component","connect","Graphiccol","colheight","height","graphicvalue","graphic_col_wr","graphic_col_text","graphic_col_day","graphicday","graphic_col_number","graphic_col","style","Shortuser","shortuser","user_alias","user_country","country","user_time","time","user_date","mongoDate","daysSeparate","split","date","timeSeparate","slice","join","seconds","user_revenue","revenue","Graphic","graphicColElements","map","coldata","graphic","graphic_cols","graphic_bottom","Daystat","day_stat","LoadingShortuser","loading_shortuser","Dayusers","dayUserElements","dayuser","tablehead","loadmore_button","loadMore","DayusersContainer","loadNewPage","setTotalUsers","setUsers","dispatch","setUsersActionCreator","loadNewPageActionCreator","setCurrentPage","setTotalUsersActionCreator","DaystatContainer","Summary","Addcounterblock","name_input","createRef","domen_input","addcounter_form","onChange","reloadCounterInput","current","placeholder","ref","counterDomen","addCounter","AddcounterblockContainer","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","Shortcounter","short_counter","work","notwork","LoadingCounters","loading_counter","Counterslist","countersElement","countersListData","_id","pagesCount","Math","ceil","pages","push","pagesButtonsElements","page","changePage","table_head","list","CounterslistContainer","toggleIsFetching","setCounters","setTotalCounters","Counters","Addaudienceblock","clicked","event","deleteCounter","target","getAttribute","countersOptionsElements","countersSelect","countersElements","audience_badge","counterid","version","viewBox","width","xmlns","d","fill","description_input","counters_select","add_form","nameInput","descriptionName","cols","rows","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","console","log","addAudience","AddaudienceblockContainer","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","YourProfile","profile_cont","photo_col","photo_wr","info_col","info_inputs","reloadTextarea","YourProfileContainer","reloadInputActionCreator","reloadTextareaActionCreator","HaveAccess","ProfileSettings","LoginBlock","form","false_alert","loading_bar","input_wr","danger","input_danger","reloadEmailInput","setEmailInputState","setLoginFormState","toggleButtonDisability","reloadPasswordInput","setPasswordInputState","disabled","isButtonDisabled","sendLoginRequest","dont_reg_yet","LoginContainer","message","catch","error","setInputState","toggleLoginButtonDisability","Profile","ProfileContainer","AuthForm","SignUpBlock","SignUpContainer","setSignUpInputDanger","App","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b30d1f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3GKut\",\"name\":\"counterslist_name__26sx8\",\"domen\":\"counterslist_domen__28w4t\",\"dayusers\":\"counterslist_dayusers__1qIrK\",\"totalusers\":\"counterslist_totalusers__cwCPg\",\"status\":\"counterslist_status__1Nkgx\",\"loading_counter\":\"counterslist_loading_counter__2YVWV\",\"loading\":\"counterslist_loading__ODluH\",\"list\":\"counterslist_list__3QBS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__15BfM\",\"link_item\":\"navbar_link_item__2Qnum\",\"active\":\"navbar_active__uE8Zz\",\"profile\":\"navbar_profile__SnKZH\",\"logo\":\"navbar_logo__3hFZg\",\"navbar_menu\":\"navbar_navbar_menu__2_8AK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"graphic_graphic__3IRmr\",\"graphic_bottom\":\"graphic_graphic_bottom__1uDkm\",\"graphic_col_wr\":\"graphic_graphic_col_wr__t0l7L\",\"graphic_col\":\"graphic_graphic_col__N_PB4\",\"graphic_col_text\":\"graphic_graphic_col_text__3ayWZ\",\"graphic_col_day\":\"graphic_graphic_col_day__3MQq2\",\"graphic_col_number\":\"graphic_graphic_col_number__2f8zS\",\"graphic_cols\":\"graphic_graphic_cols__2ETRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__2Mkqz\",\"name\":\"shortcounter_name__2XGTE\",\"domen\":\"shortcounter_domen__13SoB\",\"dayusers\":\"shortcounter_dayusers__3LOqd\",\"totalusers\":\"shortcounter_totalusers__9w9vy\",\"status\":\"shortcounter_status__2OofU\",\"work\":\"shortcounter_work__1ylaG\",\"notwork\":\"shortcounter_notwork__3MW4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablehead\":\"dayusers_tablehead__1Lc84\",\"user_alias\":\"dayusers_user_alias__1YKwO\",\"user_country\":\"dayusers_user_country__3l0Wx\",\"user_time\":\"dayusers_user_time__3xRTE\",\"user_date\":\"dayusers_user_date__3WejA\",\"user_revenue\":\"dayusers_user_revenue___kRiq\",\"loadmore_button\":\"dayusers_loadmore_button__6nQO4\",\"loading_shortuser\":\"dayusers_loading_shortuser__3jw8s\",\"loading\":\"dayusers_loading__3tKjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortuser\":\"shortuser_shortuser__bnE4M\",\"user_alias\":\"shortuser_user_alias__3mR9I\",\"user_country\":\"shortuser_user_country__1CMLk\",\"user_time\":\"shortuser_user_time__1MOfy\",\"user_date\":\"shortuser_user_date__1dObS\",\"user_revenue\":\"shortuser_user_revenue__1ur_q\",\"dayuser_list\":\"shortuser_dayuser_list__zSlo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"input_wr\":\"login_input_wr__3ZVSI\",\"input_danger\":\"login_input_danger__3KsA1\",\"danger\":\"login_danger__3q7pY\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n\r\n        counterslistData: [],\r\n        pageSize: 5,\r\n        totalCounters: '',\r\n        currentPage: 1,\r\n        counterNameInput: '',\r\n        counterDomenInput: '',\r\n        isFetching: ''\r\n\r\n\r\n\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: 5,\r\n                name: state.counterNameInput,\r\n                domen: state.counterDomenInput,\r\n                dayusers: 0,\r\n                allusers: 0,\r\n                status: 'work'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [...state.counterslistData, newCounter],\r\n                counterNameInput: '',\r\n                counterDomenInput: ''\r\n            }\r\n        }\r\n\r\n        case \"RELOAD-COUNTER-INPUT\":{\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        }\r\n        case \"SET-COUNTERS\":{\r\n            return {\r\n                ...state,\r\n                counterslistData: action.countersData.data.items\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\":{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case 'SET-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                totalCounters: action.totalCounters.data.totalPages\r\n            }\r\n        }\r\n        case 'TOGGLE-IS-FETCHING':{\r\n\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = () =>({type: 'ADD-COUNTER'})\r\nexport const setCounters = (countersData) =>({\r\n    type: 'SET-COUNTERS',\r\n    countersData: countersData\r\n\r\n})\r\nexport const setCurrentPage = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalCounters = (totalCounters) =>({\r\n    type: 'SET-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\nexport const reloadCounterInput = (value, inputName) =>({\r\n    type: 'RELOAD-COUNTER-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\n\r\nexport const toggleIsFetching = (isFetching) =>({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","let initialState = {\r\n    dayusersData: [],\r\n    pageSize: 5,\r\n    totalUsers: 17,\r\n    currentPage: 1,\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"SET-USERS\":{\r\n\r\n            if(state.dayusersData.length === 0){\r\n                return{\r\n                    ...state,\r\n                    dayusersData: [...state.dayusersData,  ...action.usersData],\r\n                    currentPage: state.currentPage + 1\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        case \"LOAD-NEW-PAGE\":{\r\n            let newCurrentPage = state.currentPage + 1\r\n            return {\r\n\r\n                ...state,\r\n                dayusersData: [...state.dayusersData, ...action.usersData],\r\n                currentPage: newCurrentPage\r\n\r\n            }\r\n\r\n        }\r\n        case \"SET-TOTAL-USERS\":{\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUsersActionCreator = (usersData) =>({\r\n    type: \"SET-USERS\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const loadNewPageActionCreator = (usersData) =>({\r\n    type: \"LOAD-NEW-PAGE\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalUsersActionCreator = (totalUsers) =>({\r\n    type: 'SET-TOTAL-USERS',\r\n    totalUsers: totalUsers\r\n})\r\n\r\nexport default summaryReducer\r\n","let initialState = {\r\n    userName: '',\r\n    userDescription: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SAVE-INFO':{\r\n\r\n        }\r\n        case 'RELOAD-INPUT':{\r\n           return{\r\n               ...state,\r\n               [action.inputName]: action.value\r\n           }\r\n        }\r\n        case 'RELOAD-TEXTAREA':{\r\n            return{\r\n                ...state,\r\n                [action.inputName]: action.value\r\n            }\r\n        }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\nexport default profileReducer\r\nexport const saveInfoActionCreator = () =>({type: 'SAVE-INFO'})\r\nexport const reloadInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-INPUT',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\n","import store from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    loginInput: '',\r\n    emailInput: '',\r\n    passwordInput: '',\r\n    repeatPasswordInput: '',\r\n    emailInputState: 'normal',\r\n    passwordInputState: 'normal',\r\n    isFetching: false,\r\n    loginFormState: 'normal',\r\n    isLoginButtonDisabled: false,\r\n    signUpInputsDangers: {\r\n        loginDanger:'',\r\n        emailDanger:'',\r\n        passwordDanger: '',\r\n        repeatPasswordDanger: ''\r\n    }\r\n\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"RELOAD_INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName]: action.value\r\n            }\r\n        case \"SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'SET_LOGIN_INPUT_STATE':\r\n            return{\r\n                ...state,\r\n                [action.inputName]: action.inputState\r\n        }\r\n        case 'TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'SET_LOGIN_FORM_STATE':\r\n\r\n            return {\r\n                ...state,\r\n                loginFormState: action.formState\r\n            }\r\n        case 'TOGGLE_LOGIN_BUTTON_DISABILITY':\r\n            return {\r\n                ...state,\r\n                isLoginButtonDisabled: action.buttonState\r\n            }\r\n        case 'SET_SIGNUP_INPUT_DANGER':\r\n            return {\r\n                ...state,\r\n                [action.inputName]: action.inputDanger\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const reloadInput = (inputName, value) => ({\r\n    type: 'RELOAD_INPUT',\r\n    inputName: inputName,\r\n    value: value\r\n})\r\n\r\nexport const setToken = (token) =>({\r\n    type: 'SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\nexport const setLoginFormState = (formState) =>({\r\n    type: 'SET_LOGIN_FORM_STATE',\r\n    formState: formState\r\n})\r\n\r\nexport const toggleLoginButtonDisability = (buttonState) => ({\r\n    type: 'TOGGLE_LOGIN_BUTTON_DISABILITY',\r\n    buttonState: buttonState\r\n})\r\n\r\nexport const setSignUpInputDanger = (inputName, inputDanger) => ({\r\n    type: 'SET_SIGNUP_INPUT_DANGER',\r\n    inputName: inputName,\r\n    inputDanger: inputDanger\r\n})\r\n\r\nexport  default authReducer\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport countersReducer from \"./counters-reducer\";\r\nimport audiencesReducer from \"./audiences-reducer\";\r\nimport summaryReducer from \"./summary-reducer\";\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\";\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store\r\nexport default store","import React from 'react';\r\nimport s from './sidebar.module.scss';\r\n\r\nconst Sidebar = () =>{\r\n    return (\r\n\r\n        <div className={s.sidebar}>\r\n             <div className={s.sidebar_menu}>\r\n                 <a href=\"\" className={s.link_item}>Сводка</a>\r\n                 <a href=\"\" className={s.link_item}>Посетители</a>\r\n                 <a href=\"\" className={s.link_item}>Конверсии</a>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let logout = () =>{\r\n      props.logout()\r\n    }\r\n    return  (\r\n\r\n\r\n        <nav className={s.navbar}>\r\n            <div className={s.logo}>\r\n                Трекер\r\n            </div>\r\n\r\n            <div className={s.navbar_menu}>\r\n\r\n                <NavLink className={s.link_item} to=\"/summary\" activeClassName={s.active}>Общее</NavLink>\r\n                <NavLink className={s.link_item} to=\"/counters\" activeClassName={s.active}>Счётчики</NavLink>\r\n                <NavLink className={s.link_item} to=\"/audiences\" activeClassName={s.active}>Аудитории</NavLink>\r\n\r\n            </div>\r\n            <div className={s.profile}>\r\n                <div className='dropdown'>\r\n\r\n                    <NavLink to=\"/profile\" className={s.link_item}>{props.isAuth == true ? props.profileLogin : \"Профиль\" }</NavLink>\r\n                    <div className='dropdown_block'>\r\n                        <NavLink to=\"/profilesettings\" className='dropdown_link' activeClassName='active'>Настройки</NavLink>\r\n                        <NavLink to=\"/share\" className='dropdown_link' activeClassName='active'>Поделиться</NavLink>\r\n                        {props.isAuth == true ? <div className=\"dropdown_link\" onClick={logout}>Выйти</div> : <NavLink to=\"/login\" className='dropdown_link' activeClassName='active'>Войти</NavLink>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </nav>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Navbar;","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('auth/me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}","import React from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport axios from 'axios'\r\nimport {connect} from \"react-redux\";\r\nimport {setToken, setProfileData, deleteProfileData} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from '../../api/api'\r\n\r\nclass NavbarContainer extends React.Component {\r\n\r\n    getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let getAuth = () =>{\r\n                   authAPI.getAuthInfo().then(response => {\r\n                     this.props.setProfileData(response)\r\n                    })\r\n        }\r\n\r\n        if (this.getCookie('email') && this.getCookie('password')){\r\n            axios.post('http://nikrainev.ru:3000/auth/login',{\"email\":this.getCookie('email'), \"password\":this.getCookie('password')})\r\n                    .then(response => {\r\n                        this.props.setToken(response.data.token)\r\n\r\n                        getAuth()\r\n                    })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Navbar isAuth={this.props.isAuth}\r\n                       profileLogin={this.props.profileLogin}\r\n                       logout={this.props.deleteProfileData}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login\r\n    }\r\n}\r\n\r\n\r\nexport default NavbarContainer = connect(mapStateToProps, {setToken,setProfileData, deleteProfileData})(NavbarContainer)","import React from 'react';\r\nimport s from '../graphic.module.scss';\r\nconst Graphiccol = (props) => {\r\n    let colheight = {\r\n     height: props.graphicvalue+'px'\r\n    }\r\n    return(\r\n            <div className={s.graphic_col_wr}>\r\n                <div className={s.graphic_col_text}>\r\n                    <p className={s.graphic_col_day}>{props.graphicday}</p>\r\n                    <p className={s.graphic_col_number}>{props.graphicvalue}</p>\r\n                </div>\r\n                <div className={s.graphic_col} style={colheight}></div>\r\n            </div>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport s from './shortuser.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Shortuser = (props) =>{\r\n    const mongoDate = (mongoDate) => {\r\n        let daysSeparate = mongoDate.split('T')\r\n        let date = daysSeparate[0];\r\n        let timeSeparate = daysSeparate[1];\r\n        timeSeparate = timeSeparate.split(':')\r\n        let time = timeSeparate.slice(0,2).join(':')\r\n        let seconds = timeSeparate[2].replace('Z','')\r\n        return{\r\n            date: date,\r\n            time: time,\r\n            seconds: seconds\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n\r\n                <NavLink to={'/users/'+props.id} className={s.shortuser}>\r\n                    <div className={s.user_alias}>\r\n\r\n                    </div>\r\n                    <div className={s.user_country}><p>{props.country}</p></div>\r\n                    <div className={s.user_time}><p>{props.time}</p></div>\r\n                    <div className={s.user_date}><p>{mongoDate(props.date).time}</p></div>\r\n                    <div className={s.user_revenue}><p>{props.revenue}</p></div>\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Shortuser;","import React from 'react';\r\nimport s from './graphic.module.scss';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport Shortuser from \"../content/summary/dayusers/shortuser/shortuser\";\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <div className={s.graphic}>\r\n                <div className={s.graphic_cols}>\r\n                    {graphicColElements}\r\n                </div>\r\n              <div className={s.graphic_bottom}>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className={s.day_stat}>\r\n                            <p>Клики<br />120</p>\r\n                            <p>Пользователи<br />65</p>\r\n                            <p>Конверсии<br />2</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n\r\n                            <Graphic graphicData={props.graphicData}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from 'react';\r\nimport s from './dayusers.module.scss';\r\nimport Shortuser from \"./shortuser/shortuser\";\r\n\r\n\r\nconst LoadingShortuser = () =>{\r\n    return (\r\n            <div className={s.loading_shortuser}>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Dayusers = (props) => {\r\n\r\n\r\n\r\n    let dayusers = props.dayusers;\r\n\r\n    let dayUserElements = [];\r\n    let i = 0\r\n    if(dayusers.length == 0){\r\n        while(i <= 5){\r\n            dayUserElements[i] = <LoadingShortuser />\r\n            i++\r\n        }\r\n    }\r\n    else{\r\n        dayUserElements = dayusers.map(dayuser => <Shortuser id={dayuser.id} country={dayuser.country} time={dayuser.time} date={dayuser.date} revenue={dayuser.revenue} />)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className={s.tablehead}>\r\n                    <div className={s.user_alias}><p>Псевдоним</p></div>\r\n                    <div className={s.user_country}><p>Страна</p></div>\r\n                    <div className={s.user_time}><p>Время на сайте</p></div>\r\n                    <div className={s.user_date}><p>Дата посещения</p></div>\r\n                    <div className={s.user_revenue}><p>Доход</p></div>\r\n                </div>\r\n                <div className=\"dayuser_list\">\r\n                    {dayUserElements}\r\n                    <button className={s.loadmore_button+ \" attractive-button\"} onClick={() => {props.loadMore()}}>Загрузить ещё</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dayusers;","import React from \"react\";\r\nimport Dayusers from \"./dayusers\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersActionCreator, loadNewPageActionCreator,setCurrentPageActionCreator, setTotalUsersActionCreator} from '../../../../redux/summary-reducer'\r\nimport * as axios from \"axios\";\r\n\r\n\r\nclass DayusersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('http://nikrainev.ru:3000/auth/me', {headers:{\"Authorization\": \"Bearer \"+ this.props.token}})\r\n                .then(response => {\r\n\r\n                })\r\n\r\n        axios.get('http://195.161.62.108:3000/users').then(response =>{\r\n            this.props.setTotalUsers(response.data.totalPages)\r\n        })\r\n\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=1&limit=5`).then(response =>{\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n\r\n    }\r\n\r\n    loadMore = ()=>{\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.loadNewPage(response.data.items)\r\n\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return <Dayusers\r\n                dayusers={this.props.dayusers}\r\n                loadMore={this.loadMore}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dayusers: state.summaryPage.dayusersData,\r\n        currentPage: state.summaryPage.currentPage,\r\n        totalUsers: state.summaryPage.totalUsers,\r\n        pageSize: state.summaryPage.pageSize,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n     setUsers: (usersData) => {\r\n         dispatch(setUsersActionCreator(usersData))\r\n     },\r\n     loadNewPage: (usersData) =>{\r\n         dispatch(loadNewPageActionCreator(usersData))\r\n     },\r\n     setCurrentPage: () =>{\r\n         dispatch(setCurrentPageActionCreator())\r\n     },\r\n     setTotalUsers:(totalUsers) =>{\r\n         dispatch(setTotalUsersActionCreator(totalUsers))\r\n     }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default  DayusersContainer = connect(mapStateToProps, mapDispatchToProps)(DayusersContainer)\r\n\r\n","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        graphicData: state.summaryPage.graphicData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst DaystatContainer = connect(mapStateToProps, mapDispatchToProps())(Daystat)\r\n\r\nexport default DaystatContainer;","import React from 'react';\r\nimport Daystat from \"./daystat/daystat\";\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nconst Summary = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n\r\n\r\n                <DaystatContainer/>\r\n                <DayusersContainer/>\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Summary;","import React from 'react';\r\nimport s from '../addcounter.module.scss';\r\n\r\n\r\nconst Addcounterblock = (props) =>{\r\n    let name_input = React.createRef();\r\n    let domen_input = React.createRef();\r\n\r\n    let Addcounter = () =>{\r\n       if(props.counterName !=='' && props.counterDomen !==''){\r\n           props.addCounter();\r\n       }\r\n    };\r\n\r\n    let onNameInputChange = () =>{\r\n        props.reloadCounterInput(name_input.current.value,'counterNameInput')\r\n    }\r\n    let onDomenInputChange = () =>{\r\n        props.reloadCounterInput(domen_input.current.value,'counterDomenInput')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\"><p>Добавьте ваш счётчик</p></div>\r\n          <div className=\"col-6\">\r\n              <div className={s.addcounter_form}>\r\n                  <input onChange={onNameInputChange} type=\"text\" value={props.counterName} placeholder='Название счётчика' ref={name_input}/>\r\n                  <input onChange={onDomenInputChange} type=\"text\" value={props.counterDomen} placeholder='Домен сайта' ref={domen_input}/>\r\n                  <button className='control_button' onClick={Addcounter}>Добавить счётчик</button>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Addcounterblock;","import React from \"react\";\r\n\r\nimport {addCounter, reloadCounterInput} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        counterName: state.countersPage.counterNameInput,\r\n        counterDomen: state.countersPage.counterDomenInput\r\n    }\r\n}\r\n\r\n\r\nconst AddcounterblockContainer = connect(mapStateToProps, {reloadCounterInput, addCounter})(Addcounterblock)\r\n\r\nexport default AddcounterblockContainer;","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n            <BrowserRouter>\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n            </BrowserRouter>\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counters/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\n\r\nconst LoadingCounters = ()=>{\r\n    return(\r\n            <div className=\"list\">\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n            </div>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nconst Counterslist = (props) => {\r\n\r\n       let counters =  props.countersListData\r\n       let countersElement = []\r\n\r\n       countersElement = counters.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}/> )\r\n\r\n\r\n\r\n       let pagesCount = Math.ceil(props.totalCounters / props.pageSize)\r\n       let pages =[]\r\n       for(let i=1; i<=pagesCount; i++){\r\n           pages.push(i)\r\n       }\r\n       let pagesButtonsElements = pages.map(page => <span className={props.currentPage === page && \"current-page\"}\r\n                                                          onClick={() => {props.changePage(page)}}>{page}</span>)\r\n\r\n\r\n\r\n       return <div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Статус</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.list}>\r\n\r\n                       {props.isFetching ? <LoadingCounters /> : countersElement}\r\n                   </div>\r\n                   <div className=\"pages-buttons\">\r\n                       {pagesButtonsElements}\r\n                   </div>\r\n               </div>\r\n\r\n\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCounters, setCurrentPage, setTotalCounters,toggleIsFetching} from \"../../../../redux/counters-reducer\";\r\nimport * as axios from \"axios\";\r\n\r\nclass CounterslistContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`http://195.161.62.108:3000/counters?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.setCounters(response)\r\n            this.props.setTotalCounters(response)\r\n            this.props.toggleIsFetching(false)\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n    changePage = (page) =>{\r\n\r\n\r\n        this.props.setCurrentPage(page)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`http://195.161.62.108:3000/counters?page=${page}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.setCounters(response)\r\n            this.props.toggleIsFetching(false)\r\n        })\r\n\r\n    }\r\n    render(){\r\n      return <Counterslist\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              currentPage={this.props.currentPage}\r\n              isFetching={this.props.isFetching}\r\n              changePage={this.changePage}\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n        pageSize: state.countersPage.pageSize,\r\n        totalCounters: state.countersPage.totalCounters,\r\n        currentPage: state.countersPage.currentPage,\r\n        isFetching: state.countersPage.isFetching\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default CounterslistContainer = connect(mapStateToProps, {setCounters, setCurrentPage,setTotalCounters,toggleIsFetching})(CounterslistContainer)\r\n\r\n","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\n\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n             <Addcounter/>\r\n            <CounterslistContainer />\r\n\r\n\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Counters;","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nconst AddaudienceblockContainer = connect(mapStateToProps, mapDispatchToProps)(Addaudienceblock)\r\n\r\nexport default AddaudienceblockContainer","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n    );\r\n}\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n            </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <div className=\"content\">\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nconst YourProfile = (props) =>{\r\n    let name_input = React.createRef()\r\n    let description_input = React.createRef()\r\n    let reloadNameInput = () =>{\r\n        props.reloadInput(name_input.current.value)\r\n    }\r\n    let reloadDescriptionTextarea = () =>{\r\n        props.reloadTextarea(description_input.current.value)\r\n    }\r\n    return(\r\n            <div className=\"container\">\r\n               <div className={s.profile_cont}>\r\n                   <div className={s.photo_col}>\r\n                       <div className={s.photo_wr}>\r\n                           <p>Добавить фото</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.info_col}>\r\n                       <div className={s.info_inputs}>\r\n                           <input onChange={reloadNameInput} ref={name_input} type=\"text\" className='plain_input'  value={props.userName}  placeholder='Введите ваше имя'/>\r\n                           <textarea onChange={reloadDescriptionTextarea} ref={description_input} className='plain_textarea' value={props.userDescription} id=\"\" cols=\"30\"  rows=\"10\" placeholder='Добавьте описание о себе'></textarea></div>\r\n                       <button className='control_button'>Сохранить</button>\r\n                   </div>\r\n\r\n               </div>\r\n            </div>\r\n    )\r\n}\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {reloadInputActionCreator,reloadTextareaActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        userName: state.profilePage.userName,\r\n        userDescription: state.profilePage.userDescription\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n      reloadInput: (value) =>{\r\n          dispatch(reloadInputActionCreator(value, 'userName'))\r\n      },\r\n        reloadTextarea: (value, inputName) =>{\r\n          dispatch(reloadTextareaActionCreator(value, 'userDescription'))\r\n        }\r\n    }\r\n}\r\n\r\nconst YourProfileContainer = connect(mapStateToProps, mapDispatchToProps)(YourProfile)\r\n\r\nexport default YourProfileContainer;","import React from 'react';\r\n\r\nconst HaveAccess = (props) =>{\r\n    return(\r\n            <div className=\"container\">\r\n              <p>hj</p>\r\n            </div>\r\n    )\r\n}\r\nexport default HaveAccess;","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nconst ProfileSettings = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n               <YourProfileContainer />\r\n               <HaveAccess />\r\n            </div>\r\n    )\r\n}\r\nexport default ProfileSettings;","import React from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst LoginBlock = (props) => {\r\n    let emailInput = React.createRef()\r\n    let passwordInput = React.createRef()\r\n\r\n    let onSendClick = () =>{\r\n        if(emailInput.current.value == ''){\r\n            props.setEmailInputState('empty_danger')\r\n        }\r\n        else if(passwordInput.current.value == ''){\r\n            props.setPasswordInputState('empty_danger')\r\n        }\r\n        else{\r\n\r\n            props.sendLoginRequest()\r\n\r\n        }\r\n\r\n        props.toggleButtonDisability(true)\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    let onEmailChange = () =>{\r\n        props.reloadEmailInput(emailInput.current.value)\r\n        props.setEmailInputState('normal')\r\n        props.setLoginFormState('normal')\r\n        props.toggleButtonDisability(false)\r\n    }\r\n\r\n    let onPasswordChange = () =>{\r\n        props.reloadPasswordInput(passwordInput.current.value)\r\n        props.setPasswordInputState('normal')\r\n        props.setLoginFormState('normal')\r\n        props.toggleButtonDisability(false)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n          <div className=\"container\">\r\n\r\n\r\n\r\n              <div className=\"login_block\">\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <div className={s.false_alert}><p>{props.loginFormState === 'normal' ? ' ' : 'Невереные данные'}</p></div>\r\n                              <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                              <div className={props.emailInputState == 'normal' ? s.input_wr : s.input_wr + \" \" + s.danger}>\r\n                                  <p className={s.input_danger}>Введите почту</p>\r\n                                  <input type=\"text\" placeholder=\"Введите почту\"\r\n                                         onChange={onEmailChange}\r\n                                         value={props.emailInput}\r\n                                         ref={emailInput}/>\r\n                              </div>\r\n                              <div className={props.passwordInputState == 'normal' ? s.input_wr : s.input_wr + \" \" + s.danger}>\r\n                                  <p className={s.input_danger}>Введите пароль</p>\r\n                                  <input type=\"password\" placeholder=\"Введите пароль\" onChange={onPasswordChange} value={props.passwordInput} ref={passwordInput}/>\r\n                              </div>\r\n                              <button disabled={props.isButtonDisabled} onClick={onSendClick}>Отправить</button>\r\n                              {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                              <p className={s.dont_reg_yet}>Ещё нет аккаунта? <NavLink to='signup'>Зарегистрируйтесь</NavLink></p>\r\n                          </div>\r\n                          :\r\n                          <div>Вы авторизованы</div>\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport axios from 'axios'\r\nimport {connect} from \"react-redux\";\r\nimport {setProfileData, reloadInput, setToken, setInputState,\r\n    toggleIsFetching, setLoginFormState, toggleLoginButtonDisability} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n\r\n    sendLoginRequest = () =>{\r\n        this.props.toggleIsFetching(true)\r\n        axios.post('http://nikrainev.ru:3000/auth/login',{\"email\":this.props.emailInput, \"password\":this.props.passwordInput})\r\n                .then(response => {\r\n\r\n                    this.props.setToken(response.data.token)\r\n                    this.props.toggleIsFetching(false)\r\n                    if(response.data.message == \"Auth successful\"){\r\n                        document.cookie = 'token='+response.data.token+'; max-age=360000'\r\n                        document.cookie = 'email='+this.props.emailInput+'; max-age=360000'\r\n                        document.cookie = 'password='+this.props.passwordInput+'; max-age=360000'\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this.props.toggleIsFetching(false)\r\n                    this.props.setLoginFormState('false_alert')\r\n                    if(error.response.data.message === \"Auth failed\"){\r\n\r\n                    }\r\n\r\n                })\r\n\r\n\r\n    }\r\n    reloadEmailInput = (value) =>{\r\n        this.props.reloadInput('emailInput',value)\r\n    }\r\n    reloadPasswordInput = (value) =>{\r\n        this.props.reloadInput('passwordInput',value)\r\n    }\r\n\r\n    setEmailInputState = (value) =>{\r\n        this.props.setInputState('emailInputState',value)\r\n    }\r\n    setPasswordInputState = (value) =>{\r\n        this.props.setInputState('passwordInputState',value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n            <LoginBlock emailInput={this.props.emailInput}\r\n                       passwordInput={this.props.passwordInput}\r\n                       emailInputState={this.props.emailInputState}\r\n                       passwordInputState={this.props.passwordInputState}\r\n                       isFetching={this.props.isFetching}\r\n                       loginFormState={this.props.loginFormState}\r\n                       isButtonDisabled={this.props.isLoginButtonDisabled}\r\n                       isAuth={this.props.isAuth}\r\n                       reloadEmailInput={this.reloadEmailInput}\r\n                       reloadPasswordInput={this.reloadPasswordInput}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n                       setEmailInputState={this.setEmailInputState}\r\n                       setPasswordInputState={this.setPasswordInputState}\r\n                       setLoginFormState={this.props.setLoginFormState}\r\n                       toggleButtonDisability={this.props.toggleLoginButtonDisability}\r\n\r\n\r\n\r\n\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        emailInput: state.auth.emailInput,\r\n        passwordInput: state.auth.passwordInput,\r\n        isAuth: state.auth.isAuth,\r\n        emailInputState: state.auth.emailInputState,\r\n        passwordInputState: state.auth.passwordInputState,\r\n        isFetching: state.auth.isFetching,\r\n        loginFormState: state.auth.loginFormState,\r\n        isLoginButtonDisabled: state.auth.isLoginButtonDisabled\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {setProfileData,reloadInput,setToken,setInputState,\r\n            toggleIsFetching,setLoginFormState, toggleLoginButtonDisability})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default  ProfileContainer = connect(mapStateToProps)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst AuthForm = (props) =>{\r\n    return(\r\n            <div className=\"signup_form\">\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>Введите логин</p>\r\n                    <input className=\"plain_input\" placeholder='Придумайте Логин' type=\"text\"/>\r\n                </div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>Введите почту</p>\r\n                    <input className=\"plain_input\" placeholder='Ваша почта' type=\"text\"/>\r\n                </div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>Введите пароль</p>\r\n                    <input className=\"plain_input\" placeholder='Ваш пароль'  type=\"password\"/>\r\n                </div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>Повторите пароль</p>\r\n                    <input className=\"plain_input\" placeholder='Повторите пароль' type=\"password\"/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n    let onSendClick = () =>{\r\n\r\n    }\r\n\r\n\r\n    return  (\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                   <AuthForm />\r\n                </div>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport axios from 'axios'\r\nimport {connect} from \"react-redux\";\r\nimport {reloadInput, setSignUpInputDanger} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <SignUpBlock\r\n                loginInput={this.props.loginInput}\r\n                emailInput={this.props.emailInput}\r\n                passwordInput={this.props.passwordInput}\r\n                repeatPasswordInput={this.props.repeatPasswordInput}\r\n                loginDanger={this.props.loginDanger}\r\n                emailDanger={this.props.emailDanger}\r\n                passwordDanger={this.props.passwordDanger}\r\n                repeatPasswordDanger={this.props.repeatPasswordDanger}\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        loginInput: state.auth.loginInput,\r\n        emailInput: state.auth.emailInput,\r\n        passwordInput: state.auth.passwordInput,\r\n        repeatPasswordInput: state.auth.repeatPasswordInput,\r\n        loginDanger: state.auth.loginDanger,\r\n        emailDanger: state.auth.emailDanger,\r\n        passwordDanger: state.auth.passwordDanger,\r\n        repeatPasswordDanger: state.auth.repeatPasswordDanger\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {reloadInput,setSignUpInputDanger})(SignUpContainer)","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\nimport Sidebar from \"./components/sidebar/sidebar.jsx\";\nimport NavbarContainer from './components/navbar/navbarContainer.jsx';\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nconst App = ()=> {\n\n    return (\n            <BrowserRouter >\n                <div className=\"app-wrapper\">\n                    <NavbarContainer />\n                    <div className=\"row\">\n                        <Sidebar />\n                        {/* <Redirect exact from='/' to='/summary'  /> */}\n                        <Route path='/summary'  render={ () => <Summary  /> } />\n                        <Route path='/counters' render={() => <Counters />}/>\n                        <Route path='/audiences' render={() => <Audiences />} />\n                        <Route path='/profile' render={() => <ProfileContainer />} />\n                        <Route path='/profilesettings' render={() => <ProfileSettings />} />\n                        <Route path='/login' render={()=> <LoginContainer />} />\n                        <Route path='/signup' render={()=> <SignUpContainer />} />\n\n\n                    </div>\n                </div>\n\n            </BrowserRouter>\n\n    )\n\n\n}\n\n\nexport default App;\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(\n            <Provider store={store}><App  /></Provider> ,\n            document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}