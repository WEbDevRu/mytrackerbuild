{"version":3,"sources":["components/common/common.module.scss","assets/icons/small-loading.svg","components/profile/profilesettings/yourFriends/yourFriends.module.scss","components/profile/friends/usersList/usersList.module.scss","assets/icons/menu/hamburger.svg","assets/icons/menu/summary.svg","assets/icons/menu/eye.svg","assets/icons/menu/friend.svg","assets/icons/menu/settings.svg","assets/icons/menu/short-menu.svg","assets/icons/menu/profile.svg","assets/icons/os/android.svg","assets/icons/os/windows.svg","assets/icons/os/apple.svg","assets/icons/os/macos.svg","assets/icons/os/linux.svg","assets/icons/os/undefined.svg","assets/icons/emptyUsers.svg","assets/icons/loading.svg","components/content/audiences/audienceslist/audienceslist.module.scss","assets/icons/users.svg","assets/summary-bg.jpg","assets/icons/mail-open.svg","components/sidebar/sidebar.module.scss","components/profile/friends/friends.module.scss","components/profile/signup/signup.module.scss","assets/icons/menu/auditories.svg","components/content/summary/daystat/daystat.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/content/counters/countersLists/counterslist.module.scss","serviceWorker.js","api/counters-api.js","api/users-api.js","redux/counters-reducer.js","redux/audiences-reducer.js","api/summary-api.js","redux/selectors/summary-selectors.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/app-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","redux/selectors/app-selectors.js","components/sidebar/sidebarContainer.jsx","utils/mongoDate.js","components/common/loadMore.jsx","components/content/counters/counterPage/usersList/usersList.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","hoc/withAuthRedirect.js","components/common/loadingSchemes.jsx","components/content/summary/summary.jsx","components/common/formControls.jsx","utils/validation.js","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","redux/selectors/counters-selectors.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/countersLists/shortcounter/shortcounter.jsx","components/common/pagination/pagination.jsx","components/content/counters/countersLists/yourCounters/yourCountersList.jsx","components/content/counters/countersLists/yourCounters/yourCountersListContainer.jsx","components/content/counters/countersLists/friendsCounters/friendsCountersList.jsx","components/content/counters/countersLists/friendsCounters/friendsCountersListContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","utils/textTransformation.js","components/common/editinput.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/yourFriends/yourFriends.jsx","redux/selectors/profileselectors.js","components/profile/profilesettings/yourFriends/yourFriendsContainer.jsx","components/profile/profilesettings/profilesettings.jsx","components/common/background.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","components/profile/friends/newFriends/newFriends.jsx","components/profile/friends/newFriends/newFriendsContainer.jsx","components/profile/friends/usersList/usersList.jsx","components/profile/friends/usersList/usersListContainer.jsx","components/profile/friends/friends.jsx","components/content/counters/counterPage/counterInfo/counterInfo.jsx","components/content/counters/counterPage/counterInfo/counterInfoContainer.jsx","components/content/counters/counterPage/usersList/usersListContainer.jsx","components/content/counters/counterPage/counterPage.jsx","components/userPage/userPage.jsx","redux/selectors/users-selectors.js","components/userPage/userPageContainer.jsx","App.js","index.js","components/profile/login/login.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/userPage/userPage.module.scss","components/content/counters/counterPage/counterInfo/counterInfo.module.scss","components/profile/friends/newFriends/newFriends.module.scss","components/content/counters/countersLists/shortcounter/shortcounter.module.scss","assets/icons/h1-block/add.svg","components/content/audiences/addaudience/addaudience.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","assets/icons/done.svg","assets/icons/plus.svg","components/content/counters/counterPage/usersList/usersList.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","baseURL","countersAPI","data","post","headers","store","getState","auth","token","then","response","catch","error","console","warn","page","limit","get","params","counterId","usersAPI","tysId","initialState","pageSize","pixelCode","yourCounters","counterslistData","totalCounters","friendsCounters","currentCounter","counterInfo","counterUsers","totalUsers","setYourCounters","countersData","type","setYourTotalCounters","setFriendsCounters","setFriendsTotalCounters","countersReducer","state","action","newCounter","id","counterData","_id","name","domen","dayusers","allusers","status","items","totalDocs","usersPage","users","audiencelistData","description","counters","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","inputName","value","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","summaryAPI","graphicArr","getSummaryInfo","summaryPage","summaryInfo","getSummaryGraphic","graphicData","getSummaryUsers","summaryUsers","getPageSize","getTotalUsers","dayUsers","dayClicks","summaryReducer","clicks","profileAPI","put","proposals","header","profileActionsAPI","userId","delete","soName","company","avatar","totalProfiles","undefined","profilesList","friendsList","totalFriends","deletedFriend","setProfileInfo","setProposals","setFriendsList","friends","getProposals","dispatch","a","getProfilesList","count","totalPages","profileReducer","friendId","avatarData","authedInstance","authAPI","email","password","signUpAPI","login","profileId","regDate","isAuth","isFetching","signUpState","setProfileData","authProfileData","setToken","toggleIsFetching","setSignUpState","authReducer","isInitialized","menuState","appReducer","userInfo","usersReducer","reducers","combineReducers","countersPage","audiencePage","profilePage","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","Sidebar","props","className","s","sidebar","sidebar_closed","backgoundType","backdrop_filter","selectSideBarClassName","sidebar_top","logo","hamburger","onClick","toggleMenuState","src","hamburgerIcon","alt","sidebar_menu","onMouseOver","onmouseover","onMouseOut","onmouseout","to","activeClassName","active","link_item","menu_icon","summaryIcon","eyeIcon","friendsIcon","settingsIcon","profile_cont","shortMenuIcon","logout","empty_img","profileIcon","user_login","profileLogin","getMenuState","connect","deleteProfileData","getAvatar","useCookies","removeCookie","useState","sideBarBackGround","setSideBarBackGround","pageName","useLocation","useEffect","pathname","mongoDate","inputDate","d","Date","dateNow","dateFormatter","Intl","DateTimeFormat","timeFormatter","hour","minute","millieSecondsCompare","firstDate","secondDate","comparativeDate","now","parse","getHours","getMinutes","getSeconds","getMilliseconds","format","date","time","seconds","LoadMoreComponent","pagesCount","Math","ceil","pages","inizialized","currentPage","load_more","changePage","disabled","all_loaded","LoadMore","initialized","setState","pageChanger","getCurrentPage","loaders","pagesSelector","emptyBlock","prevProps","prevState","snapshot","push","loader","React","Component","Time","styled","div","Sessions","Referrer","City","Country","Os","ShortUserLine","NavLink","LoadingUser","ListDivider","Visits","span","NoUsersBlock","NoUsers","NoUsersIcon","ShortUser","shortUser","sessions","referrer","flag","country","city","os","AndroidIcon","WindowsIcon","iOSIcon","MacOsIcon","LinuxIcon","UndefinedOsIcon","selectOsIcon","UsersList","usersList","lastDivider","forEach","item","index","divider","map","user","key","sessionsNumber","getMoreUsers","Col","height","ColInfo","show","css","ColBlock","ColWr","ColTime","p","ColNumber","ColTimesRow","ColDay","Graphiccol","colheight","colHeight","infoState","setInfoState","e","innerWidth","clientX","changeInfoState","colValue","colData","GraphicWr","GraphicColsWR","GraphicBottom","GraphicName","h2","hide","NowP","Hours24P","Hours48P","NowDot","Hours24Dot","Hours48Dot","memo","hideH","setHideH","hRef","useRef","maxUsersCount","coldata","usersCount","max","apply","graphicColElements","onMouseLeave","ref","onMouseMove","current","getBoundingClientRect","x","width","changeHState","KeyNumbersWr","KeyNumberBlock","KeyNumberContent","KeyNumberName","KeyNumber","Daystat","graphicInfo","mapStateToProps","WithAuthRedirect","CountersListLoading","loading_scheme","add_button","elem","counters_table_head","list_ul","page_buttons","page_button","FriendsPageLoader","text_line","list","big_ul","SummaryPageLoader","h1","day_stat_row","day_stat","graphic","load_more_bottom","UserPageLoader","user_stat_row","user_main_block","user_h3","user_blocks_row","user_block","user_block_col_12","getSummaryData","Promise","all","clearSummaryData","pageState","setPageState","Input","input","meta","placeholder","input_wr","touched","danger","input_danger","Textarea","textareaRef","style","scrollHeight","textarea_wr","cols","rows","PasswordScoreInput","strengthValue","strengthText","password_strength","ButtonStyled","button","primary","Button","required","checkLogin","test","checkEmail","checkPassword","passwordsMatch","allValues","AddCounterReduxForm","reduxForm","addcounter_form","onSubmit","handleSubmit","form_danger","loading_bar","Field","component","validate","submitting","PixelCodeBlock","copySuccess","setCopySuccess","textAreaRef","codeBlock","target","select","codeTextarea","copyButton_wr","document","execCommand","focus","setTimeout","copied_label","FetchingForm","form_fetching","loader_icon","Addcounterblock","values","postCounter","counterDomen","blockState","last_text","makeOneMore","textSelector","blockSelector","getPixelCode","getCurrentCounterInfo","getCurrentCounterUsers","getYourCounters","getYourTotalCounters","getFriendsCounters","getFriendsTotalCounters","reset","setBlockState","log","Addcounterbutton","addIcon","Addcounter","exact","path","render","Shortcounter","short_counter","owner","PaginationComponent","pagesButtonsElements","Loader","Pagination","LoadingCounter","loading_counter","EmptyBlock","noCounters","plus","YourCountersList","countersElement","countersListData","firstLoader","table_head","YourCountersListContainer","changeYourCounters","FriendsCountersList","FriendsCountersListContainer","changeFriendsCounters","getCounters","Addaudienceblock","clicked","event","deleteCounter","getAttribute","countersOptionsElements","countersSelect","countersElements","audience_badge","counterid","version","viewBox","xmlns","fill","name_input","createRef","description_input","counters_select","add_form","onChange","reloadInput","nameInput","descriptionName","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addCounter","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","offsetText","text","textarr","split","isUrl","lineNumber","line","wordNumber","href","EditInput","inputText","inputEditMode","wasUpdated","changeCondition","inputState","putInfo","reloadNameInput","currentTarget","withedit_block","loadingImg","done_check","doneImg","onBlur","autoFocus","withedit_current","EditTextarea","wrap","YourProfile","photo_col","photo_wr","info_col","info_inputs","putProfileInfo","YourProfileContainer","getProfileInfo","newInfo","LoadingProfile","s2","loading_profile","NoFriends","noFriends","friendIcon","YourFriends","buttonSelector","buttonId","delete_button","deleteFriend","friend","names_row","description_p","yourFriends","addToFriendsList","selectProfilesList","getTotalProfiles","getProposalsList","getFriends","getTotalFriends","getDeletedFriend","YourFriendsContainer","changeButtonState","copyFriends","listButtons","deleteFriendLocal","friendsCopy","getFriendsList","friendsFetching","addFriendsList","friendsPage","message","BackGround","background","SuccessForm","redirect","setRedirect","success_auth","LoginReduxForm","form_danger_wr","dont_reg_yet","LoginBlock","login_container","login_block","sendLoginRequest","emailInput","passwordInput","LoginContainer","loginThunkCreator","cookie","stopSubmit","_error","Profile","ProfileContainer","SignUpReduxForm","SignUpFormBlock","signup_form","sendSignUpRequest","ProfileFormReduxForm","profile_form","ProfileFormBlock","profile_form_wr","add_photo_row","photo_cont","add_photo","SignUpBlock","signup_container","signup_block","SignUpContainer","signUpThunkCreator","NewFriends","proposalsList","buttonsState","buttons_row","deny","denyProposal","chanhgeButtonsState","accept","acceptProposal","proposal","noProposals","openfolder","newFriends","NewFriendsContainer","copyButtonsState","profile","buttonsStates","deleteProposal","postProposal","profilesArr","toString","friendStatus","UsersListContainer","copyListButtons","CounterInfo","names","results","getCurrentCounter","setCurrentCounter","clearCurrentCounter","useParams","UserPage","userSessions","awayTime","sessionCount","date_divider","session","sessionNumber","session_line","entryTime","notdefined","time_line","row","block","col_6","h3","label_row","referer","ipInfo","query","sessions_cont","device_info","h4","col_4","col_head","device","browser","majorVersion","vendor","model","cpu","architecture","countryCode","regionName","lat","lon","isp","org","as","zip","timezone","col_12","user_agent","languages","getUserInfoFromState","getUserSessionsList","createSelector","sessionsArray","nextIndex","makeSessionPare","enterTime","Object","keys","goAwayTime","unshift","getSessions","clearUserInfo","getUserInfo","App","InitializingApp","promise","getCookie","matches","RegExp","replace","decodeURIComponent","getAuth","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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":"static/js/main.1eb4ae7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"withedit_current\":\"common_withedit_current__3mFwP\",\"withedit_block\":\"common_withedit_block__11_W2\",\"plain_input\":\"common_plain_input__3zzxU\",\"plain_textarea\":\"common_plain_textarea__237u6\",\"loading_bar\":\"common_loading_bar__TjjZG\",\"loading\":\"common_loading__2aPGq\",\"done_check\":\"common_done_check__3kKij\",\"input_wr\":\"common_input_wr__1j_qc\",\"form_danger\":\"common_form_danger__2ZFlS\",\"load_more\":\"common_load_more__mlkAq\",\"all_loaded\":\"common_all_loaded__11aHE\",\"loading_scheme\":\"common_loading_scheme__tcTaS\",\"elem\":\"common_elem__2I5_7\",\"loadingScheme\":\"common_loadingScheme__1FfKI\",\"add_button\":\"common_add_button__7A7b-\",\"counters_table_head\":\"common_counters_table_head__2MHPb\",\"list_ul\":\"common_list_ul__3hmvF\",\"page_buttons\":\"common_page_buttons__eOPiv\",\"page_button\":\"common_page_button__m6fX0\",\"text_line\":\"common_text_line__2xBBE\",\"big_ul\":\"common_big_ul__1WsLo\",\"list\":\"common_list__uNHVH\",\"h2\":\"common_h2__21ZCw\",\"h1\":\"common_h1__2O9hG\",\"day_stat_row\":\"common_day_stat_row__3udZa\",\"day_stat\":\"common_day_stat__2TK2H\",\"graphic\":\"common_graphic__1Ahcp\",\"load_more_bottom\":\"common_load_more_bottom__1lG80\",\"user_stat_row\":\"common_user_stat_row__I2K79\",\"user_main_block\":\"common_user_main_block__2QZpq\",\"user_h3\":\"common_user_h3__2J9B7\",\"user_blocks_row\":\"common_user_blocks_row__18px6\",\"user_block\":\"common_user_block__1hnvN\",\"user_block_col_12\":\"common_user_block_col_12__1eYs_\",\"danger\":\"common_danger__3DTtg\",\"placeholder\":\"common_placeholder__1Y8B_\",\"input_danger\":\"common_input_danger__2Mgji\",\"textarea_wr\":\"common_textarea_wr__1Owu_\",\"password_strength\":\"common_password_strength__1v8as\",\"smoothappearance\":\"common_smoothappearance__2t_Cv\",\"tooWeak\":\"common_tooWeak__24q-F\",\"weak\":\"common_weak__ekDY8\",\"medium\":\"common_medium__2cCV6\",\"good\":\"common_good__3C1A3\"};","module.exports = __webpack_public_path__ + \"static/media/small-loading.371c3637.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"yourFriends_delete_button__1bT4Z\",\"yourFriends\":\"yourFriends_yourFriends__3yW1r\",\"noFriends\":\"yourFriends_noFriends__13UPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"usersList_add_button__2fVWQ\",\"usersList\":\"usersList_usersList__2v1uk\"};","module.exports = __webpack_public_path__ + \"static/media/hamburger.8a529ed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary.ea33d762.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.a165d003.svg\";","module.exports = __webpack_public_path__ + \"static/media/friend.d29028be.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.b376bf7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/short-menu.e1c4065d.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.7918bc4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/android.36571833.svg\";","module.exports = __webpack_public_path__ + \"static/media/windows.9ca90a4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple.0c0e528a.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.6ac68ad4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.a000e4fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/undefined.66a30df1.svg\";","module.exports = __webpack_public_path__ + \"static/media/emptyUsers.c7042294.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.973560ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","module.exports = __webpack_public_path__ + \"static/media/users.7ba66cd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary-bg.e717e35f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mail-open.6a43bbb7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"backdrop_filter\":\"sidebar_backdrop_filter__1Z49B\",\"sidebar_closed\":\"sidebar_sidebar_closed__1ZL1V\",\"logo\":\"sidebar_logo__2Z-nV\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\",\"link_item\":\"sidebar_link_item__KDcsE\",\"active\":\"sidebar_active__3Sfny\",\"menu_icon\":\"sidebar_menu_icon__k-nvb\",\"empty_img\":\"sidebar_empty_img__PrQev\",\"profile_cont\":\"sidebar_profile_cont__LnmQi\",\"user_login\":\"sidebar_user_login__3oBZN\",\"sidebar_top\":\"sidebar_sidebar_top__2t6gY\",\"hamburger\":\"sidebar_hamburger__3ytg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"friends_line__CTaIr\",\"names_row\":\"friends_names_row__I9xPa\",\"company\":\"friends_company__3IPjv\",\"description\":\"friends_description__HUJS-\",\"description_p\":\"friends_description_p__j17_s\",\"load_more\":\"friends_load_more__26ODF\",\"loading_profile\":\"friends_loading_profile__Us8VP\",\"loading\":\"friends_loading__3VScv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"signup_signup_form__7HJVd\",\"dont_reg_yet\":\"signup_dont_reg_yet__239zS\",\"input_wr\":\"signup_input_wr__WIkn0\",\"input_danger\":\"signup_input_danger__2AIPg\",\"password_strength\":\"signup_password_strength__peCEw\",\"smoothappearance\":\"signup_smoothappearance__4VAwc\",\"tooWeak\":\"signup_tooWeak__Vo_W9\",\"weak\":\"signup_weak__bx5Hx\",\"medium\":\"signup_medium__1OxDa\",\"good\":\"signup_good__2KcH1\",\"loading_bar\":\"signup_loading_bar__3cVFs\",\"loading\":\"signup_loading__1IMnh\",\"active\":\"signup_active__3mlkR\",\"auth_info\":\"signup_auth_info__eHPph\",\"profile_form_wr\":\"signup_profile_form_wr__3zHGM\",\"profile_form\":\"signup_profile_form__hgX0S\",\"photo_cont\":\"signup_photo_cont__-6OF5\",\"add_photo_row\":\"signup_add_photo_row__AGbTF\",\"signup_container\":\"signup_signup_container__1MW0R\",\"signup_block\":\"signup_signup_block__2gMeh\",\"h1\":\"signup_h1__2FFgC\"};","module.exports = __webpack_public_path__ + \"static/media/auditories.09d367fd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\",\"form_fetching\":\"addcounter_form_fetching__2ejXt\",\"loading\":\"addcounter_loading__2P9GN\",\"codeTextarea\":\"addcounter_codeTextarea__7mqoV\",\"codeBlock\":\"addcounter_codeBlock__9xNrS\",\"copyButton_wr\":\"addcounter_copyButton_wr__wnIbR\",\"copied_label\":\"addcounter_copied_label__lz_ik\",\"last_text\":\"addcounter_last_text__3txDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3i-U9\",\"name\":\"counterslist_name__1Koxx\",\"domen\":\"counterslist_domen__X1vQX\",\"dayusers\":\"counterslist_dayusers__5YOGM\",\"totalusers\":\"counterslist_totalusers__3O-N2\",\"status\":\"counterslist_status__1l2aq\",\"loading_counter\":\"counterslist_loading_counter__DThYG\",\"loading\":\"counterslist_loading__1PlA5\",\"list\":\"counterslist_list__34VOf\",\"noCounters\":\"counterslist_noCounters__39KOr\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/counters'\r\n})\r\n\r\nexport const countersAPI = {\r\n    postCounter(data){\r\n        return axiosInstance.post('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getYourCounters(page, limit){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsCounters(page, limit){\r\n        return axiosInstance.get('/friendscounters', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response=>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getCounterById(counterId){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getCounterUsers(counterId, page, limit){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileUsers(page,limit){\r\n        return axiosInstance.get('/profile', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getUser(tysId){\r\n        return  axiosInstance.get('/user/'+tysId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {countersAPI} from \"../api/counters-api\";\r\nimport store from \"./redux-store\"\r\nimport {reset} from 'redux-form';\r\nimport {usersAPI} from \"../api/users-api\";\r\nlet initialState = {\r\n\r\n        pageSize: 5,\r\n        pixelCode: '',\r\n        yourCounters: {\r\n            counterslistData: [],\r\n            totalCounters: ''\r\n        },\r\n        friendsCounters:{\r\n            counterslistData: [],\r\n            totalCounters: ''\r\n        },\r\n        currentCounter:{\r\n            counterInfo: '',\r\n            counterUsers: '',\r\n            totalUsers: ''\r\n        }\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"counters/ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: action.counterData._id,\r\n                name: action.counterData.name,\r\n                domen: action.counterData.domen,\r\n                dayusers: action.counterData.dayusers,\r\n                allusers: action.counterData.allusers,\r\n                status: action.counterData.status\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                pixelCode: action.pixelCode,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: [newCounter, ...state.counterslistData]\r\n                }\r\n\r\n            }\r\n        }\r\n        case \"counters/CLEAR-PIXEL-CODE\":{\r\n            return {\r\n                ...state,\r\n                pixelCode: ''\r\n            }\r\n        }\r\n        case \"counters/SET-YOUR-COUNTERS\":{\r\n\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: action.countersData.items\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'counters/SET-YOUR-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    totalCounters: action.totalCounters.totalDocs\r\n                }\r\n\r\n            }\r\n        }\r\n        case \"counters/SET-FRIENDS-COUNTERS\":{\r\n\r\n            return {\r\n                ...state,\r\n                friendsCounters: {\r\n                    ...state.friendsCounters,\r\n                    counterslistData: action.countersData.items\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'counters/SET-FRIENDS-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                friendsCounters: {\r\n                    ...state.friendsCounters,\r\n                    totalCounters: action.totalCounters.totalDocs\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        case 'counters/SET-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: action.counterInfo,\r\n                    counterUsers: action.counterUsers.usersPage,\r\n                    totalUsers: action.counterUsers.totalDocs\r\n                }\r\n            }\r\n        }\r\n        case 'counters/CLEAR-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: '',\r\n                    counterUsers: '',\r\n                    totalUsers: ''\r\n                }\r\n            }\r\n        }\r\n        case 'counters/ADD-COUNTER-USERS':{\r\n\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterUsers: [...state.currentCounter.counterUsers, ...action.users]\r\n                }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = (counterData, pixelCode) =>({\r\n    type: 'counters/ADD-COUNTER',\r\n    counterData: counterData,\r\n    pixelCode: pixelCode\r\n})\r\nexport const setYourCounters = (countersData) =>({\r\n    type: 'counters/SET-YOUR-COUNTERS',\r\n    countersData: countersData\r\n})\r\nexport const setYourTotalCounters = (totalCounters) =>({\r\n    type: 'counters/SET-YOUR-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\nexport const setFriendsCounters = (countersData) =>({\r\n    type: 'counters/SET-FRIENDS-COUNTERS',\r\n    countersData: countersData\r\n})\r\n\r\nexport const setFriendsTotalCounters = (totalCounters) => ({\r\n    type: 'counters/SET-FRIENDS-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\n\r\nexport const clearPixelCode = () =>({\r\n    type: 'counters/CLEAR-PIXEL-CODE'\r\n})\r\n\r\nexport const setCurrentCounter = (counterInfo, counterUsers) =>({\r\n    type: 'counters/SET-CURRENT-COUNTER',\r\n    counterInfo: counterInfo,\r\n    counterUsers: counterUsers\r\n})\r\n\r\nexport const clearCurrentCounter = () => ({\r\n    type: 'counters/CLEAR-CURRENT-COUNTER'\r\n})\r\n\r\nexport const addCounterUsers = (users) =>({\r\n    type: 'counters/ADD-COUNTER-USERS',\r\n    users: users\r\n})\r\n\r\nexport const getCounters = () => (dispatch) =>{\r\n    Promise.all([countersAPI.getYourCounters(1, store.getState().countersPage.pageSize), countersAPI.getFriendsCounters(1, store.getState().countersPage.pageSize)]).then(response=>{\r\n        dispatch(setYourCounters(response[0]))\r\n        dispatch(setYourTotalCounters(response[0]))\r\n        dispatch(setFriendsCounters(response[1]))\r\n        dispatch(setFriendsTotalCounters(response[1]))\r\n    })\r\n}\r\n\r\nexport const changeYourCounters = (page) => async (dispatch) =>{\r\n    let response = await countersAPI.getYourCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setYourCounters(response))\r\n    dispatch(setYourTotalCounters(response))\r\n}\r\n\r\nexport const changeFriendsCounters = (page) => async (dispatch) =>{\r\n    let response = await countersAPI.getFriendsCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setFriendsCounters(response))\r\n    dispatch(setFriendsTotalCounters(response))\r\n}\r\n\r\nexport const postCounter = (data) => async (dispatch) => {\r\n\r\n    let response = await countersAPI.postCounter(data)\r\n    dispatch(addCounter(response.newCounter, response.pixelCode))\r\n    dispatch(reset('addcounter-form'))\r\n}\r\n\r\nexport const getCurrentCounter = (counterId) => (dispatch) =>{\r\n    Promise.all([countersAPI.getCounterById(counterId),\r\n        usersAPI.getCounterUsers(counterId, 1, store.getState().countersPage.pageSize)])\r\n            .then(response =>{\r\n        dispatch(setCurrentCounter(response[0], response[1]) )\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n\r\n    let response = await usersAPI.getCounterUsers(store.getState().countersPage.currentCounter.counterInfo._id, page, store.getState().countersPage.pageSize)\r\n    dispatch(addCounterUsers(response.usersPage))\r\n}\r\n\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const summaryAPI = {\r\n    getSummary(){\r\n        return axiosInstance.get('/summary/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getSummaryGraphic(){\r\n        return axiosInstance.get('/summary/graphic', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.graphicArr;\r\n                })\r\n    }\r\n}\r\n","export const getSummaryInfo = (state) =>{\r\n    return state.summaryPage.summaryInfo\r\n}\r\n\r\nexport const getSummaryGraphic = (state) =>{\r\n    return state.summaryPage.graphicData\r\n\r\n}\r\n\r\nexport const getSummaryUsers = (state) =>{\r\n    return state.summaryPage.summaryUsers\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.summaryPage.pageSize\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.summaryPage.totalUsers\r\n}","import {usersAPI} from \"../api/users-api\";\r\nimport {summaryAPI} from \"../api/summary-api\";\r\nimport store from \"./redux-store\"\r\nimport {getSummaryGraphic} from \"./selectors/summary-selectors\";\r\n\r\nlet initialState = {\r\n    summaryInfo:{\r\n       dayUsers: '',\r\n       dayClicks: ''\r\n    },\r\n    summaryUsers: [],\r\n    pageSize: 7,\r\n    totalUsers: '',\r\n    graphicData : []\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n\r\n        case 'SET-SUMMARY-USERS':{\r\n            let users = ''\r\n            if(action.summaryUsers.users){\r\n                users = action.summaryUsers.users\r\n            }\r\n            else{\r\n                users = action.summaryUsers.usersPage\r\n            }\r\n            return {\r\n                ...state,\r\n                summaryUsers: users,\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'ADD-SUMMARY-USERS':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [...state.summaryUsers, ...action.summaryUsers.usersPage],\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'CLEAR-SUMMARY-SELECTOR':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [],\r\n                totalUsers: '',\r\n                graphicData: [],\r\n                summaryInfo:{\r\n                    dayClicks: '',\r\n                    dayUsers: ''\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'SET-SUMMARY-INFO':{\r\n            return {\r\n                ...state,\r\n                summaryInfo:{\r\n                    dayClicks: action.summaryInfo.clicks,\r\n                    dayUsers: action.summaryInfo.users\r\n                }\r\n            }\r\n        }\r\n        case 'SET-GRAPHIC-DATA':{\r\n            return {\r\n                ...state,\r\n                graphicData: action.graphicData\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nconst setSummaryInfo = (summaryInfo) =>({\r\n    type: 'SET-SUMMARY-INFO',\r\n    summaryInfo: summaryInfo\r\n})\r\n\r\n\r\nconst setGraphicData = (graphicData) => ({\r\n    type: 'SET-GRAPHIC-DATA',\r\n    graphicData: graphicData\r\n})\r\n\r\n\r\n\r\nconst setSummaryUsers = (summaryUsers) =>({\r\n    type: 'SET-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\nconst addSummaryUsers = (summaryUsers) =>({\r\n    type: 'ADD-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\n\r\n\r\n\r\nexport const clearSummaryData = () => ({\r\n    type: 'CLEAR-SUMMARY-SELECTOR'\r\n})\r\n\r\nexport const getSummaryData = () => (dispatch) =>{\r\n    Promise.all([usersAPI.getProfileUsers(1, store.getState().summaryPage.pageSize), summaryAPI.getSummary(), summaryAPI.getSummaryGraphic()]).then(response =>{\r\n        dispatch(setSummaryUsers(response[0]))\r\n        dispatch(setSummaryInfo(response[1]))\r\n        dispatch(setGraphicData(response[2]))\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n    let response = await usersAPI.getProfileUsers(page, store.getState().summaryPage.pageSize)\r\n    dispatch(addSummaryUsers(response))\r\n}\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileInfoById(userId){\r\n        return axiosInstance.get('/userid/'+userId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProposals(){\r\n        return axiosInstance.get('/your_proposals/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.proposals;\r\n                })\r\n\r\n    },\r\n\r\n    getProfilesList(page, limit){\r\n        return axiosInstance.get('/profileslist', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsList(page, limit){\r\n        return axiosInstance.get('/friends/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getAvatar(){\r\n        return axiosInstance.get('/avatar', {header: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    }\r\n}\r\n\r\n\r\nexport const profileActionsAPI = {\r\n    postProposal(userId){\r\n        return axiosInstance.post('/proposal/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n\r\n    deleteProposal(userId){\r\n        return axiosInstance.delete('/proposal/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    acceptProposal(userId){\r\n        return axiosInstance.post('/proposals/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    denyProposal(userId){\r\n        return axiosInstance.delete('/proposals/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    deleteFriend(userId){\r\n        return axiosInstance.delete('/delete_friend/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI, profileActionsAPI} from '../api/profile-api'\r\nimport store from \"../redux/redux-store\";\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: '',\r\n    avatar: 'none',\r\n    pageSize: 5,\r\n    totalProfiles: undefined,\r\n    proposals: [],\r\n    profilesList: [],\r\n    friendsList: [],\r\n    totalFriends: undefined,\r\n    deletedFriend: undefined\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'profile/SET-PROFILE-INFO':\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        case 'profile/SET-PROFILES-LIST':\r\n            return {\r\n                ...state,\r\n                profilesList: action.data\r\n            }\r\n        case 'profile/SET-TOTAL-PROFILES':\r\n            return {\r\n                ...state,\r\n                totalProfiles: action.count\r\n\r\n            }\r\n        case 'profile/SET-PROPOSALS':\r\n            return {\r\n                ...state,\r\n                proposals: action.proposals\r\n            }\r\n        case 'profile/SET-FRIENDS-LIST':\r\n            return {\r\n                ...state,\r\n                friendsList: action.friends,\r\n                totalFriends: action.totalDocs\r\n            }\r\n        case 'profile/SET-DELETED-FRIEND':\r\n            return {\r\n                ...state,\r\n                deletedFriend: [action.friendId]\r\n            }\r\n        case 'profile/SET-AVATAR':\r\n            return {\r\n                ...state,\r\n                avatar: action.avatarData\r\n            }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'profile/SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'profile/RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'profile/SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\nexport const setProfilesList = (data) =>({\r\n    type: 'profile/SET-PROFILES-LIST',\r\n    data: data\r\n})\r\n\r\nexport const setTotalProfiles = (count) =>({\r\n    type: 'profile/SET-TOTAL-PROFILES',\r\n    count: count\r\n})\r\n\r\nexport const setProposals = (proposals) => ({\r\n    type: 'profile/SET-PROPOSALS',\r\n    proposals: proposals\r\n})\r\n\r\nexport const setFriendsList = (friends, totalDocs) =>({\r\n    type: 'profile/SET-FRIENDS-LIST',\r\n    friends: friends,\r\n    totalDocs: totalDocs\r\n})\r\n\r\nexport const setDeletedFriend = (friendId)=>({\r\n    type: 'profile/SET-DELETED-FRIEND',\r\n    friendId: friendId\r\n})\r\n\r\nexport const setAvatar = (avatarData) =>({\r\n    type: 'profile/SET-AVATAR',\r\n    avatarData: avatarData\r\n})\r\n\r\n\r\n\r\nexport const getAvatar = () => async (dispatch) =>{\r\n    let response = await profileAPI.getAvatar()\r\n    dispatch(setAvatar(response))\r\n\r\n}\r\n\r\nexport const getProposals = () => async (dispatch)=>{\r\n\r\n    let response = await profileAPI.getProposals()\r\n    dispatch(setProposals(response))\r\n}\r\n\r\nexport const getProfileInfo = () => async (dispatch) =>{\r\n    let response = await profileAPI.getProfileInfo()\r\n    dispatch(setProfileInfo(response))\r\n}\r\n\r\nexport const getProfilesList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getProfilesList(page,limit)\r\n    dispatch(setProfilesList(response.items))\r\n    dispatch(setTotalProfiles(response.totalPages))\r\n\r\n}\r\n\r\nexport const postProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.postProposal(userId)\r\n    if(response.message === 'proposal sended'){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const deleteProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteProposal(userId)\r\n    if(response.message === \"proposal deleted\"){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const acceptProposal = (userId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.acceptProposal(userId)\r\n    if(response.message === \"Friend added\"){\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const denyProposal = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileActionsAPI.denyProposal(userId)\r\n    if (response.message === \"Proposal denied\") {\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const putProfileInfo = (data) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.putProfileInfo(data)\r\n    dispatch(setProfileInfo(response.newInfo))\r\n}\r\n\r\nexport const getFriendsList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page,limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const addFriendsList = (page, limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page, limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const deleteFriend = (userId, buttonId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteFriend(userId)\r\n    if(response.message === \"friend deleted\"){\r\n        dispatch(setDeletedFriend(buttonId))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    }\r\n\r\n}","\r\nimport {authAPI, signUpAPI} from \"../api/auth-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    isFetching: false,\r\n    signUpState: 'signUpForm'\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"auth/SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"auth/SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"auth/DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'auth/TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case 'auth/TOGGLE_SIGNUP_STATE':\r\n            return {\r\n                ...state,\r\n                signUpState: action.signUpState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"auth/SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const setToken = (token) =>({\r\n    type: 'auth/SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'auth/DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'auth/SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'auth/TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\n\r\nexport const setSignUpState = (signUpState) =>{return {\r\n    type: 'auth/TOGGLE_SIGNUP_STATE',\r\n    signUpState: signUpState\r\n}}\r\n\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message == \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=360000'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=360000'\r\n                    authAPI.getAuthInfo()\r\n                            .then(response => {\r\n                                console.log(response)\r\n\r\n                                dispatch(setProfileData(response))\r\n                            })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(stopSubmit('login-form', {_error : \"Неверные данные\"}))\r\n                dispatch(toggleIsFetching(false))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            dispatch(toggleIsFetching(false))\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(setSignUpState('userInfoForm'))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message == \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                authAPI.getAuthInfo()\r\n                                        .then(response => {\r\n                                            dispatch(setProfileData(response))\r\n                                        })\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch(toggleIsFetching(false))\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(stopSubmit('signup-form', {email : 'Данная почта уже зарегистрирована'}))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(stopSubmit('signup-form', {login : 'Данный логин уже зарегистрирован'}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const AuthThunkCreator = () => async (dispatch)=>{\r\n    let getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    let getAuth  = async() =>{\r\n        let response  = await authAPI.getAuthInfo()\r\n        dispatch(setProfileData(response))\r\n\r\n    }\r\n\r\n\r\n    if (getCookie('email') && getCookie('password')){\r\n       let response = await authAPI.postLoginInfo(getCookie('email'), getCookie('password'))\r\n            dispatch(setToken(response.token))\r\n            await getAuth()\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {AuthThunkCreator} from './auth-reducer'\r\n\r\n\r\nlet initialState = {\r\n    isInitialized: false,\r\n    menuState: 'collapsed'\r\n}\r\n\r\n\r\nconst appReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"app/INITIALIZED_SUCCESS\":\r\n            return{\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        case \"app/TOGGLE-MENU-STATE\":\r\n            let menuState = ''\r\n            switch (state.menuState ){\r\n                case 'collapsed':\r\n                    menuState = 'closed';\r\n                    break;\r\n                case 'closed':\r\n                    menuState = 'collapsed';\r\n                    break\r\n                default: menuState = 'closed'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                menuState: menuState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: \"app/INITIALIZED_SUCCESS\"})\r\n\r\n\r\nexport const InitializingApp = () => (dispatch) =>{\r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n                dispatch(setInitializedSuccess())\r\n            })\r\n}\r\n\r\nexport const toggleMenuState = () => ({\r\n    type: \"app/TOGGLE-MENU-STATE\"\r\n})\r\n\r\n\r\nexport  default appReducer\r\n","\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    userInfo: ''\r\n}\r\n\r\nlet usersReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case 'users/SET-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        }\r\n        case 'users/CLEAR-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: ''\r\n            }\r\n        }\r\n        default :{\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst setUserInfo = (userInfo) =>({\r\n    type: 'users/SET-USER-INFO',\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const clearUserInfo = () => ({\r\n    type: 'users/CLEAR-USER-INFO'\r\n})\r\n\r\nexport const getUserInfo = (tysId) => async (dispatch) =>{\r\n    let response = await usersAPI.getUser(tysId)\r\n    dispatch(setUserInfo(response))\r\n\r\n}\r\n\r\nexport default usersReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport countersReducer from \"./counters-reducer\"\r\nimport audiencesReducer from \"./audiences-reducer\"\r\nimport summaryReducer from \"./summary-reducer\"\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\"\r\nimport appReducer from \"./app-reducer\"\r\nimport usersReducer from './users-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    users: usersReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.store = store\r\nexport default store","import React, {useEffect, useState} from 'react';\r\nimport s from './sidebar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport hamburgerIcon from '../../assets/icons/menu/hamburger.svg'\r\nimport summaryIcon from '../../assets/icons/menu/summary.svg'\r\nimport eyeIcon from '../../assets/icons/menu/eye.svg'\r\nimport auditoriesIcon from '../../assets/icons/menu/auditories.svg'\r\nimport friendsIcon from '../../assets/icons/menu/friend.svg'\r\nimport settingsIcon from '../../assets/icons/menu/settings.svg'\r\nimport shortMenuIcon from '../../assets/icons/menu/short-menu.svg'\r\nimport profileIcon from '../../assets/icons/menu/profile.svg'\r\nlet Sidebar = (props) =>{\r\n\r\n    /* let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    } */\r\n\r\n    let logout = () =>{\r\n        props.logout()\r\n    }\r\n\r\n    let selectSideBarClassName = () =>{\r\n        let className = ''\r\n        if(props.menuState === 'collapsed'){\r\n            className = s.sidebar\r\n        }\r\n        else{\r\n            className = s.sidebar + \" \" + s.sidebar_closed\r\n        }\r\n\r\n        if(props.backgoundType === 'backdrop_filter'){\r\n            className = className + \" \" + s.backdrop_filter\r\n        }\r\n\r\n        return className\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={selectSideBarClassName()}>\r\n        <div className={s.sidebar_top}>\r\n            <div className={s.logo}>Трекер</div>\r\n            <div className={s.hamburger} onClick={()=>{props.toggleMenuState()}}>\r\n                <img src={hamburgerIcon} alt=\"\"/>\r\n            </div>\r\n             <div className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <NavLink to={'/summary'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                    <div className={s.menu_icon}><img src={summaryIcon} alt=\"\"/></div>\r\n                    <p>Сводка</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/counters'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={eyeIcon} alt=\"\"/></div>\r\n                     <p>Счётчики</p>\r\n                 </NavLink>\r\n                 {/* <NavLink to={'/audiences'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={auditoriesIcon} alt=\"\"/></div>\r\n                     <p>Аудитории</p>\r\n                 </NavLink> */}\r\n                 <NavLink to={'/friends'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={friendsIcon} alt=\"\"/></div>\r\n                     <p>Друзья</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/profilesettings'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={settingsIcon} alt=\"\"/></div>\r\n                     <p>Настройки</p>\r\n                 </NavLink>\r\n             </div>\r\n        </div>\r\n            <div className={props.menuState === 'collapsed' ? s.profile_cont : s.profile_cont + \" \" + s.sidebar_closed}>\r\n              <div className=\"dropdown-menu\">\r\n                  <div className='dropdown-menu-dots'><img  src={shortMenuIcon} alt=\"\"/></div>\r\n                  <div className=\"dropdown-menu-content\">\r\n                      {props.isAuth === true ?\r\n                              <div className=\"dropdown-menu-link\" onClick={logout}>Выйти</div> :\r\n                              <NavLink to=\"/login\" className='dropdown-menu-link' activeClassName='active'>Войти</NavLink>}\r\n                  </div>\r\n              </div>\r\n               <div className={s.empty_img}>\r\n                   <img src={profileIcon} alt=\"\"/>\r\n               </div>\r\n                <div className={s.user_login}>\r\n                    {props.isAuth === true ? <NavLink to=\"/profile\" >{props.profileLogin}</NavLink> : \"Профиль\" }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","export const getMenuState = (state) =>{\r\n    return state.app.menuState\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Sidebar from \"./sidebar\";\r\nimport {connect} from \"react-redux\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {deleteProfileData, setProfileData, setToken} from \"../../redux/auth-reducer\";\r\nimport {toggleMenuState} from '../../redux/app-reducer'\r\nimport {getMenuState} from \"../../redux/selectors/app-selectors\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {getAvatar} from \"../../redux/profile-reducer\";\r\n\r\nlet SideBarContainer = (props) => {\r\n   const [cookies, setCookie, removeCookie] = useCookies([\"email\", \"password\"]);\r\n   const [sideBarBackGround, setSideBarBackGround ] = useState('')\r\n   const pageName = useLocation()\r\n   useEffect(()=>{\r\n       if(pageName.pathname === '/login' || pageName.pathname === '/signup'){\r\n           setSideBarBackGround('backdrop_filter')\r\n       }\r\n       else{\r\n           setSideBarBackGround('')\r\n       }\r\n   },[pageName.pathname, sideBarBackGround])\r\n   useEffect(()=>{\r\n       props.getAvatar()\r\n   },[])\r\n   let logOut = () =>{\r\n       removeCookie(\"email\");\r\n       removeCookie(\"password\")\r\n        props.deleteProfileData()\r\n\r\n    }\r\n        return <Sidebar isAuth={props.isAuth}\r\n                       profileLogin={props.profileLogin}\r\n                       logout={logOut}\r\n                       menuState={props.menuState}\r\n                       toggleMenuState={props.toggleMenuState}\r\n                       backgoundType={sideBarBackGround}\r\n        />\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login,\r\n        menuState: getMenuState(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {setToken,setProfileData, deleteProfileData, toggleMenuState, getAvatar})(SideBarContainer)","const mongoDate = (inputDate) => {\r\n\r\n    let d = new Date(inputDate)\r\n    let dateNow = new Date()\r\n    let dateFormatter = new Intl.DateTimeFormat(\"ru\");\r\n    let timeFormatter = new Intl.DateTimeFormat(\"ru\",{hour: '2-digit', minute: '2-digit'});\r\n    let comparativeDate = ''\r\n    const millieSecondsCompare = (firstDate, secondDate) =>{\r\n        return (firstDate - secondDate)/(60*60*1000)\r\n    }\r\n    if(millieSecondsCompare(Date.now(), Date.parse(inputDate)) < (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)){\r\n       comparativeDate = 'Сегодня'\r\n    }\r\n    else if (millieSecondsCompare(Date.now(), Date.parse(inputDate)) > (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)\r\n            && millieSecondsCompare(Date.now(), Date.parse(inputDate)) < 24 + (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)){\r\n        comparativeDate = 'Вчера'\r\n    }\r\n    else {\r\n        comparativeDate = dateFormatter.format(d)\r\n    }\r\n\r\n\r\n    return{\r\n        comparativeDate: comparativeDate,\r\n        date: dateFormatter.format(d),\r\n        time: timeFormatter.format(d),\r\n        seconds: d.getSeconds()\r\n    }\r\n}\r\nexport default mongoDate","import React from \"react\";\r\nimport s from \"./common.module.scss\"\r\nconst LoadMoreComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    const buttonSelector = () =>{\r\n        if(props.pages === 'empty' || props.inizialized === false || props.pages.length < props.pageSize){\r\n            return (<></>)\r\n        }\r\n        else if(pagesCount > props.currentPage){\r\n            return <button className={s.load_more +\" attractive-button\"} onClick={()=>{props.changePage(props.currentPage+1)}}>Загрузить ещё</button>\r\n        }\r\n        else{\r\n            return <button disabled className={s.all_loaded}>Загружены все записи</button>\r\n        }\r\n    }\r\n\r\n    return(\r\n            buttonSelector()\r\n\r\n    )\r\n}\r\n\r\n\r\nexport class LoadMore extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages,\r\n        initialized: false\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page, this.props.pageSize)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            this.setState({isFetching: false})\r\n            this.setState({initialized: true})\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n            this.loaders.push(this.props.loader)\r\n        }\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n        else{\r\n            this.setState({initialized: true})\r\n        }\r\n    }\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching && this.state.pages !== 'empty'){\r\n            return [this.props.pages, this.loaders]\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n            <LoadMoreComponent   currentPage={this.state.currentPage}\r\n                                 pageSize={this.props.pageSize}\r\n                                 totalPages={this.props.totalPages}\r\n                                 changePage={this.changePage}\r\n                                 pages={this.state.pages}\r\n                                 inizialized={this.state.initialized}\r\n            />\r\n        </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport mongoDate from \"../../../../../utils/mongoDate\";\r\nimport s from './usersList.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LoadMore} from \"../../../../common/loadMore\";\r\n\r\nimport styled from 'styled-components'\r\nimport AndroidIcon from '../../../../../assets/icons/os/android.svg'\r\nimport WindowsIcon from '../../../../../assets/icons/os/windows.svg'\r\nimport iOSIcon from '../../../../../assets/icons/os/apple.svg'\r\nimport MacOsIcon from '../../../../../assets/icons/os/macos.svg'\r\nimport LinuxIcon from '../../../../../assets/icons/os/linux.svg'\r\nimport UndefinedOsIcon from '../../../../../assets/icons/os/undefined.svg'\r\n\r\nimport NoUsersIcon from '../../../../../assets/icons/emptyUsers.svg'\r\nconst Time = styled.div`\r\n  width: 94px;\r\n  p{\r\n  padding-left: 12px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: 80px;\r\n  }\r\n  @media screen and (max-width: 500px){\r\n  width: 64px;\r\n  }\r\n`\r\n\r\nconst Sessions = styled.div`\r\n  width: 140px;\r\n  @media screen and (max-width: 1400px){\r\n  width: 47px;\r\n  }\r\n  @media screen and (max-width: 500px){\r\n  width: 30px;\r\n  }\r\n`\r\n\r\nconst Referrer = styled.div`\r\n  width: calc(60% - 404px);\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: calc(70% - 257px);\r\n  }\r\n  @media screen and (max-width: 750px){\r\n  width: calc(100% - 200px);\r\n  }\r\n  \r\n`\r\n\r\nconst City = styled.div`\r\n  width: 40%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  margin-left: 20px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: 30%;\r\n  }\r\n  @media screen and (max-width: 750px){\r\n  display: none;\r\n  }\r\n`\r\n\r\nconst Country = styled.div`\r\n      width: 120px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    @media screen and (max-width: 750px){\r\n    width: 80px;\r\n    }\r\n    @media screen and (max-width: 500px){\r\n    width: 64px;\r\n    }\r\n`\r\n\r\nconst Os = styled.div`\r\n  width: 47px;\r\n  img{\r\n  width: 20px;\r\n    margin: auto;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ShortUserLine = styled(NavLink)`\r\n   display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #f7f7f7;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n  height: 47px;\r\n`\r\n\r\nconst LoadingUser = styled.div`\r\n    width: 100%;\r\n    background: #f7f7f7;\r\n    margin-bottom: 10px;\r\n    height: 47px;\r\n    display: block;\r\n    animation: loadingScheme 1s infinite ;\r\n  \r\n  @keyframes loadingScheme {\r\n    0%{background: #efefef}\r\n    50%{background: #dcdcdc}\r\n    100%{background: #efefef}\r\n  }\r\n`\r\n\r\nconst ListDivider = styled.div`\r\n    height: 46px;\r\n    border-bottom: 1px solid #dadada;\r\n    margin-bottom: 10px;\r\n        display: flex;\r\n    align-items: flex-end;\r\n    p{\r\n    margin-bottom: 5px;\r\n    }\r\n`\r\n\r\nconst Visits = styled.span`\r\n    background: #2980ea;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    width: 18px;\r\n    height: 18px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    overflow: hidden;\r\n    display: block;\r\n`\r\n\r\nconst NoUsersBlock = styled.div`\r\n    background: #f7f7f7;\r\n    padding: 15px;\r\n    width: calc(100% - 30px);\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    img{\r\n    width: 47px;\r\n   \r\n    }\r\n    div{\r\n    width: 70px;\r\n    }\r\n    p{\r\n    width: calc(100% - 70px);\r\n    }\r\n`\r\n\r\n\r\n\r\nconst NoUsers = () =>{\r\n    return(\r\n            <NoUsersBlock>\r\n                <div>\r\n                    <img src={NoUsersIcon} alt=\"\"/>\r\n                </div>\r\n                <p>У Вас ещё нет пользователей, подождите или добавьте новый счётчик</p>\r\n            </NoUsersBlock>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst ShortUser = (props) =>{\r\n    let selectOsIcon = (os) =>{\r\n        switch(os){\r\n            case 'Android':\r\n                return <img src={AndroidIcon} alt=\"Android\" />\r\n            case 'Windows':\r\n                return <img src={WindowsIcon} alt=\"Windows\" />\r\n            case 'iOS':\r\n                return <img src={iOSIcon} alt=\"iOS\" />\r\n            case 'Mac OS':\r\n                return <img src={MacOsIcon} alt=\"Mac OS\" />\r\n            case 'Linux':\r\n                return <img src={LinuxIcon} alt=\"Linux\" />\r\n            default:\r\n                return <img src={UndefinedOsIcon} alt=\"undefined\" />\r\n        }\r\n    }\r\nreturn(\r\n        <ShortUserLine to={'/users/'+props.tysId} className={s.shortUser}>\r\n            <Time>\r\n                <p>{props.time}</p>\r\n            </Time>\r\n            <Sessions>\r\n                <Visits>{props.sessions}</Visits>\r\n            </Sessions>\r\n            <Referrer>\r\n                <p>{props.referrer}</p>\r\n            </Referrer>\r\n            <Country>\r\n                <i className={s.flag+' '+s['flag-'+props.country]} > </i>\r\n                <p>{props.country}</p>\r\n            </Country>\r\n            <City>\r\n                <p>{props.city}</p>\r\n            </City>\r\n\r\n            <Os>\r\n                {selectOsIcon(props.os)}\r\n            </Os>\r\n        </ShortUserLine>\r\n)\r\n}\r\n\r\nconst UsersList = (props) => {\r\n    let users = []\r\n    if(props.usersList !== undefined){\r\n        if(props.usersList !== \"no users\"){\r\n            let lastDivider = ''\r\n            props.usersList.forEach((item, index)=>{\r\n                if(mongoDate(item.date).comparativeDate !== lastDivider){\r\n                    lastDivider = mongoDate(item.date).comparativeDate\r\n                    users.push({divider: mongoDate(item.date).comparativeDate}, item)\r\n\r\n                }\r\n                else{\r\n                    users.push(item)\r\n                }\r\n\r\n            })\r\n            users = users.map((user) => {\r\n                if(user.divider) {\r\n                    return <ListDivider><p>{user.divider}</p></ListDivider>\r\n                }\r\n                else{\r\n                return <ShortUser key={user.tysId} time={mongoDate(user.date).time} sessions={user.sessionsNumber}\r\n                                  city={user.city} country={user.country}\r\n                                  os={user.os} tysId={user.tysId}\r\n                                  referrer={user.referrer}/>}\r\n                })\r\n        }\r\n        else{\r\n            users =\"empty\"\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"container\">\r\n\r\n                <LoadMore pages={users} pageSize={props.pageSize} totalPages={props.totalUsers}\r\n                          pageChanger={props.getMoreUsers} loader={<LoadingUser />} emptyBlock={<NoUsers />} />\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default UsersList","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getTotalUsers} from \"../../../../redux/selectors/summary-selectors\";\r\nimport {getMoreUsers} from \"../../../../redux/summary-reducer\";\r\nimport UsersList from \"../../../../components/content/counters/counterPage/usersList/usersList\";\r\n\r\n\r\nconst DayUsersContainer = (props) => {\r\n\r\n    return <UsersList  usersList={props.summaryUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(DayUsersContainer);\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport mongoDate from \"../../../utils/mongoDate\";\r\nconst Col = styled.div`\r\n display: block;\r\n background: #0063b1;\r\n height: ${props => props.height};\r\n width: 10px;\r\n @media screen and (max-width: 1200px){\r\n  width: 6px;\r\n }\r\n @media screen and (max-width: 500px){\r\n  width: 4px;\r\n }\r\n \r\n`\r\n\r\n\r\nconst ColInfo = styled.div`\r\n  width: 120px;\r\n  height: 65px;\r\n  box-shadow: 0px 0px 5px #c3c3c3;\r\n  display: none;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 0px;\r\n  z-index: 2;\r\n  margin-top: 20px;\r\n  background: white;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  ${(props)=>{\r\n    switch (props.show) {\r\n        case 'showLeft':\r\n            return css`display: flex;\r\n                       right: 0px;\r\n                      `\r\n        case 'showRight':\r\n            return css`display: flex`\r\n        default:\r\n          return css`display: none`\r\n}\r\n}}\r\n`\r\n\r\nconst ColBlock = styled.div`\r\nheight: 100%;\r\nwidth: 2.0833%;\r\ndisplay: block;\r\nposition: relative;\r\n&:hover{\r\nbackground: #e0e0e0;\r\n}\r\n`\r\n\r\n\r\n\r\nconst ColWr = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: flex-end;\r\nposition: relative;\r\ncursor: pointer;\r\n\r\n`\r\n\r\nconst ColTime = styled.p`\r\n       font-size: 12px;\r\n    text-align: left;\r\n    padding-top: 3px;\r\n`\r\n\r\nconst ColNumber = styled.span`\r\n    color: #00A7CF;\r\n    font-size: 24px;\r\n    padding-left: 10px;\r\n    padding-top: 2px;\r\n`\r\n\r\nconst ColTimesRow = styled.div`\r\n    padding-left: 8px;\r\n    padding-top: 6px;\r\n`\r\n\r\nconst ColDay = styled.p`\r\nfont-size: 14px;\r\ncolor: gray;\r\n`\r\n\r\n\r\nconst Graphiccol = (props) => {\r\n    let colheight = props.colHeight*110+'px'\r\n    const [infoState, setInfoState] = useState('hidden')\r\n\r\n    let changeInfoState = (e) =>{\r\n        if(window.innerWidth - e.clientX < 200){\r\n            setInfoState('showLeft')\r\n        }\r\n        else{\r\n            setInfoState('showRight')\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n            <ColBlock onMouseOver={(e)=>{changeInfoState(e)}} onMouseOut={()=>{setInfoState('hidden')}}>\r\n                <ColInfo show={infoState}>\r\n                    <ColNumber>{props.colValue}</ColNumber>\r\n                    <ColTimesRow>\r\n                        <ColDay>{mongoDate(props.colData).comparativeDate}</ColDay>\r\n                        <ColTime>{mongoDate(Date.parse(props.colData)).time + \"-\" + mongoDate(Date.parse(props.colData)+ 60*60*1000).time}</ColTime>\r\n                    </ColTimesRow>\r\n\r\n                </ColInfo>\r\n                <ColWr>\r\n                    <Col height={colheight}/>\r\n                </ColWr>\r\n            </ColBlock>\r\n    )\r\n}\r\nexport default Graphiccol;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport styled from 'styled-components'\r\nimport ReactDOM from \"react-dom\";\r\n\r\nlet GraphicWr = styled.div`\r\nwidth: 100%;\r\nheight: 250px;\r\nbackground: #f4f4f4;\r\nposition: relative;\r\n`\r\n\r\nlet GraphicColsWR = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    height: 200px;\r\n    width: calc(100% - 24px);\r\n    margin: auto;\r\n    \r\n`\r\n\r\nlet GraphicBottom = styled.div`\r\n    position: relative;\r\n    width: calc(100% - 24px);\r\n    border-top: 1px solid gray;\r\n    margin: auto;\r\n    margin-top: 8px;\r\n    padding-top: 3px;\r\n    \r\n    p{\r\n     color: gray;\r\n     position: absolute;\r\n     font-size: 16px;\r\n     @media screen and (max-width: 500px){\r\n     font-size: 13px;\r\n     }\r\n    }\r\n    div{\r\n            width: 9px;\r\n            height: 9px;\r\n            border-radius: 50%;\r\n            display: block;\r\n            background: gray;\r\n            position: absolute;\r\n            top: -5px;\r\n    }\r\n`\r\n\r\nlet GraphicName = styled.h2`\r\n    display: block;\r\n    position: absolute;\r\n    left: 14px;\r\n    top: 8px;\r\n    font-size: 20px;\r\n    visibility: ${props => (props.hide ? `hidden` : `visible`)};;\r\n   \r\n`\r\n\r\nlet NowP = styled.p`\r\n  left: 0%;\r\n   &:before{\r\n   left: 1.04%;\r\n   }\r\n`\r\n\r\nlet Hours24P = styled.p`\r\nleft: 49%;\r\n&:before{\r\n   left: -4px;\r\n   }\r\n\r\n`\r\n\r\nlet Hours48P = styled.p`\r\nright: 0%;\r\n&:before{\r\n   right: 4px;\r\n   }\r\n`\r\n\r\nlet NowDot = styled.div`\r\n  left: calc(1.04% - 5px);\r\n`\r\n\r\nlet Hours24Dot = styled.div`\r\n  left: calc(49.04% - 5px);\r\n`\r\n\r\nlet Hours48Dot = styled.div`\r\n  right: calc(1.04% - 5px);\r\n`\r\n\r\n\r\nconst Graphic = (props) => {\r\n    const [hideH, setHideH] = useState(false)\r\n    const hideRef = useRef(false)\r\n    const hRef = useRef(null);\r\n\r\n    const changeHState = (e) =>{\r\n\r\n\r\n        if(hRef.current.getBoundingClientRect().x + hRef.current.getBoundingClientRect().width > e.clientX - 50){\r\n\r\n            //hideRef.current = true\r\n            setHideH(true)\r\n\r\n        }\r\n        else if( hRef.current.getBoundingClientRect().x + hRef.current.getBoundingClientRect().width < e.clientX - 50){\r\n            //hideRef.current = false\r\n            setHideH(false)\r\n        }\r\n        else{\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    let maxUsersCount = props.graphicData.map((coldata) => (coldata.usersCount))\r\n    maxUsersCount = Math.max.apply(null, maxUsersCount)\r\n\r\n    let graphicColElements = props.graphicData.map((coldata, index) => <Graphiccol key={coldata.hour} colData={coldata.hour} colHeight={coldata.usersCount / maxUsersCount}\r\n                                                                                   colValue={coldata.usersCount}/>)\r\n\r\n    return  (\r\n            <GraphicWr onMouseLeave={()=>{setHideH(false)}}>\r\n\r\n                <GraphicName ref={hRef} hide={hideH}>Пользователи в час</GraphicName>\r\n               <GraphicColsWR onMouseMove={(e)=>{changeHState(e)}}>\r\n                   {graphicColElements}\r\n               </GraphicColsWR>\r\n\r\n              <GraphicBottom>\r\n                  <NowDot />\r\n                  <Hours24Dot />\r\n                  <Hours48Dot />\r\n                  <NowP>48 часов назад</NowP>\r\n                  <Hours24P>24 часа назад</Hours24P>\r\n                  <Hours48P>Сейчас</Hours48P>\r\n              </GraphicBottom>\r\n            </GraphicWr>\r\n\r\n\r\n    )\r\n}\r\nexport default React.memo(Graphic);","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nimport styled from 'styled-components'\r\n\r\nconst KeyNumbersWr  = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: center;\r\n@media screen and (max-width: 500px){\r\njustify-content: space-between;\r\nmargin-bottom: 1px;\r\n}\r\n`\r\n\r\nconst KeyNumberBlock = styled.div`\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 200px;\r\n    padding-bottom: 200px; // пропорции блока определяются здесь\r\n    margin-right: 11px;\r\n    @media screen and (max-width: 500px){\r\n    width: calc(50% - 6px);\r\n    padding-bottom: calc(50% - 6px);\r\n    margin-right: 0px;\r\n    }\r\n    \r\n`\r\nconst KeyNumberContent = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f4f4f4;\r\n    \r\n`\r\n\r\nconst KeyNumberName = styled.p`\r\n    font-size: 20px;\r\n    position: absolute;\r\n    right: 16px;\r\n    bottom: 10px;\r\n    @media screen and (max-width: 360px){\r\n    font-size: 16px;\r\n    }\r\n`\r\n\r\nconst KeyNumber = styled.p`\r\n    font-size: 40px;\r\n    position: absolute;\r\n    left: 16px;\r\n    top: 10px;\r\n`\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <>\r\n            <div className='container'>\r\n\r\n                        <KeyNumbersWr>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayClicks}</KeyNumber>\r\n                                    <KeyNumberName>Клики</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayUsers}</KeyNumber>\r\n                                    <KeyNumberName>Пользователи</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n\r\n                        </KeyNumbersWr>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <Graphic graphicData={props.graphicData}/>\r\n            </div>\r\n                </>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst DaystatContainer = (props) => {\r\n    return <Daystat graphicData={props.graphicInfo} summaryInfo={props.summaryInfo}/>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(DaystatContainer)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isInitialized){\r\n            if(props.isAuth) return <Component {...props}/>\r\n            else return <Redirect to='/login' />\r\n        }\r\n        else{\r\n            return <Component {...props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedWithAuthRedirect\r\n\r\n}\r\nexport default WithAuthRedirect","import React from \"react\";\r\nimport s from \"./common.module.scss\";\r\nexport const CountersListLoading = () =>{\r\n    return (\r\n            <div className=\"container\">\r\n\r\n\r\n           <div className={s.loading_scheme}>\r\n              <div className={s.add_button +\" \"+ s.elem} />\r\n              <div className={s.counters_table_head +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.page_buttons}>\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n              </div>\r\n           </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport const FriendsPageLoader = () =>{\r\n    return(\r\n            <div className={s.loading_scheme}>\r\n               <div className={s.text_line + \" \" + s.elem} />\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                </div>\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n\r\n                    <div className={s.page_buttons}>\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport const SummaryPageLoader = () =>{\r\n    return(\r\n            <div className=\"container\">\r\n                <div className={s.loading_scheme}>\r\n                    <div className={s.h1 +\" \"+ s.elem} />\r\n                    <div className={s.day_stat_row}>\r\n                        <div className={s.day_stat + ' ' + s.elem} />\r\n                        <div className={s.day_stat + ' ' + s.elem} />\r\n                    </div>\r\n                    <div className={s.graphic + ' ' + s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.load_more_bottom + \" \" + s.elem}></div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport const UserPageLoader = () =>{\r\n    return (\r\n            <div className=\"container\">\r\n                <div className={s.loading_scheme}>\r\n                    <div className={s.h1 +\" \"+ s.elem} />\r\n                    <div className={s.user_stat_row}>\r\n                        <div className={s.user_main_block +\" \"+ s.elem} />\r\n                        <div className={s.user_main_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_blocks_row}>\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_blocks_row}>\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_block_col_12 +\" \"+ s.elem} />\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSummaryData, clearSummaryData} from \"../../../redux/summary-reducer\";\r\nimport {getSummaryInfo, getSummaryGraphic, getSummaryUsers} from \"../../../redux/selectors/summary-selectors\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {SummaryPageLoader} from \"../../common/loadingSchemes\";\r\n\r\n\r\nconst SummaryContainer = (props) =>{\r\n\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n\r\n\r\n        return( ()=>{\r\n            props.clearSummaryData()\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getSummaryData()\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [ props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(props.summaryUsers && props.summaryUsers.length !== 0){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n\r\n    },[props.summaryUsers])\r\n\r\n    return (\r\n            <>\r\n\r\n                {pageState === 'fetching' ?<SummaryPageLoader /> :\r\n                        <>\r\n                            <div className=\"container h1-block\"><h1 className=\"h1\">Статистика за сутки</h1></div>\r\n                            <DaystatContainer summaryInfo={props.summaryInfo} graphicInfo={props.graphicInfo} />\r\n                            <DayusersContainer summaryUsers={props.summaryUsers} />\r\n                        </> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        summaryInfo: getSummaryInfo(state),\r\n        graphicInfo: getSummaryGraphic(state),\r\n        summaryUsers: getSummaryUsers(state),\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{getSummaryData, clearSummaryData}),WithAuthRedirect)(SummaryContainer);","import React, { useEffect, useRef, useState} from \"react\";\r\n\r\nimport s from \"./common.module.scss\";\r\nimport styled from 'styled-components'\r\n\r\nexport const Input = ({input, meta,placeholder, ...props}) =>{\r\n    return (\r\n\r\n                <div className={s.input_wr}>\r\n                    <p className={s.placeholder}>{placeholder}</p>\r\n                    <input className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                    {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, placeholder, ...props}) =>{\r\n    const textareaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        textareaRef.current.style.height = \"50px\";\r\n        const scrollHeight = textareaRef.current.scrollHeight;\r\n        textareaRef.current.style.height = scrollHeight + \"px\";\r\n    }, [input.value]);\r\n\r\n    return (\r\n\r\n            <div className={s.textarea_wr}>\r\n                <p className={s.placeholder}>{placeholder}</p>\r\n                <textarea ref={textareaRef} cols=\"2\" rows=\"3\"  className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Select = () =>{\r\n    return(\r\n            <p>gj</p>\r\n    )\r\n}\r\n\r\n\r\nexport const PasswordScoreInput = ({input, meta, placeholder, ...props}) =>{\r\n        let strengthValue = 'none'\r\n        let strengthText = ''\r\n\r\n        if(input.value === ''){\r\n            strengthValue = 'none'\r\n            strengthText = ''\r\n\r\n        }\r\n        else if(input.value.length <= 4 && input.value.length >= 1){\r\n            strengthValue = 'tooWeak'\r\n            strengthText = 'Слишком слабый пароль'\r\n            meta.error = ' '\r\n        }\r\n        else if(input.value.length <= 6){\r\n            strengthValue = 'weak'\r\n            strengthText = 'Слабый пароль'\r\n        }\r\n        else if(input.value.length <= 8){\r\n            strengthValue = 'medium'\r\n            strengthText = 'Средний пароль'\r\n        }\r\n        else{\r\n            strengthValue = 'good'\r\n            strengthText = 'Хороший пароль'\r\n        }\r\n\r\n    return (\r\n\r\n            <div className={s.input_wr}>\r\n                <p className={s.placeholder}>{placeholder}</p>\r\n\r\n                <input className={meta.touched && meta.error && s.danger} {...input} {...props} />\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                {strengthValue !== 'none' ?  <div className={s.password_strength}><div className={s[strengthValue]}></div>\r\n                    <p>{strengthText}</p></div> : ''}\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ButtonStyled = styled.button`\r\n    background: ${props=> props.primary ? \"#006eb9\" : \"white\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    padding: 8px 20px 7px 20px;\r\n    font-weight: 600;\r\n    letter-spacing: 0.2px;\r\n    border: 1px solid  ${props => props.primary ? \"#006eb9\" : \"#323130\"};\r\n    font-size: 13px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    display: block;\r\n    text-align: center;\r\n    border-radius: 2px;\r\n    margin-bottom: 10px;\r\n    &:hover{\r\n    \r\n    }\r\n`\r\n\r\n\r\nexport const Button = (props) =>{\r\n    return(\r\n                    <ButtonStyled {...props}/>\r\n            )\r\n\r\n}","export const required = value => (value || typeof value === 'number' ? undefined : 'Обязательно')\r\n\r\nexport const checkLogin = value => (value && /^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(value) ? undefined : 'Некорректный логин')\r\n\r\nexport const checkEmail = value => (value && /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(value) ? undefined : 'Почта некорректная')\r\n\r\nexport const checkPassword = value => (value && /^[0-9a-z#!_-]/i.test(value) ? undefined : 'Пароль некорректный')\r\n\r\nexport const passwordsMatch = (value, allValues) =>\r\n        value !== allValues.password ? 'Пароли не совпадают' : undefined;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport s from '../addcounter.module.scss';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Button} from \"../../../../common/formControls\";\r\nimport {required} from \"../../../../../utils/validation\";\r\nimport loader_icon from \"../../../../../assets/icons/loading.svg\"\r\n\r\nconst AddCounterForm = (props) =>{\r\n\r\n    return (\r\n\r\n            <div className={s.addcounter_form}>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                    <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                    <Field name=\"counterName\" type=\"text\"  component={Input} placeholder=\"Название счётчика\" validate={required}/>\r\n                    <Field name=\"counterDomen\" type=\"text\"  component={Input} placeholder=\"Домен\" validate={required}/>\r\n                    <Button >Отправить</Button >\r\n                    <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddCounterReduxForm = reduxForm({form: 'addcounter-form'})(AddCounterForm)\r\n\r\n\r\nconst PixelCodeBlock = (props) =>{\r\n\r\n    const [copySuccess, setCopySuccess] = useState('');\r\n    const textAreaRef = useRef(null);\r\n\r\n    let copyToClipboard = (e) =>{\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n        setCopySuccess('copied');\r\n        setTimeout(()=>{setCopySuccess('')}, 3000)\r\n    };\r\n\r\n\r\n\r\n    return(\r\n            <div className={s.codeBlock}>\r\n                <textarea onClick={(e)=>{e.target.select()}} ref={textAreaRef} value={props.pixelCode} name=\"\" id=\"\" cols=\"30\" rows=\"10\" className={s.codeTextarea}> </textarea>\r\n                    <div className={s.copyButton_wr}>\r\n                        <button className=\"control_button\" onClick={copyToClipboard}>Скопировать код</button>\r\n                        {copySuccess === 'copied' ? <div className={s.copied_label}>Скопировано</div> : ''}\r\n                    </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nconst FetchingForm = (props) => {\r\n    return(\r\n            <div className={s.form_fetching}>\r\n                <img src={loader_icon} alt=\"\"/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Addcounterblock = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.postCounter(values.counterName, values.counterDomen)\r\n    }\r\n\r\n\r\n    const blockSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <AddCounterReduxForm onSubmit={onSubmit}/>\r\n            case \"fetching\": return <FetchingForm />\r\n            case \"pixelCode\": return <PixelCodeBlock pixelCode={props.pixelCode}/>\r\n        }\r\n    }\r\n    const textSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <p>Добавьте ваш счётчик <br /><br /> Выбирите название для счётчика и укажите URL с которого хотите получать данные</p>\r\n            case \"fetching\": return ''\r\n            case \"pixelCode\": return <div className={s.last_text}><p>Скопируйте код и вставьте его на ваш сайт через редактор кода.<br /><br />Сразу после этого в разделе данного счётчика\r\n                начнёт отображаться статистика о новых посетителях</p><button onClick={()=>{props.makeOneMore()}} className=\"attractive-button\">Создать другой счётчик</button></div>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Счётчики</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                {textSelector()}\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {blockSelector()}\r\n            </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\nexport default Addcounterblock;\r\nexport {PixelCodeBlock}","export const getPixelCode = (state) =>{\r\n    return state.countersPage.pixelCode\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.countersPage.pageSize\r\n}\r\nexport const getCurrentCounterInfo = (state) =>{\r\n    return state.countersPage.currentCounter.counterInfo\r\n}\r\nexport const getCurrentCounterUsers = (state) =>{\r\n    return state.countersPage.currentCounter.counterUsers\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.countersPage.currentCounter.totalUsers\r\n}\r\n\r\n\r\nexport const getYourCounters = (state) =>{\r\n    return state.countersPage.yourCounters.counterslistData\r\n}\r\n\r\nexport const getYourTotalCounters = (state) =>{\r\n    return state.countersPage.yourCounters.totalCounters\r\n}\r\n\r\nexport const getFriendsCounters = (state) =>{\r\n    return state.countersPage.friendsCounters.counterslistData\r\n}\r\n\r\nexport const getFriendsTotalCounters = (state) =>{\r\n    return state.countersPage.friendsCounters.totalCounters\r\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {postCounter} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {getPixelCode} from  \"../../../../../redux/selectors/counters-selectors\"\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst AddcounterblockContainer = (props) => {\r\n    let postCounter = (name, domen) =>{\r\n        props.postCounter({name: name, domen: domen})\r\n        setBlockState(\"fetching\")\r\n        console.log(props.pixelCode)\r\n    }\r\n\r\n    let makeOneMore = () =>{\r\n        setBlockState(\"form\")\r\n    }\r\n\r\n    const [blockState, setBlockState] = useState(\"form\")\r\n\r\n    useEffect(()=>{\r\n       if(props.pixelCode !== \"\"){\r\n           setBlockState(\"pixelCode\")\r\n       }\r\n    },[props.pixelCode])\r\n\r\n    return <Addcounterblock postCounter={postCounter}\r\n                            blockState={blockState}\r\n                            makeOneMore={makeOneMore}\r\n                            pixelCode={props.pixelCode}\r\n\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n      pixelCode: getPixelCode(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {postCounter}), WithAuthRedirect)(AddcounterblockContainer);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Счётчики</h1>\r\n\r\n                <div className=\"h1-buttons\">\r\n                    <NavLink to=\"/counters/addcounter\" className=\"h1-button\">\r\n                        <div className=\"h1-button-icon\">\r\n                            <img src={addIcon} alt=\"\"/>\r\n                        </div>\r\n                        <p className=\"h1-button-text\">Добавить счётчик</p>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route exact path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counter/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n                        <div className={s.owner}>\r\n                            <p>{props.login}</p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from \"react\";\r\n\r\nconst PaginationComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    let pages =[]\r\n    for(let i=1; i<=pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n    let pagesButtonsElements = pages.map(page => <span key={page} className={props.currentPage === page && \"current-page\"}\r\n                                                       onClick={() => {props.changePage(page)}}>{page}</span>)\r\n    let buttonsSelector = () =>{\r\n        if (props.pages === 'empty' || pagesCount === 1){\r\n            return (<></>)\r\n        }\r\n        else{\r\n            return   <div className=\"pages-buttons\">{pagesButtonsElements}</div>\r\n        }\r\n    }\r\n    return(\r\n            buttonsSelector()\r\n    )\r\n}\r\n\r\nconst Loader = (props) =>{\r\n    return(\r\n            props.elem\r\n    )\r\n}\r\n\r\nexport class Pagination extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            if(this.props.getCurrentPage === undefined){\r\n                this.setState({isFetching: false})\r\n            }\r\n        else{\r\n\r\n                if(this.state.pages !== prevState.pages){\r\n\r\n                    this.setState({isFetching: false})\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n\r\n            this.loaders.push(<Loader elem={this.props.loader} key={i} />)\r\n        }\r\n\r\n        this.setState({isFetching: true})\r\n\r\n    }\r\n\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching){\r\n            return this.loaders\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n                <PaginationComponent currentPage={this.state.currentPage}\r\n                                     pageSize={this.props.pageSize}\r\n                                     totalPages={this.props.totalPages}\r\n                                     changePage={this.changePage}\r\n                                     pages={this.state.pages}\r\n                />\r\n               </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../counterslist.module.scss';\r\nimport Shortcounter from '../shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../../common/pagination/pagination\";\r\nimport plus from \"../../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У вас ещё нет счётчиков,<br /> добавьте свой первый счётчик</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst YourCountersList = (props) => {\r\n\r\n       let countersElement = []\r\n\r\n       if(props.countersListData.length !== 0){\r\n           countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}\r\n                                                                   login={counter.login}\r\n           /> )\r\n       }\r\n       else{\r\n           countersElement = 'empty'\r\n       }\r\n\r\n\r\n       let firstLoader = []\r\n            for(let i=0; i < props.pageSize; i++){\r\n            firstLoader.push(<LoadingCounter />)\r\n        }\r\n       return <><div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Владелец</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.list}>\r\n\r\n                     <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                           pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n                   </div>\r\n\r\n               </div>\r\n\r\n\r\n\r\n       </>\r\n\r\n\r\n}\r\nexport default YourCountersList;","import React from \"react\";\r\nimport YourCountersList from \"./yourCountersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeYourCounters} from \"../../../../../redux/counters-reducer\";\r\nimport {getYourCounters, getYourTotalCounters, getPageSize} from \"../../../../../redux/selectors/counters-selectors\";\r\n\r\nclass YourCountersListContainer extends React.Component{\r\n\r\n\r\n    changePage = (page) =>{\r\n        this.props.changeYourCounters(page)\r\n    }\r\n    render(){\r\n      return <YourCountersList\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n\r\n    return{\r\n        countersListData: getYourCounters(state),\r\n        pageSize: getPageSize(state),\r\n        totalCounters: getYourTotalCounters(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeYourCounters})(YourCountersListContainer)\r\n\r\n","import React from 'react';\r\nimport s from '../counterslist.module.scss';\r\nimport Shortcounter from '../shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../../common/pagination/pagination\";\r\nimport plus from \"../../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У вас ещё нет счётчиков,<br /> добавьте свой первый счётчик</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nconst FriendsCountersList = (props) =>{\r\n    let countersElement = []\r\n\r\n    if(props.countersListData.length !== 0){\r\n        countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                              name={counter.name}\r\n                                                                              domen={counter.domen}\r\n                                                                              dayusers={counter.dayusers}\r\n                                                                              allusers={counter.allusers}\r\n                                                                              status={counter.status}\r\n                                                                              login={counter.login}\r\n        /> )\r\n    }\r\n    else{\r\n        countersElement = 'empty'\r\n    }\r\n    return(\r\n\r\n\r\n            <div className=\"container\">\r\n                <h2>Счётчики друзей</h2>\r\n\r\n                <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                            pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FriendsCountersList;","import React from \"react\";\r\nimport FriendsCountersList from \"./friendsCountersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeFriendsCounters} from \"../../../../../redux/counters-reducer\";\r\nimport {getFriendsCounters, getFriendsTotalCounters, getPageSize} from \"../../../../../redux/selectors/counters-selectors\";\r\n\r\nclass FriendsCountersListContainer extends React.Component{\r\n    changePage = (page) =>{\r\n        this.props.changeFriendsCounters(page)\r\n    }\r\n    render(){\r\n      return <FriendsCountersList\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n\r\n    return{\r\n        countersListData: getFriendsCounters(state),\r\n        pageSize: getPageSize(state),\r\n        totalCounters: getFriendsTotalCounters(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeFriendsCounters})(FriendsCountersListContainer)\r\n\r\n","import React, {useEffect} from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport YourCounterslistContainer from \"./countersLists/yourCounters/yourCountersListContainer\";\r\nimport FriendsCountersListContainer from \"./countersLists/friendsCounters/friendsCountersListContainer\";\r\nimport {CountersListLoading} from \"../../common/loadingSchemes\"\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {getCounters} from \"../../../redux/counters-reducer\";\r\n\r\nconst Counters = (props) =>{\r\n    useEffect(()=>{\r\n        if (props.isInitialized){\r\n            props.getCounters() }\r\n\r\n    },[props.isInitialized])\r\n    return (\r\n\r\n            <>\r\n                {props.isInitialized ?\r\n                        <>\r\n\r\n                            <Addcounter/>\r\n                            <YourCounterslistContainer />\r\n                            <FriendsCountersListContainer />\r\n                        </>: <CountersListLoading />}\r\n           </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, {getCounters}), WithAuthRedirect)(Counters);","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Аудитории</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Аудитории</h1>\r\n                <div className=\"h1-buttons\">\r\n                    <NavLink to='/audiences/addaudience' className=\"h1-button\">\r\n                        <div className=\"h1-button-icon\">\r\n                            <img src={addIcon} alt=\"\"/>\r\n                        </div>\r\n                        <p className=\"h1-button-text\">Добавить аудиторию</p>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <>\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from \"react\";\r\n\r\nexport const offsetText = (text) =>{\r\n    let textarr = text.split('\\n');\r\n    const isUrl = /^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/;\r\n    for (let i = 0; i < textarr.length; i=i+2){\r\n        textarr.splice(i+1,0,<br />)\r\n    }\r\n\r\n    for (let lineNumber = 0; lineNumber < textarr.length; lineNumber++){\r\n        if(typeof textarr[lineNumber] === 'string'){\r\n            let line = textarr[lineNumber].split(' ')\r\n            for (let wordNumber = 0; wordNumber < line.length; wordNumber++){\r\n                if(line[wordNumber] == '') {\r\n                    line[wordNumber] = <span>&nbsp;</span>\r\n                }\r\n                else{\r\n                    line[wordNumber] = line[wordNumber]+' ';\r\n                }\r\n\r\n                if(isUrl.test(line[wordNumber])){\r\n                    line[wordNumber] = <a target=\"blank\" href={'https://'+line[wordNumber]}>{line[wordNumber]}</a>\r\n                }\r\n            }\r\n            textarr[lineNumber] = line\r\n        }\r\n\r\n    }\r\n    return(\r\n            textarr\r\n    )\r\n}","import React from \"react\";\r\nimport loadingImg from \"../../assets/icons/small-loading.svg\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport s from \"./common.module.scss\"\r\nimport {offsetText} from \"../../utils/textTransformation\";\r\n\r\nexport class EditInput extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n                this.setState({isFetching: true})\r\n                this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n\r\n            if(prevState.isFetching === true){\r\n                this.setState({wasUpdated: true})\r\n                setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n                    {this.state.inputEditMode\r\n                            ?\r\n\r\n                                        <div>\r\n                                            <input onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                                   type=\"text\" className='plain_input' placeholder={this.props.placeholder}\r\n                                                   onBlur={() => {this.changeCondition(false)}} autoFocus={true}/>\r\n\r\n                                        </div>\r\n                            :\r\n                            <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.props.inputText}</div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class EditTextarea extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    changeCondition = (inputState,e) =>{\r\n        if(e){\r\n            console.log(e.target)\r\n        }\r\n\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n            this.setState({isFetching: true})\r\n            this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n            \r\n        }\r\n\r\n        if(prevState.isFetching === true && prevProps !== this.props){\r\n            this.setState({wasUpdated: true})\r\n            setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={(e) =>{this.changeCondition(true, e)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n            {this.state.inputEditMode\r\n                    ?\r\n\r\n                    <div>\r\n                        <textarea onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                  wrap=\"soft\" className='plain_textarea'\r\n                                  type=\"text\"  placeholder={this.props.placeholder}\r\n                                  cols=\"30\" rows=\"10\"\r\n                                  onBlur={() => {this.changeCondition(false)}} autoFocus={true}> </textarea>\r\n                    </div>\r\n                    :\r\n                    <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder :<p>{offsetText(this.props.inputText)}</p>}</div>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nimport {EditInput, EditTextarea} from \"../../../common/editinput\";\r\n\r\nclass YourProfile extends React.Component{\r\n    render (){\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <div className={s.photo_wr}>\r\n                                <p>Добавить фото</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <EditInput inputText={this.props.name} putInfo={this.props.putProfileInfo} name={\"name\"} placeholder={\"Введите ваше имя\"}/>\r\n                                <EditInput inputText={this.props.soName} putInfo={this.props.putProfileInfo} name={\"soName\"} placeholder={\"Введите вашу фамилию\"}/>\r\n                                <EditInput inputText={this.props.company} putInfo={this.props.putProfileInfo} name={\"company\"} placeholder={\"Введите вашу компанию\"}/>\r\n                                <EditTextarea inputText={this.props.description} putInfo={this.props.putProfileInfo} name={\"description\"} placeholder={\"Введите описание\"} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React from 'react';\r\nimport s2 from '../../friends/friends.module.scss';\r\nimport s from './yourFriends.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {LoadMore} from \"../../../common/loadMore\";\r\nimport friendIcon from '../../../../assets/icons/users.svg'\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\n\r\nconst NoFriends = () =>{\r\n    return <div className={s.noFriends}>\r\n        <img src={friendIcon} alt=\"\"/>\r\n        <p>У вас ещё нет друзей</p>\r\n    </div>\r\n}\r\n\r\nconst YourFriends = (props) => {\r\n    let friendsList = []\r\n    let deleteFriend = (userId, key) =>{\r\n     props.deleteFriend(userId, key)\r\n    }\r\n\r\n    let buttonSelector = (userId, buttonId) =>{\r\n        if(props.friends[buttonId].isFetching === false){\r\n            return <button className={s.delete_button} onClick={()=>{deleteFriend(userId, buttonId)}}>Удалить из друзей</button>\r\n        }\r\n        else{\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n    }\r\n    if(props.friends !== \"no friends\"){\r\n        let i = 0\r\n        friendsList = props.friends.map((friend)=> <div className={s2.line}>\r\n            <div className={s2.names_row}>\r\n                <p className=\"name\">{friend.name}</p>\r\n                <p className=\"soname\">{friend.soName}</p>\r\n            </div>\r\n            <div className={s2.company}>{friend.company}</div>\r\n            <div className={s2.description}><p className={s2.description_p}>{offsetText(friend.description)}</p></div>\r\n            {buttonSelector(friend.userId, i++)}\r\n\r\n        </div>)\r\n    }else{\r\n        friendsList = \"empty\"\r\n    }\r\n    return  (\r\n            <div className={s2.yourFriends}>\r\n                <h2>Ваши друзья:</h2>\r\n                <LoadMore pages={friendsList} pageSize={props.pageSize} totalPages={props.totalFriends}\r\n                          pageChanger={props.addToFriendsList} loader={<LoadingProfile />} emptyBlock={<NoFriends />}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default YourFriends;","export const selectProfilesList = (state) =>{\r\n    return state.profilePage.profilesList\r\n}\r\n\r\nexport const getTotalProfiles = (state) =>{\r\n    return state.profilePage.totalProfiles\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.profilePage.pageSize\r\n}\r\n\r\nexport const getProposalsList = (state) =>{\r\n    return state.profilePage.proposals\r\n}\r\n\r\nexport const getFriends = (state) =>{\r\n    return state.profilePage.friendsList\r\n}\r\n\r\nexport const getTotalFriends = (state) =>{\r\n    return state.profilePage.totalFriends\r\n}\r\n\r\nexport const getDeletedFriend = (state) =>{\r\n    return state.profilePage.deletedFriend\r\n}","import React from 'react';\r\nimport YourFriends from \"./yourFriends\";\r\nimport {getFriends, getPageSize, getTotalFriends, getDeletedFriend} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getFriendsList, deleteFriend, addFriendsList, setFriendsList} from \"../../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nclass YourFriendsContainer extends React.Component{\r\n    state ={\r\n        friends: []\r\n    }\r\n    componentDidMount() {\r\n        this.props.getFriendsList(1, this.props.pageSize)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            if(prevProps.deletedFriend !== this.props.deletedFriend){\r\n                this.deleteFriendLocal(this.props.deletedFriend[0])\r\n            }\r\n\r\n            if(prevProps.friends !== this.props.friends){\r\n                if(typeof this.props.friends === \"object\"){\r\n                    let friendsFetching = this.props.friends.map((friend)=> ({\r\n                        userId: friend.userId,\r\n                        name: friend.name,\r\n                        soName: friend.soName,\r\n                        company: friend.company,\r\n                        description: friend.description,\r\n                        isFetching: false\r\n                    }))\r\n                    this.setState({friends: [...this.state.friends, ...friendsFetching]})\r\n\r\n                }\r\n                else{\r\n                    if(typeof this.props.friends === 'object'){\r\n                        let friendsFetching = this.props.friends.map((friend)=> ({\r\n                            userId: friend.userId,\r\n                            name: friend.name,\r\n                            soName: friend.soName,\r\n                            company: friend.company,\r\n                            description: friend.description,\r\n                            isFetching: false\r\n                        }))\r\n                        this.setState({friends: friendsFetching})\r\n                    }\r\n                    else{\r\n                        this.setState({friends: this.props.friends})\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyFriends = {...this.state.friends}\r\n        copyFriends[buttonId].isFetching = true\r\n        this.setState({listButtons: copyFriends})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setFriendsList([],undefined)\r\n    }\r\n\r\n    deleteFriendLocal = (friendId) =>{\r\n        let friendsCopy = [...this.state.friends]\r\n        friendsCopy.splice(friendId, 1)\r\n        if(friendsCopy.length === 0){\r\n            this.setState({friends: \"no friends\"})\r\n        }\r\n        else{\r\n            this.setState({friends: friendsCopy})\r\n        }\r\n    }\r\n\r\n    deleteFriend = (userId, buttonId) =>{\r\n        this.changeButtonState(buttonId)\r\n        this.props.deleteFriend(userId, buttonId)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <div className=\"container\">\r\n                <YourFriends\r\n                        friends={this.state.friends}\r\n                        pageSize={this.props.pageSize}\r\n                        totalFriends={this.props.totalFriends}\r\n                        deleteFriend={this.deleteFriend}\r\n                        addToFriendsList={this.props.addFriendsList}\r\n\r\n\r\n                /></div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        friends: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalFriends: getTotalFriends(state),\r\n        deletedFriend: getDeletedFriend(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getFriendsList, deleteFriend, addFriendsList, setFriendsList})(YourFriendsContainer);","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport YourFriendsContainer from './yourFriends/yourFriendsContainer'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport addIcon from \"../../../assets/icons/h1-block/add.svg\";\r\nconst ProfileSettings = () =>{\r\n    return(\r\n            <>\r\n                <div className=\"container h1-block\">\r\n                    <h1 className=\"h1\">Настройки</h1>\r\n                </div>\r\n               <YourProfileContainer />\r\n               <YourFriendsContainer />\r\n            </>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings);","import React from 'react';\r\n\r\nimport styled from \"styled-components\";\r\nimport background from \"../../assets/summary-bg.jpg\";\r\n\r\nexport const BackGround = styled.div`\r\nbackground: url(${background});\r\ndisplay: block;\r\nposition: fixed;\r\ntop:0;\r\nleft: 0;\r\nright: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: -1;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\n`","import React, {useEffect, useState} from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../components/common/formControls\"\r\nimport {required} from \"../../../utils/validation\";\r\nimport doneImg from \"../../../assets/icons/done.svg\";\r\nimport {BackGround} from \"../../../components/common/background\"\r\n\r\n\r\nconst SuccessForm = () =>{\r\n    const [redirect, setRedirect] = useState(false)\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setRedirect(true)},1500)\r\n    },[])\r\n    return(\r\n            <div className={s.success_auth}>\r\n                {redirect && <Redirect to='/summary' />}\r\n                <img src={doneImg} alt=\"\"/><p>Вы авторизованы</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <h1 className={s.h1}>Вход</h1>\r\n                <div className={s.form_danger_wr}>{props.error ? <span className={s.form_danger}>{props.error}</span> : ''}</div>\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"emailInput\" type=\"text\"  component={Input} placeholder=\"Почта\" validate={required}/>\r\n                <Field name=\"passwordInput\" type=\"password\"  component={Input} placeholder=\"Пароль\" validate={required}/>\r\n                <p className={s.dont_reg_yet}>Нет учётной записи? <NavLink to='signup'>Создайте её!</NavLink></p>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Войти</button>\r\n\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login-form'})(LoginForm)\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendLoginRequest(values.emailInput, values.passwordInput)\r\n\r\n    }\r\n\r\n\r\n    return  (\r\n            <>\r\n           <BackGround />\r\n          <div className={`container ${s.login_container}`}>\r\n              <div className={s.login_block}>\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <LoginReduxForm isFetching={props.isFetching} onSubmit={onSubmit}/>\r\n                          </div>\r\n                          :\r\n                          <SuccessForm />\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    sendLoginRequest = (email, password) => {\r\n        this.props.loginThunkCreator(email, password)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <LoginBlock\r\n                       isFetching={this.props.isFetching}\r\n                       isAuth={this.props.isAuth}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n            />\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, PasswordScoreInput, Textarea} from \"../../common/formControls\";\r\nimport {required, checkLogin, checkEmail, checkPassword, passwordsMatch} from \"../../../utils/validation\";\r\nimport {BackGround} from \"../../common/background\";\r\n\r\nconst SignUpForm = (props) =>{\r\n    return (\r\n\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <h1 className={s.h1}>Регистрация</h1>\r\n                 {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                    <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                    <Field name=\"login\" type=\"text\"  component={Input} placeholder=\"Придумайте логин\" validate={[required, checkLogin]}/>\r\n                    <Field name=\"email\" type=\"text\"  component={Input} placeholder=\"Ваша почта\" validate={[required, checkEmail]}/>\r\n                    <Field name=\"password\" type=\"password\"  component={PasswordScoreInput} placeholder=\"Придумайте пароль\" validate={[required, checkPassword]}/>\r\n                    <Field name=\"repeatPassword\" type=\"password\"  component={Input} placeholder=\"Повторите пароль\" validate={[required, passwordsMatch]}/>\r\n                    <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n                    <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n\r\n                </form>\r\n\r\n    )\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({form: 'signup-form'})(SignUpForm)\r\n\r\nconst SignUpFormBlock = (props) =>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendSignUpRequest( values.email, values.login, values.password)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.signup_form}>\r\n                <SignUpReduxForm onSubmit={onSubmit} isFetching={props.isFetching}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n\r\n                <form className={s.profile_form} onSubmit={props.handleSubmit}>\r\n                    <Field name=\"name\" type=\"text\"  component={Input} placeholder=\"Имя\" validate={[required]}/>\r\n                    <Field name=\"soName\" type=\"text\"  component={Input} placeholder=\"Фамилия\" validate={[required]}/>\r\n                    <Field name=\"company\" type=\"text\"  component={Input} placeholder=\"Компания\" />\r\n                    <Field name=\"about\" type='text' component={Textarea} placeholder=\"О вас\" validate={[required]} />\r\n                    <button className='control_button' disabled={props.submitting || props.error}>Отправить</button>\r\n                </form>\r\n\r\n    )\r\n}\r\nconst ProfileFormReduxForm = reduxForm({form: 'signupProfile-form'})(ProfileForm)\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileFormBlock = (props)=>{\r\n    return(\r\n\r\n                <div className={s.profile_form_wr}>\r\n\r\n\r\n                    <div className={s.add_photo_row}>\r\n                        <div className={s.photo_cont}></div>\r\n                        <p className={s.add_photo}>Добавить фото</p>\r\n                    </div>\r\n                    <ProfileFormReduxForm />\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <>\r\n            <BackGround />\r\n                <div className={`container ${s.signup_container}`}>\r\n                    <div className={s.signup_block}>\r\n                    {props.signUpState === 'signUpForm' ?\r\n                   <ProfileFormBlock profileId={props.profileId} email={props.email}\r\n                                  login={props.login} regDate={props.regDate}/> : <SignUpFormBlock\r\n                        isFetching={props.isFetching} sendSignUpRequest={props.sendSignUpRequest}\r\n                        />\r\n                    }\r\n                    </div>\r\n                </div>\r\n                </>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSignUpState, signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n    sendSignUpRequest = (email,login,password) =>{\r\n      this.props.signUpThunkCreator(email,login,password)\r\n    }\r\n    render() {\r\n        return <SignUpBlock\r\n\r\n                isFetching={this.props.isFetching}\r\n                signUpState={this.props.signUpState}\r\n                profileId={this.props.profileId}\r\n                email={this.props.email}\r\n                login={this.props.login}\r\n                regDate={this.props.regDate}\r\n                sendSignUpRequest={this.sendSignUpRequest}\r\n\r\n\r\n\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isFetching: state.auth.isFetching,\r\n        signUpState: state.auth.signUpState,\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {setSignUpState, signUpThunkCreator})(SignUpContainer)","import React from 'react';\r\nimport s from './newFriends.module.scss';\r\nimport s2 from './../friends.module.scss'\r\nimport openfolder from '../../../../assets/icons/mail-open.svg'\r\nconst Loader = () =>{\r\n    return (<>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n        </>\r\n)\r\n}\r\n\r\nconst NewFriends = (props) => {\r\n        let acceptProposal = (userId, buttonId) =>{\r\n            props.acceptProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n        let denyProposal = (userId, buttonId) =>{\r\n            props.denyProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n\r\n\r\n        let proposalsList = []\r\n        let buttonSelector = (userId, buttonId) =>{\r\n\r\n                if(props.buttonsState[buttonId] && props.buttonsState[buttonId].isFetching === false){\r\n                    return <div className={s.buttons_row}>\r\n                        <button className={s.deny} onClick={() =>{denyProposal(userId, buttonId)}}>Отказать</button>\r\n                        <button className={s.accept} onClick={()=>{acceptProposal(userId, buttonId)}}>Принять</button>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <p>Загрузка</p>\r\n                }\r\n\r\n\r\n        }\r\n\r\n        if(props.isFetching === false){\r\n            if(props.proposals !== \"no proposals\"){\r\n                let i = 0\r\n                proposalsList = props.proposals.map((proposal)=> <div key={proposal.userId} className={s.line}>\r\n                    <div className={s.names_row} >\r\n                        <p className=\"name\">{proposal.name}</p>\r\n                        <p className=\"soname\">{proposal.soName}</p>\r\n                    </div>\r\n                    {buttonSelector(proposal.userId, i++)}\r\n                </div>)\r\n            }else{\r\n                proposalsList = <div className={s.noProposals}>\r\n                    <img src={openfolder} alt=\"\"/>\r\n                    <p>У вас нет заявок</p>\r\n                </div>\r\n            }\r\n        }\r\n        else {\r\n            proposalsList = <Loader />\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.newFriends}>\r\n                <h2>Заявки в друзья:</h2>\r\n                {proposalsList}\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default NewFriends;","import React from 'react';\r\nimport NewFriends from \"./newFriends\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getProposalsList} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getProposals, acceptProposal, denyProposal} from \"../../../../redux/profile-reducer\";\r\n\r\nclass NewFriendsContainer extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        buttonsState: []\r\n    }\r\n    componentDidMount() {\r\n     this.setState({isFetching: true})\r\n     this.props.getProposals()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({isFetching: false})\r\n            if(typeof this.props.proposals == 'object'){\r\n                let listButtons = this.props.proposals.map((profile)=> ({isFetching: false}))\r\n                this.setState({buttonsState: listButtons})\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyButtonsState = {...this.state.buttonsState}\r\n        copyButtonsState[buttonId].isFetching = true\r\n        this.setState({buttonsState: copyButtonsState})\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <NewFriends proposals={this.props.proposals}\r\n                            acceptProposal={this.props.acceptProposal}\r\n                            denyProposal={this.props.denyProposal}\r\n                            isFetching={this.state.isFetching}\r\n                            buttonsState={this.state.buttonsState}\r\n                            chanhgeButtonsState={this.changeButtonState}\r\n\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n       proposals: getProposalsList(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProposals, acceptProposal, denyProposal})(NewFriendsContainer);","import React from 'react';\r\nimport s2 from '../friends.module.scss';\r\nimport s from './usersList.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {Pagination} from \"../../../common/pagination/pagination\";\r\n\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\nconst UsersList = (props) => {\r\n    let postProposal = (id, buttonId) =>{\r\n       props.postProposal(id, props.currentPage)\r\n       props.changeButtonState(buttonId)\r\n\r\n    }\r\n\r\n    let deleteProposal = (id, buttonId) =>{\r\n       props.deleteProposal(id, props.currentPage)\r\n        props.changeButtonState(buttonId)\r\n    }\r\n\r\n\r\n    let buttonSelector = (status,id, buttonId) =>{\r\n        if(props.buttonsStates[buttonId] && props.buttonsStates[buttonId].isFetching === false){\r\n            switch (status){\r\n                case 'It is you': return\r\n                case 'proposal sent': return <p onClick={()=>{deleteProposal(id, buttonId)}}>Заявка отправлена</p>\r\n                case 'Your friend': return <p>Ваш друг</p>\r\n                case 'plain user':return <button onClick={()=>{postProposal(id, buttonId)}} className={s.add_button}>Добавить в друзья</button>\r\n                default: return\r\n            }\r\n        }\r\n        else {\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n\r\n    }\r\n    let i = 0\r\n    let profilesArr = props.profilesList.map((profile) =>\r\n            <div className={s2.line} key={profile._id.toString()}>\r\n                <div className={s2.names_row}>\r\n                   <p className=\"name\">{profile.name}</p>\r\n                   <p className=\"soname\">{profile.soName}</p>\r\n                </div>\r\n                <div className={s2.company}>{profile.company}</div>\r\n                <div className={s2.description}><p className={s2.description_p}>{offsetText(profile.description)}</p></div>\r\n                {buttonSelector(profile.friendStatus, profile._id, i++)}\r\n            </div>\r\n    )\r\n\r\n    return  (\r\n            <div className={s.usersList}>\r\n                <h2>Список пользователей:</h2>\r\n                 <Pagination pages={profilesArr} pageSize={props.pageSize} totalPages={props.totalProfiles}\r\n                             pageChanger={props.getProfilesList} loader={<LoadingProfile />} getCurrentPage={props.getCurrentPage}/>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default UsersList;","import React from 'react';\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilesList, postProposal, deleteProposal, setProposals} from \"../../../../redux/profile-reducer\";\r\nimport {selectProfilesList, getTotalProfiles, getPageSize} from \"../../../../redux/selectors/profileselectors\"\r\nclass UsersListContainer extends React.Component{\r\n\r\n    state ={\r\n        listButtons: [],\r\n        profilesList: [],\r\n        currentPage: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProfilesList(1, this.props.pageSize)\r\n\r\n    }\r\n\r\n    getCurrentPage = (currentPage) =>{\r\n        this.setState({currentPage: currentPage})\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyListButtons = {...this.state.listButtons}\r\n        copyListButtons[buttonId].isFetching = true\r\n        this.setState({listButtons: copyListButtons})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props !== prevProps){\r\n            this.setState({profilesList: this.props.profilesList})\r\n            for(let i = 0; i < this.state.profilesList.length; i++){\r\n\r\n                if(this.state.profilesList[i] && this.props.profilesList[i]){\r\n\r\n                    if( this.state.profilesList[i].friendStatus !== this.props.profilesList[i].friendStatus){\r\n                        let copyListButtons = {...this.state.listButtons}\r\n                        copyListButtons[i].isFetching = false\r\n                        this.setState({listButtons: copyListButtons})\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            if(this.state.listButtons.length === 0){\r\n                let listButtons = this.props.profilesList.map((profile)=> ({isFetching: false}))\r\n                this.setState({listButtons: listButtons})\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setProposals([])\r\n    }\r\n\r\n    getProfilesList = (page) =>{\r\n        this.props.getProfilesList(page,this.props.pageSize)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <UsersList profilesList={this.props.profilesList}\r\n                           totalProfiles={this.props.totalProfiles}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.state.currentPage}\r\n                           getProfilesList={this.getProfilesList}\r\n                           postProposal={this.props.postProposal}\r\n                           deleteProposal={this.props.deleteProposal}\r\n                           changeButtonState={this.changeButtonState}\r\n                           buttonsStates={this.state.listButtons}\r\n                           getCurrentPage={this.getCurrentPage}\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n      profilesList: selectProfilesList(state),\r\n      totalProfiles: getTotalProfiles(state),\r\n      pageSize: getPageSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProfilesList, postProposal, deleteProposal, setProposals})(UsersListContainer);","import React from 'react';\r\nimport NewFriendsContainer from \"./newFriends/newFriendsContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {FriendsPageLoader} from \"../../common/loadingSchemes\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst FriendsPage = (props) => {\r\n    return  (\r\n            <>\r\n                {props.isInitialized ?\r\n\r\n\r\n                        <div className=\"container\">\r\n                            <div className=\"h1-block\">\r\n                            <h1 className=\"h1\">Друзья</h1>\r\n                        </div>\r\n                             <p>Добавляйте другие аккаунты в друзья, для совместной работы.</p>\r\n                            <NewFriendsContainer />\r\n                            <UsersListContainer />\r\n                         </div>\r\n\r\n                    : <FriendsPageLoader />}\r\n            </>\r\n\r\n\r\n\r\n                    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(FriendsPage)","import React, {useEffect, useState} from \"react\";\r\nimport s from './counterInfo.module.scss'\r\nimport {PixelCodeBlock} from \"../../addcounter/addcounterblock/addcounterblock\";\r\n\r\nconst CounterInfo = (props) => {\r\n\r\n    return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className={`${s.counterInfo} col-6`}>\r\n                        <div className={s.names}>\r\n                            <div className={s.name}>\r\n                                <p>\r\n                                    {props.counterInfo.name}\r\n                                </p>\r\n                                <span>\r\n                                    Имя счётчика\r\n                                </span>\r\n                            </div>\r\n                            <div className={s.id}>\r\n                                <p>{props.counterInfo._id}</p>\r\n                                <span>tysId</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.counterInfo.domen}</p>\r\n                            <span>URL счётчика</span>\r\n                        </div>\r\n                        <div className={s.results}>\r\n                            <div className={s.dayusers}>\r\n                                <p>{props.counterInfo.dayusers}</p>\r\n                                <span>Пользователи за день</span>\r\n                            </div>\r\n                            <div className={s.allusers}>\r\n                                <p>{props.counterInfo.allusers}</p>\r\n                                <span>Пользователей всего</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <PixelCodeBlock pixelCode={props.counterInfo.pixelCode} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CounterInfo","import React, {useEffect, useState} from \"react\";\r\nimport CounterInfo from \"./counterInfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst CounterInfoContainer = (props) => {\r\n\r\n\r\n    return <CounterInfo counterId={props.counterId}\r\n                        counterInfo={props.counterInfo}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {})(CounterInfoContainer);","import React from \"react\";\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getTotalUsers} from '../../../../../redux/selectors/counters-selectors'\r\nimport {getMoreUsers} from \"../../../../../redux/counters-reducer\";\r\n\r\n\r\nconst UsersListContainer = (props) => {\r\n\r\n\r\n    return <UsersList  usersList={props.counterUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(UsersListContainer);","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport CounterInfoContainer from \"./counterInfo/counterInfoContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {clearCurrentCounter, getCurrentCounter} from \"../../../../redux/counters-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentCounterUsers, getCurrentCounterInfo, getPageSize} from \"../../../../redux/selectors/counters-selectors\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst CounterPage = (props) =>{\r\n    let {counterId} = useParams()\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        props.getCurrentCounter(counterId)\r\n        return () =>{\r\n            props.clearCurrentCounter()\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.counterInfo !== \"\"){\r\n            setPageState(\"main\")\r\n        }\r\n    },[props.counterInfo])\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<p>Загрузка</p> :<><CounterInfoContainer counterInfo={props.counterInfo}\r\n                    counterId={counterId} />\r\n                    <UsersListContainer counterUsers={props.counterUsers}\r\n                    counterId={counterId}/></> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n       counterInfo: getCurrentCounterInfo(state),\r\n       counterUsers: getCurrentCounterUsers(state)\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{getCurrentCounter, clearCurrentCounter}), WithAuthRedirect)(CounterPage);","import React from \"react\";\r\nimport s from './userPage.module.scss'\r\nimport mongoDate from \"../../utils/mongoDate\";\r\nconst UserPage = (props) => {\r\n    let userInfo = props.userInfo\r\n\r\n\r\n\r\n\r\n    let users = []\r\n    let lastDivider = ''\r\n    props.userSessions.forEach((item, index)=>{\r\n        if(item.awayTime && mongoDate(item.awayTime).comparativeDate !== lastDivider){\r\n            lastDivider = mongoDate(item.awayTime).comparativeDate\r\n            users.push({divider: mongoDate(item.awayTime).comparativeDate}, item)\r\n\r\n        }\r\n        else{\r\n            users.push(item)\r\n        }\r\n\r\n    })\r\n    let sessionCount = 0\r\n    users = users.map((user) => {\r\n        if(user.divider) {\r\n            return <div className={s.date_divider}>{user.divider}</div>\r\n        }\r\n        else{\r\n            return <div className={s.session}>\r\n                <span className={s.sessionNumber}>{++sessionCount}</span>\r\n                <div className={s.session_line}>\r\n                    {user.entryTime ? <p className={s.time}>{mongoDate(user.entryTime).time}</p> : <p className={s.notdefined}>Не определено</p>}\r\n                    <div className={s.time_line}></div>\r\n                    {user.awayTime ? <p className={s.time}>{mongoDate(user.awayTime).time}</p> : <p className={s.notdefined}>Не определено</p>}\r\n                </div>\r\n\r\n            </div>}\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n                <>\r\n                <div className=\"container h1-block\">\r\n                    <h1 className='h1'>Пользователь <span className={s.tysId}>{userInfo._id}</span></h1>\r\n                </div>\r\n                <div className='container'>\r\n\r\n\r\n                    <div className={s.row}>\r\n                        <div className={s.block + \" \" + s.col_6}>\r\n\r\n                                <h3 className={s.h3}>Основное:</h3>\r\n\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">URL</label>\r\n                                    <p>{userInfo.referer}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Ip</label>\r\n                                    <p>{userInfo.data.ipInfo.query}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Страна</label>\r\n                                    <p>{userInfo.data.ipInfo.country}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Город</label>\r\n                                    <p>{userInfo.data.ipInfo.city}</p>\r\n                                </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.block + \" \" + s.col_6}>\r\n\r\n                                <h3 className={s.h3}>Посещения:</h3>\r\n                            <div className={s.sessions_cont}>\r\n                                {users}\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.device_info}>\r\n                        <h4 className={s.h4}>Устройство:</h4>\r\n                        <div className={s.row}>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>Браузер</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Имя</label>\r\n                                    <p>{userInfo.data.device.browser.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.browser.version}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Осн. версия</label>\r\n                                    <p>{userInfo.data.device.browser.majorVersion}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>ОС</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Название</label>\r\n                                    <p>{userInfo.data.device.os.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.os.version}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>Об утстройстве</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Производитель</label>\r\n                                    <p>{userInfo.data.device.device.vendor}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Модель</label>\r\n                                    <p>{userInfo.data.device.device.model}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Тип</label>\r\n                                    <p>{userInfo.data.device.device.type}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Процессор</label>\r\n                                    <p>{userInfo.data.device.cpu.architecture}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <section>\r\n                        <h4 className={s.h4}>Расшифровка IP:</h4>\r\n                            <div className={s.row}>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>География</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Код страны</label>\r\n                                        <p>{userInfo.data.ipInfo.countryCode}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Регион</label>\r\n                                        <p>{userInfo.data.ipInfo.regionName}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. широта</label>\r\n                                        <p>{userInfo.data.ipInfo.lat}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. долгота</label>\r\n                                        <p>{userInfo.data.ipInfo.lon}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>Оператор</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Провайдер</label>\r\n                                        <p>{userInfo.data.ipInfo.isp}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Организация</label>\r\n                                        <p>{userInfo.data.ipInfo.org}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">AS</label>\r\n                                        <p>{userInfo.data.ipInfo.as}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>Остальное</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Индекс</label>\r\n                                        <p>{userInfo.data.ipInfo.zip}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Часовой пояс</label>\r\n                                        <p>{userInfo.data.ipInfo.timezone}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                    </section>\r\n                    <section>\r\n                        <h4 className={s.h4}>Заголовки:</h4>\r\n\r\n                        <div className={s.block + \" \" + s.col_12}>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">user_agent</label>\r\n                                <p>{userInfo.data.headers.user_agent}</p>\r\n                            </div>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">accept</label>\r\n                                <p>{userInfo.data.headers.accept}</p>\r\n                            </div>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">languages</label>\r\n                                <p>{userInfo.data.headers.languages}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </section>\r\n                </div>\r\n                    </>\r\n        )\r\n\r\n}\r\n\r\nexport default UserPage","import {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUserInfoFromState = (state) =>{\r\n    return state.users.userInfo\r\n}\r\n\r\nexport const getSessions = (state) =>{\r\n    return state.users.userInfo.sessions\r\n}\r\n\r\nexport const getUserSessionsList = createSelector(getSessions, (sessions) => {\r\n    let getSessions = (sessions) => {\r\n        let sessionsArray = []\r\n        for (let i = 0; sessions.length  > i ; i = i + 2) {\r\n            let nextIndex = i + 1\r\n            let session = ''\r\n\r\n            const makeSessionPare = (enterTime, awayTime) =>{\r\n                return  {\r\n                    entryTime : enterTime,\r\n                    awayTime : awayTime\r\n                }\r\n            }\r\n\r\n            if(sessions[i] && sessions[nextIndex]){\r\n                if(Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"goAwayTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, sessions[nextIndex].goAwayTime)\r\n                }\r\n                else if (Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"entryTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, undefined)\r\n                    i--\r\n                }\r\n            }\r\n            else if (sessions[i]){\r\n                session = makeSessionPare(sessions[i].entryTime,  undefined)\r\n            }\r\n            else {\r\n                session = makeSessionPare(undefined, undefined)\r\n            }\r\n\r\n            sessionsArray.unshift(session)\r\n        }\r\n\r\n\r\n        return sessionsArray\r\n\r\n    }\r\n       if(sessions !== undefined){\r\n           return getSessions(sessions)\r\n       }\r\n       else{\r\n           return ''\r\n       }\r\n\r\n\r\n\r\n})\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport UserPage from \"./userPage\";\r\nimport {clearUserInfo, getUserInfo} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserInfoFromState, getUserSessionsList} from '../../redux/selectors/users-selectors'\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {UserPageLoader} from \"../common/loadingSchemes\";\r\n\r\nconst UserPageContainer = (props) =>{\r\n    let {tysId} = useParams()\r\n\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        props.getUserInfo(tysId)\r\n        return () =>{\r\n            props.clearUserInfo()\r\n        }\r\n    },[])\r\n\r\n     useEffect(()=>{\r\n        if(props.userInfo !== \"\"){\r\n            setPageState(\"main\")\r\n        }\r\n    },[props.userInfo])\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<UserPageLoader /> :<UserPage userInfo={props.userInfo}\r\n                                                                      userSessions={props.userSessions}\r\n                                                                      tysId={props.tysId}\r\n                /> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        userInfo: getUserInfoFromState(state),\r\n        userSessions: getUserSessionsList(state)\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{clearUserInfo, getUserInfo}), WithAuthRedirect)(UserPageContainer);","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\n\nimport SideBarContainer from \"./components/sidebar/sidebarContainer\";\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport  {Route} from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nimport FriendsPage from \"./components/profile/friends/friends\";\nimport CounterPage from \"./components/content/counters/counterPage/counterPage\";\nimport {InitializingApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nimport UserPageContainer from \"./components/userPage/userPageContainer\";\n\nimport {getMenuState} from \"./redux/selectors/app-selectors\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.InitializingApp()\n    }\n\n    render (){\n        return <div className=\"app-wrapper\">\n\n            <div className=\"row\">\n\n                <SideBarContainer />\n                <div className={this.props.menuState === \"collapsed\" ? \"content\" : \"content sidebar_closed\"}>\n                <Route path='/summary'  render={ () => <Summary  /> } />\n                    <Route path='/counter/:counterId' render={()=> <CounterPage />} />\n                    <Route path='/counters' render={() => <Counters />}/>\n                    <Route path='/audiences' render={() => <Audiences />} />\n                    <Route path='/profile' render={() => <ProfileContainer />} />\n                    <Route path='/profilesettings' render={() => <ProfileSettings />} />\n                    <Route exact path='/login'  render={()=> <LoginContainer />} />\n                    <Route exact path='/signup' render={()=> <SignUpContainer />} />\n                    <Route path='/friends' render={()=> <FriendsPage />} />\n                    <Route path='/users/:tysId' render={()=><UserPageContainer />} />\n            </div>\n\n\n\n            </div>\n        </div>\n    }\n}\n\n\nlet mapStateToProps = (state) =>{\n    return{\n        menuState: getMenuState(state)\n    }\n}\n\n\nexport default connect(mapStateToProps, {InitializingApp})(App)\n\n\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {CookiesProvider} from \"react-cookie\";\n\n\n\n    ReactDOM.render(\n            <CookiesProvider>\n                <BrowserRouter>\n                    <Provider store={store}>\n                        <App  />\n                    </Provider>\n                </BrowserRouter>\n            </CookiesProvider> ,\n            document.getElementById('root')\n            );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"h1\":\"login_h1__XRWpf\",\"login_block\":\"login_login_block__14dA7\",\"form_danger_wr\":\"login_form_danger_wr__Z8K09\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\",\"form_danger\":\"login_form_danger__2x0dg\",\"success_auth\":\"login_success_auth__1Bv0W\",\"login_container\":\"login_login_container__rIdfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_row\":\"userPage_label_row__2k2Vo\",\"sessions_cont\":\"userPage_sessions_cont__KgoZv\",\"h4\":\"userPage_h4__1uA9A\",\"h3\":\"userPage_h3__19Kt-\",\"main_info\":\"userPage_main_info__G48F6\",\"visits\":\"userPage_visits__32s7Y\",\"session_line\":\"userPage_session_line__1H_I5\",\"session\":\"userPage_session__2cKEr\",\"time\":\"userPage_time__1uscj\",\"notdefined\":\"userPage_notdefined__9FmxH\",\"time_line\":\"userPage_time_line__20dSP\",\"date_divider\":\"userPage_date_divider__x2Thq\",\"col_head\":\"userPage_col_head__2HiGw\",\"block\":\"userPage_block__1Liia\",\"col_4\":\"userPage_col_4__2FpHk\",\"col_6\":\"userPage_col_6__rdc5i\",\"col_12\":\"userPage_col_12__1_pxn\",\"row\":\"userPage_row__2I3SL\",\"tysId\":\"userPage_tysId__3Sf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"counterInfo_names__Mts4J\",\"id\":\"counterInfo_id__2FRUp\",\"name\":\"counterInfo_name__1Da7N\",\"counterInfo\":\"counterInfo_counterInfo__3ssjo\",\"domen\":\"counterInfo_domen__1rZ-Z\",\"results\":\"counterInfo_results__3RGfx\",\"dayusers\":\"counterInfo_dayusers__10wzY\",\"allusers\":\"counterInfo_allusers__3L6Rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"newFriends_line__QT2su\",\"names_row\":\"newFriends_names_row__2avSk\",\"buttons_row\":\"newFriends_buttons_row__23C0v\",\"deny\":\"newFriends_deny__2F1X5\",\"accept\":\"newFriends_accept__3r7sm\",\"newFriends\":\"newFriends_newFriends__1JkmK\",\"noProposals\":\"newFriends_noProposals__2uuG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__1Nria\",\"name\":\"shortcounter_name__Xmzxi\",\"domen\":\"shortcounter_domen__2aB4J\",\"dayusers\":\"shortcounter_dayusers__RFuyn\",\"totalusers\":\"shortcounter_totalusers__CL71_\",\"owner\":\"shortcounter_owner__8oobN\"};","module.exports = __webpack_public_path__ + \"static/media/add.9962b909.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","module.exports = __webpack_public_path__ + \"static/media/done.5cdbb761.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.78208480.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flag\":\"usersList_flag__2GSHq\",\"flag-AD\":\"usersList_flag-AD__28-Ld\",\"flag-AE\":\"usersList_flag-AE__-Tvo4\",\"flag-AG\":\"usersList_flag-AG__3hY5f\",\"flag-AM\":\"usersList_flag-AM__w92z3\",\"flag-AR\":\"usersList_flag-AR__iDlvg\",\"flag-AT\":\"usersList_flag-AT__1F4KS\",\"flag-AU\":\"usersList_flag-AU__2BQBr\",\"flag-BE\":\"usersList_flag-BE__u-KjT\",\"flag-BF\":\"usersList_flag-BF__30Pnv\",\"flag-BG\":\"usersList_flag-BG__3E-M9\",\"flag-BO\":\"usersList_flag-BO__3oA8e\",\"flag-BR\":\"usersList_flag-BR__1rqh-\",\"flag-CA\":\"usersList_flag-CA__AckMB\",\"flag-CD\":\"usersList_flag-CD__3aUbU\",\"flag-CG\":\"usersList_flag-CG__13pgd\",\"flag-CH\":\"usersList_flag-CH__2L8EY\",\"flag-CL\":\"usersList_flag-CL__ECGkc\",\"flag-CM\":\"usersList_flag-CM__1ZjFS\",\"flag-CN\":\"usersList_flag-CN__28Kt9\",\"flag-CO\":\"usersList_flag-CO__kszHI\",\"flag-CZ\":\"usersList_flag-CZ__3s1gU\",\"flag-DE\":\"usersList_flag-DE__HWnJh\",\"flag-DJ\":\"usersList_flag-DJ__3IFAb\",\"flag-DK\":\"usersList_flag-DK__20-GX\",\"flag-DZ\":\"usersList_flag-DZ__2guVT\",\"flag-EE\":\"usersList_flag-EE__3SD-O\",\"flag-EG\":\"usersList_flag-EG__Zw2gT\",\"flag-ES\":\"usersList_flag-ES__3Mvgx\",\"flag-FL\":\"usersList_flag-FL__3UviB\",\"flag-FR\":\"usersList_flag-FR__Sc6R8\",\"flag-GA\":\"usersList_flag-GA__3N5wF\",\"flag-GB\":\"usersList_flag-GB__QDFE0\",\"flag-GM\":\"usersList_flag-GM__2ZYP_\",\"flag-GT\":\"usersList_flag-GT__R20cv\",\"flag-HN\":\"usersList_flag-HN__SG8HZ\",\"flag-HT\":\"usersList_flag-HT__2gLUp\",\"flag-HU\":\"usersList_flag-HU__1np09\",\"flag-ID\":\"usersList_flag-ID__3sv_I\",\"flag-IE\":\"usersList_flag-IE__6D5k6\",\"flag-IL\":\"usersList_flag-IL__3j7eI\",\"flag-IN\":\"usersList_flag-IN__2lSnm\",\"flag-IQ\":\"usersList_flag-IQ__3sBmG\",\"flag-IR\":\"usersList_flag-IR__f7dHv\",\"flag-IT\":\"usersList_flag-IT__1W8ex\",\"flag-JM\":\"usersList_flag-JM__3j6Pm\",\"flag-JO\":\"usersList_flag-JO__3AezU\",\"flag-JP\":\"usersList_flag-JP__r5fM4\",\"flag-KG\":\"usersList_flag-KG__SY17J\",\"flag-KN\":\"usersList_flag-KN__1SC6n\",\"flag-KP\":\"usersList_flag-KP__36V4l\",\"flag-KR\":\"usersList_flag-KR__HxNFj\",\"flag-KW\":\"usersList_flag-KW__1s10H\",\"flag-KZ\":\"usersList_flag-KZ__3deke\",\"flag-LA\":\"usersList_flag-LA__kcv1W\",\"flag-LB\":\"usersList_flag-LB__3E8KO\",\"flag-LC\":\"usersList_flag-LC__1d3_w\",\"flag-LS\":\"usersList_flag-LS__117IC\",\"flag-LU\":\"usersList_flag-LU__1qrf8\",\"flag-LV\":\"usersList_flag-LV__3zU9I\",\"flag-MG\":\"usersList_flag-MG__t-CXg\",\"flag-MK\":\"usersList_flag-MK__vPOkL\",\"flag-ML\":\"usersList_flag-ML__36g1u\",\"flag-MM\":\"usersList_flag-MM__28dSo\",\"flag-MT\":\"usersList_flag-MT__2-Yrc\",\"flag-MX\":\"usersList_flag-MX__wzUa1\",\"flag-NA\":\"usersList_flag-NA__3kCAp\",\"flag-NE\":\"usersList_flag-NE__27h7N\",\"flag-NG\":\"usersList_flag-NG__3db0b\",\"flag-NI\":\"usersList_flag-NI__35LU0\",\"flag-NL\":\"usersList_flag-NL__SCdSk\",\"flag-NO\":\"usersList_flag-NO__3Uy0z\",\"flag-OM\":\"usersList_flag-OM__1bqbs\",\"flag-PA\":\"usersList_flag-PA__1vtN-\",\"flag-PE\":\"usersList_flag-PE__1WaE3\",\"flag-PG\":\"usersList_flag-PG__1Rn6z\",\"flag-PK\":\"usersList_flag-PK__3hHpS\",\"flag-PL\":\"usersList_flag-PL__2SJC2\",\"flag-PT\":\"usersList_flag-PT__4j0by\",\"flag-PY\":\"usersList_flag-PY__1I_VY\",\"flag-QA\":\"usersList_flag-QA__3k-bO\",\"flag-RO\":\"usersList_flag-RO__2LJX3\",\"flag-RU\":\"usersList_flag-RU__2UisT\",\"flag-RW\":\"usersList_flag-RW__3ucM_\",\"flag-SA\":\"usersList_flag-SA__RBhxn\",\"flag-SE\":\"usersList_flag-SE__2NYyw\",\"flag-SG\":\"usersList_flag-SG__38Sbp\",\"flag-SL\":\"usersList_flag-SL__1ql1t\",\"flag-SN\":\"usersList_flag-SN__3xhNv\",\"flag-SO\":\"usersList_flag-SO__3OvPT\",\"flag-SV\":\"usersList_flag-SV__sc9e8\",\"flag-TD\":\"usersList_flag-TD__PJirO\",\"flag-TJ\":\"usersList_flag-TJ__32Ew_\",\"flag-TL\":\"usersList_flag-TL__svnVy\",\"flag-TR\":\"usersList_flag-TR__2xcu_\",\"flag-TZ\":\"usersList_flag-TZ__11_a1\",\"flag-UA\":\"usersList_flag-UA__2W8Z3\",\"flag-US\":\"usersList_flag-US__3rCFU\",\"flag-VE\":\"usersList_flag-VE__9EUPl\",\"flag-VN\":\"usersList_flag-VN__NOtmd\",\"flag-YE\":\"usersList_flag-YE__2d5wR\"};"],"sourceRoot":""}