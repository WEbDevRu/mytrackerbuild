{"version":3,"sources":["components/common/loadingschemes/loadingschemes.module.scss","components/content/settings/avatar/avatar.module.scss","components/content/settings/yourFriends/yourFriends.module.scss","components/content/counters/counterPage/counterInfo/counterInfo.module.scss","components/common/common.module.scss","components/sidebar/sidebar.module.scss","assets/icons/menu/hamburger.svg","assets/icons/menu/summary.svg","assets/icons/menu/eye.svg","assets/icons/menu/friend.svg","assets/icons/menu/settings.svg","assets/icons/menu/short-menu.svg","assets/icons/os/android.svg","assets/icons/os/windows.svg","assets/icons/os/apple.svg","assets/icons/os/macos.svg","assets/icons/os/linux.svg","assets/icons/os/undefined.svg","assets/icons/emptyUsers.svg","components/content/audiences/audienceslist/audienceslist.module.scss","assets/icons/users.svg","assets/summary-bg.jpg","components/signup/success/success.module.scss","assets/icons/mail-open.svg","assets/icons/accept.svg","assets/icons/dismiss.svg","assets/notFound.gif","assets/icons/clockError.svg","assets/icons/error.svg","components/content/counters/countersLists/counterslist.module.scss","assets/icons/loading.svg","assets/icons/menu/auditories.svg","components/profile/profileLine/profileLine.module.scss","components/content/counters/addcounter/addcounter.module.scss","serviceWorker.js","api/counters-api.js","api/users-api.js","redux/counters-reducer.js","redux/audiences-reducer.js","api/summary-api.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/app-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","redux/selectors/app-selectors.js","redux/selectors/profileselectors.js","components/sidebar/sidebarContainer.jsx","redux/selectors/summary-selectors.js","utils/mongoDate.js","components/common/formControls.jsx","components/common/loadMore.jsx","components/content/counters/counterPage/usersList/usersList.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","hoc/withAuthRedirect.js","components/common/loadingschemes/loadingSchemes.jsx","utils/customHooks.js","components/content/summary/summary.jsx","utils/validation.js","components/content/counters/pixelcode/pixelCode.jsx","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","redux/selectors/counters-selectors.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/countersLists/shortcounter/shortcounter.jsx","components/common/pagination/pagination.jsx","components/content/counters/countersLists/yourCounters/yourCountersList.jsx","components/content/counters/countersLists/yourCounters/yourCountersListContainer.jsx","components/content/counters/countersLists/friendsCounters/friendsCountersList.jsx","components/content/counters/countersLists/friendsCounters/friendsCountersListContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","utils/textTransformation.js","components/common/editinput.jsx","components/content/settings/avatar/avatar.jsx","components/content/settings/avatar/avatarContainer.jsx","components/content/settings/yourprofile/yourprofile.jsx","components/content/settings/yourprofile/yourprofileContainer.jsx","components/profile/profileLine/profileLine.jsx","components/content/settings/yourFriends/yourFriends.jsx","components/content/settings/yourFriends/yourFriendsContainer.jsx","components/content/settings/profilesettings.jsx","components/common/background.jsx","components/login/loginform.jsx","components/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/signup/registration/registration.jsx","hoc/withAuthStageRedirect.js","components/signup/registration/registrationContainer.jsx","components/signup/confirmEmail/confirmEmail.jsx","components/signup/confirmEmail/confirmEmailContainer.jsx","components/signup/additionalInfo/additionalInfo.jsx","components/signup/additionalInfo/additionalInfoContainer.jsx","components/signup/success/success.jsx","components/signup/signup.jsx","components/signup/signupContainer.jsx","components/content/friends/newFriends/proposal/proposal.jsx","components/content/friends/newFriends/newFriends.jsx","components/content/friends/newFriends/newFriendsContainer.jsx","components/content/friends/usersList/usersList.jsx","components/content/friends/usersList/usersListContainer.jsx","components/content/friends/friends.jsx","components/content/counters/counterPage/counterInfo/counterInfo.jsx","components/content/counters/counterPage/counterInfo/counterInfoContainer.jsx","components/content/counters/counterPage/usersList/usersListContainer.jsx","components/content/counters/counterPage/counterPage.jsx","components/userPage/userPage.jsx","redux/selectors/users-selectors.js","components/userPage/userPageContainer.jsx","components/content/notFoundPage/notFoundPage.jsx","components/signup/confirmEmailRef/confirmEmailRef.jsx","components/signup/confirmEmailRef/confirmEmailRefContainer.jsx","App.js","index.js","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/userPage/userPage.module.scss","assets/icons/done.svg","components/signup/registration/registration.module.scss","components/login/login.module.scss","components/signup/additionalInfo/additionalInfo.module.scss","components/content/counters/countersLists/shortcounter/shortcounter.module.scss","assets/icons/menu/profile.svg","components/content/audiences/addaudience/addaudience.module.scss","components/content/friends/newFriends/newFriends.module.scss","components/signup/confirmEmail/confirmEmail.module.scss","components/signup/confirmEmailRef/confirmEmailRef.module.scss","assets/icons/h1-block/add.svg","components/content/friends/friends.module.scss","components/content/counters/pixelcode/pixelCode.module.scss","components/common/pagination/pagination.module.scss","components/content/settings/yourprofile/yourprofile.module.scss","components/content/friends/usersList/usersList.module.scss","components/content/notFoundPage/notFoundPage.module.scss","assets/icons/plus.svg","components/signup/signup.module.scss","components/content/counters/counterPage/usersList/usersList.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","baseURL","countersAPI","data","post","headers","store","getState","auth","token","then","response","catch","error","console","warn","page","limit","get","params","counterId","usersAPI","tysId","initialState","pageSize","pixelCode","yourCounters","counterslistData","totalCounters","friendsCounters","currentCounter","counterInfo","counterUsers","totalUsers","addCounter","counterData","type","setYourCounters","countersData","setYourTotalCounters","setFriendsCounters","setFriendsTotalCounters","countersReducer","state","action","newCounter","id","_id","name","domen","dayusers","allusers","status","items","totalDocs","usersPage","users","audiencelistData","description","counters","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","inputName","value","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","summaryAPI","graphicArr","summaryInfo","dayUsers","dayClicks","summaryUsers","graphicData","summaryReducer","message","clicks","profileAPI","put","proposals","profileActionsAPI","userId","delete","soName","company","avatar","totalProfiles","undefined","profilesList","friendsList","totalFriends","deletedFriend","setProfileInfo","setProfilesList","setTotalProfiles","count","setProposals","setFriendsList","friends","setAvatar","avatarData","getProposals","dispatch","a","getProfilesList","totalPages","profileReducer","friendId","authedInstance","authAPI","email","password","signUpAPI","login","descriptions","profileId","regDate","isAuth","stage","isFetching","confirmEmailResult","setProfileData","authProfileData","setToken","toggleIsFetching","setConfirmEmailResult","result","updateAuthInfo","authReducer","isInitialized","menuState","appReducer","userInfo","usersReducer","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","Sidebar","props","className","s","sidebar","sidebar_closed","sidebar_top","logo","hamburger","onClick","toggleMenuState","src","hamburgerIcon","alt","sidebar_menu","onMouseOver","onmouseover","onMouseOut","onmouseout","to","activeClassName","active","link_item","menu_icon","summaryIcon","eyeIcon","friendsIcon","settingsIcon","profile_cont","shortMenuIcon","logout","fetching","avatar_loader","none","uploaded","profileIcon","user_login","login_loader","login_wr","profileLogin","getMenuState","selectProfilesList","getTotalProfiles","getPageSize","getProposalsList","getFriends","getTotalFriends","getDeletedFriend","getAvatarSelector","connect","getAvatar","useCookies","removeCookie","useState","sideBarVisibility","setSideBarVisibility","profileBlockState","setProfileBlockState","pageName","useLocation","useEffect","some","el","pathname","split","includes","reload","getSummaryInfo","getSummaryGraphic","getSummaryUsers","getTotalUsers","mongoDate","inputDate","d","Date","dateNow","dateFormatter","Intl","DateTimeFormat","timeFormatter","hour","minute","millieSecondsCompare","firstDate","secondDate","comparativeDate","now","parse","getHours","getMinutes","getSeconds","getMilliseconds","format","date","time","seconds","Input","input","meta","placeholder","input_wr","touched","danger","input_danger","Textarea","textareaRef","useRef","current","style","height","scrollHeight","textarea_wr","ref","cols","rows","PasswordScoreInput","strengthValue","strengthText","password_strength","IconCont","styled","div","ButtonStyled","icon","children","primary","DisabledStyled","span","Button","disabled","FormFetching","loading_bar","LoadMoreButton","LoadMoreComponent","pagesCount","Math","ceil","pages","inizialized","currentPage","changePage","LoadMore","initialized","setState","pageChanger","getCurrentPage","loaders","pagesSelector","emptyBlock","prevProps","prevState","snapshot","push","loader","React","Component","Time","Sessions","Referrer","City","Country","Os","ShortUserLine","NavLink","LoadingUser","ListDivider","Visits","NoUsersBlock","NoUsers","NoUsersIcon","ShortUser","shortUser","sessions","referrer","flag","country","city","os","AndroidIcon","WindowsIcon","iOSIcon","MacOsIcon","LinuxIcon","UndefinedOsIcon","selectOsIcon","UsersList","usersList","lastDivider","forEach","item","index","divider","map","user","key","sessionsNumber","getMoreUsers","Col","ColInfo","show","css","ColBlock","ColWr","ColTime","p","ColNumber","ColTimesRow","ColDay","Graphiccol","colheight","colHeight","infoState","setInfoState","e","innerWidth","clientX","changeInfoState","colValue","colData","GraphicWr","GraphicColsWR","GraphicBottom","GraphicName","h2","hide","NowP","Hours24P","Hours48P","NowDot","Hours24Dot","Hours48Dot","memo","hideH","setHideH","hRef","maxUsersCount","coldata","usersCount","max","apply","graphicColElements","onMouseLeave","onMouseMove","getBoundingClientRect","x","width","changeHState","KeyNumbersWr","KeyNumberBlock","KeyNumberContent","KeyNumberName","KeyNumber","Daystat","graphicInfo","mapStateToProps","WithAuthRedirect","CountersListLoader","counters_h1","h1","elem","add_counter","counters_table_head","list_ul","page_buttons","page_button","margin_55px","CounterPageLoader","counterpage_row","counter_left","counter_key_numbers","counter_key_number","counter_desc","code_block","load_more_bottom","FriendsPageLoader","text_linefriends","list","big_ul","SummaryPageLoader","loading_scheme","day_stat_row","day_stat","graphic","UserPageLoader","user_stat_row","user_main_block","user_h3","user_blocks_row","user_block","user_block_col_12","useDocTitle","title","docTitle","setDocTitle","document","getSummaryData","Promise","all","clearSummaryData","pageState","setPageState","required","checkLogin","test","checkEmail","checkPassword","passwordsMatch","allValues","minLength","PixelCodeBlock","copySuccess","setCopySuccess","textAreaRef","codeBlock","target","select","codeTextarea","copyButton_wr","execCommand","focus","setTimeout","copied_label","SendButton","AddCounterReduxForm","reduxForm","addcounter_form","onSubmit","handleSubmit","form_danger","Field","component","validate","submitting","invalid","anyTouched","FetchingForm","form_fetching","loader_icon","Addcounterblock","values","postCounter","counterDomen","row","blockState","text","last_text","makeOneMore","textSelector","blockSelector","getPixelCode","getCurrentCounterInfo","getCurrentCounterUsers","getYourCounters","getYourTotalCounters","getFriendsCounters","getFriendsTotalCounters","reset","setBlockState","Addcounterbutton","addIcon","Addcounter","exact","path","render","Shortcounter","short_counter","owner","PaginationComponent","pagesButtonsElements","current_page","pages_buttons","Loader","Pagination","LoadingCounter","loading_counter","EmptyBlock","noCounters","plus","YourCountersList","countersElement","countersListData","firstLoader","table_head","list_head","YourCountersListContainer","changeYourCounters","FriendsCountersList","FriendsCountersListContainer","changeFriendsCounters","getCounters","clearCountersLists","Addaudienceblock","clicked","event","deleteCounter","getAttribute","countersOptionsElements","countersSelect","countersElements","audience_badge","counterid","version","viewBox","xmlns","fill","name_input","createRef","description_input","counters_select","add_form","onChange","reloadInput","nameInput","descriptionName","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","log","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","offsetText","textarr","isUrl","lineNumber","line","wordNumber","href","EditInput","inputText","inputEditMode","wasUpdated","changeCondition","inputState","putInfo","reloadNameInput","currentTarget","withedit_block","loadingImg","done_check","doneImg","editInput","onBlur","autoFocus","withedit_current","EditTextarea","wrap","Avatar","avatarBlock","photo_wr","AvatarContainer","YourProfile","photo_col","info_col","info_inputs","putProfileInfo","YourProfileContainer","getProfileInfo","newInfo","Description","blockRef","openRef","descriptionVisibility","setDescriptionVisibility","handleOutsideClick","closest","addEventListener","removeEventListener","description_wr","description_block","company_line","info_p","ProfileLine","names_row","avatar_cont","emptyAvatar","buttons","buttonsComponent","LoadingProfile","s2","loading_profile","NoFriends","noFriends","friendIcon","YourFriends","buttonSelector","buttonId","button","deleteFriend","friend","yourFriends","addToFriendsList","YourFriendsContainer","changeButtonState","copyFriends","listButtons","deleteFriendLocal","friendsCopy","getFriendsList","friendsFetching","addFriendsList","friendsPage","BackGround","background","SuccessForm","redirect","setRedirect","success_auth","LoginReduxForm","form_danger_wr","dont_reg_yet","LoginBlock","login_block","sendLoginRequest","emailInput","passwordInput","loginThunkCreator","cookie","stopSubmit","_error","Profile","ProfileContainer","SignUpReduxForm","Registration","signup_form","sendSignUpRequest","FetchingBlock","fetching_block","loading","WithSignUpStagePreloader","signUpThunkCreator","ConfirmEmail","buttonDisabled","setButtonDisabled","timerSeconds","setTimerSeconds","showBadge","setShowBadge","showTimer","setShowTimer","timer","clearInterval","confirm_block","button_cont","sendEmail","setInterval","sent_badge","timer_p","SendEmail","ProfileFormReduxForm","profile_form","AdditionalInfo","profile_form_wr","add_photo_row","photo_cont","add_photo","sendAdditionalInfo","about","SendAdditionalInfo","successBlock","successImg","SignUpBlock","signup_block","regStage","redirectCallBack","Proposal","buttonKey","buttonsState","buttons_row","dismissIcon","denyProposal","chanhgeButtonsState","acceptIcon","acceptProposal","loadingButton","NewFriends","proposalsList","proposal","noProposals","openFolderIcon","newFriends","NewFriendsContainer","copyButtonsState","profile","buttonsStates","loadingIcon","deleteProposal","yourfriend","postProposal","profilesArr","buttons_cont","friendStatus","UsersListContainer","copyListButtons","clearFriendsPage","getFriendsPage","CounterDesc","CounterDescLabel","CounterDescText","CounterInfo","getCurrentCounter","setCurrentCounter","clearCurrentCounter","useParams","setTitle","UserPage","userSessions","awayTime","sessionCount","date_divider","session","sessionNumber","session_line","entryTime","notdefined","time_line","block","col_6","h3","label_row","referer","ipInfo","query","sessions_cont","device_info","h4","col_4","col_head","device","browser","majorVersion","vendor","model","cpu","architecture","countryCode","regionName","lat","lon","isp","org","as","zip","timezone","col_12","user_agent","accept","languages","getUserInfoFromState","getUserSessionsList","createSelector","sessionsArray","nextIndex","makeSessionPare","enterTime","Object","keys","goAwayTime","unshift","getSessions","clearUserInfo","getUserInfo","NotFoundPage","container","gif_cont","notFoundGif","ExpiredBlock","clockImg","ErrorBlock","errorImg","SuccessBlock","FalseStageBlock","ConfirmEmailRef","confirmResult","confirmToken","App","InitializingApp","promise","getCookie","matches","RegExp","replace","decodeURIComponent","getAuth","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,2BAA2B,UAAU,8B","file":"static/js/main.bad272b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"loadingschemes_elem__Vvy4K\",\"loadingScheme\":\"loadingschemes_loadingScheme__2H65q\",\"add_button\":\"loadingschemes_add_button__3Rt3y\",\"counters_table_head\":\"loadingschemes_counters_table_head__2xwjR\",\"list_ul\":\"loadingschemes_list_ul__2wBKu\",\"page_buttons\":\"loadingschemes_page_buttons__2rBD2\",\"page_button\":\"loadingschemes_page_button__2qBLO\",\"text_line\":\"loadingschemes_text_line__2a9ay\",\"big_ul\":\"loadingschemes_big_ul__3lqIE\",\"list\":\"loadingschemes_list__BEqmK\",\"h2\":\"loadingschemes_h2__2Qxm2\",\"h1\":\"loadingschemes_h1__2d1I_\",\"day_stat_row\":\"loadingschemes_day_stat_row__2XYsd\",\"day_stat\":\"loadingschemes_day_stat__R9ia1\",\"graphic\":\"loadingschemes_graphic__LIDK2\",\"load_more_bottom\":\"loadingschemes_load_more_bottom__12O4I\",\"user_stat_row\":\"loadingschemes_user_stat_row__11-LX\",\"user_main_block\":\"loadingschemes_user_main_block__fDsnk\",\"user_h3\":\"loadingschemes_user_h3__3aUCk\",\"user_blocks_row\":\"loadingschemes_user_blocks_row__GJOPh\",\"user_block\":\"loadingschemes_user_block__QqJhC\",\"user_block_col_12\":\"loadingschemes_user_block_col_12__3156G\",\"counters_h1\":\"loadingschemes_counters_h1__3XU5D\",\"add_counter\":\"loadingschemes_add_counter__KnT8N\",\"margin_55px\":\"loadingschemes_margin_55px__2G-u7\",\"counter_left\":\"loadingschemes_counter_left__2-Ep-\",\"counter_key_numbers\":\"loadingschemes_counter_key_numbers__35sqa\",\"counter_key_number\":\"loadingschemes_counter_key_number__3KGBM\",\"counter_desc\":\"loadingschemes_counter_desc__1bETr\",\"code_block\":\"loadingschemes_code_block__P_LU-\",\"text_linefriends\":\"loadingschemes_text_linefriends__PtSHx\",\"proposals\":\"loadingschemes_proposals__3WUKb\",\"counterpage_row\":\"loadingschemes_counterpage_row__2XDx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarBlock\":\"avatar_avatarBlock__3retG\",\"photo_wr\":\"avatar_photo_wr__H8S0i\",\"p\":\"avatar_p__VkhNN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yourFriends\":\"yourFriends_yourFriends__1HBkZ\",\"noFriends\":\"yourFriends_noFriends__Iav2L\",\"button\":\"yourFriends_button__3IMPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"counterInfo_names__Mts4J\",\"id\":\"counterInfo_id__2FRUp\",\"name\":\"counterInfo_name__1Da7N\",\"counterInfo\":\"counterInfo_counterInfo__3ssjo\",\"domen\":\"counterInfo_domen__1rZ-Z\",\"results\":\"counterInfo_results__3RGfx\",\"dayusers\":\"counterInfo_dayusers__10wzY\",\"allusers\":\"counterInfo_allusers__3L6Rh\",\"row\":\"counterInfo_row__3MA8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withedit_current\":\"common_withedit_current__3mFwP\",\"withedit_block\":\"common_withedit_block__11_W2\",\"plain_input\":\"common_plain_input__3zzxU\",\"plain_textarea\":\"common_plain_textarea__237u6\",\"loading_bar\":\"common_loading_bar__TjjZG\",\"loading\":\"common_loading__2aPGq\",\"active\":\"common_active__372eZ\",\"done_check\":\"common_done_check__3kKij\",\"input_wr\":\"common_input_wr__1j_qc\",\"form_danger\":\"common_form_danger__2ZFlS\",\"load_more\":\"common_load_more__mlkAq\",\"all_loaded\":\"common_all_loaded__11aHE\",\"loading_scheme\":\"common_loading_scheme__tcTaS\",\"editInput\":\"common_editInput__3pCcw\",\"danger\":\"common_danger__3DTtg\",\"placeholder\":\"common_placeholder__1Y8B_\",\"input_danger\":\"common_input_danger__2Mgji\",\"textarea_wr\":\"common_textarea_wr__1Owu_\",\"password_strength\":\"common_password_strength__1v8as\",\"smoothappearance\":\"common_smoothappearance__2t_Cv\",\"tooWeak\":\"common_tooWeak__24q-F\",\"weak\":\"common_weak__ekDY8\",\"medium\":\"common_medium__2cCV6\",\"good\":\"common_good__3C1A3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"sidebar_closed\":\"sidebar_sidebar_closed__1ZL1V\",\"logo\":\"sidebar_logo__2Z-nV\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\",\"link_item\":\"sidebar_link_item__KDcsE\",\"active\":\"sidebar_active__3Sfny\",\"menu_icon\":\"sidebar_menu_icon__k-nvb\",\"avatar\":\"sidebar_avatar__zQw3u\",\"uploaded\":\"sidebar_uploaded__mNf7i\",\"none\":\"sidebar_none__2QA47\",\"avatar_loader\":\"sidebar_avatar_loader__2A75I\",\"loadingScheme\":\"sidebar_loadingScheme__2WGFy\",\"login_loader\":\"sidebar_login_loader__1nXjv\",\"login_wr\":\"sidebar_login_wr__3OYQC\",\"profile_cont\":\"sidebar_profile_cont__LnmQi\",\"user_login\":\"sidebar_user_login__3oBZN\",\"sidebar_top\":\"sidebar_sidebar_top__2t6gY\",\"hamburger\":\"sidebar_hamburger__3ytg7\"};","module.exports = __webpack_public_path__ + \"static/media/hamburger.8a529ed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary.ea33d762.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.a165d003.svg\";","module.exports = __webpack_public_path__ + \"static/media/friend.d29028be.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.b376bf7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/short-menu.e1c4065d.svg\";","module.exports = __webpack_public_path__ + \"static/media/android.36571833.svg\";","module.exports = __webpack_public_path__ + \"static/media/windows.9ca90a4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple.0c0e528a.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.6ac68ad4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.a000e4fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/undefined.66a30df1.svg\";","module.exports = __webpack_public_path__ + \"static/media/emptyUsers.c7042294.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","module.exports = __webpack_public_path__ + \"static/media/users.09d367fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary-bg.e717e35f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"successBlock\":\"success_successBlock__2A1KN\"};","module.exports = __webpack_public_path__ + \"static/media/mail-open.330d459f.svg\";","module.exports = __webpack_public_path__ + \"static/media/accept.5bd21241.svg\";","module.exports = __webpack_public_path__ + \"static/media/dismiss.d4c9a0ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/notFound.24f1671b.gif\";","module.exports = __webpack_public_path__ + \"static/media/clockError.ccedacf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.5904a677.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3i-U9\",\"name\":\"counterslist_name__1Koxx\",\"domen\":\"counterslist_domen__X1vQX\",\"dayusers\":\"counterslist_dayusers__5YOGM\",\"totalusers\":\"counterslist_totalusers__3O-N2\",\"owner\":\"counterslist_owner__2Hw17\",\"list\":\"counterslist_list__34VOf\",\"list_head\":\"counterslist_list_head__tWoHw\",\"loading_counter\":\"counterslist_loading_counter__DThYG\",\"loading\":\"counterslist_loading__1PlA5\",\"noCounters\":\"counterslist_noCounters__39KOr\"};","module.exports = __webpack_public_path__ + \"static/media/loading.973560ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/auditories.09d367fd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar_cont\":\"profileLine_avatar_cont__25_Pj\",\"emptyAvatar\":\"profileLine_emptyAvatar__3AG1Q\",\"avatar\":\"profileLine_avatar__2mRmi\",\"line\":\"profileLine_line__Hg7z3\",\"names_row\":\"profileLine_names_row__ZK_CB\",\"company\":\"profileLine_company__2vj2k\",\"description\":\"profileLine_description__1G-zV\",\"description_p\":\"profileLine_description_p__1MnGI\",\"buttons\":\"profileLine_buttons__3figK\",\"info_p\":\"profileLine_info_p__Etm4p\",\"description_wr\":\"profileLine_description_wr__3rZBz\",\"description_block\":\"profileLine_description_block__3oyW8\",\"company_line\":\"profileLine_company_line__rLfLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\",\"form_fetching\":\"addcounter_form_fetching__2ejXt\",\"loading\":\"addcounter_loading__2P9GN\",\"text\":\"addcounter_text__SeuXh\",\"last_text\":\"addcounter_last_text__3txDb\",\"row\":\"addcounter_row__3I8u4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/counters'\r\n})\r\n\r\nexport const countersAPI = {\r\n    postCounter(data){\r\n        return axiosInstance.post('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getYourCounters(page, limit){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsCounters(page, limit){\r\n        return axiosInstance.get('/friendscounters', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response=>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getCounterById(counterId){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getCounterUsers(counterId, page, limit){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileUsers(page,limit){\r\n        return axiosInstance.get('/profile', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getUser(tysId){\r\n        return  axiosInstance.get('/user/'+tysId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {countersAPI} from \"../api/counters-api\";\r\nimport store from \"./redux-store\"\r\nimport {reset} from 'redux-form';\r\nimport {usersAPI} from \"../api/users-api\";\r\nlet initialState = {\r\n\r\n        pageSize: 4,\r\n        pixelCode: '',\r\n        yourCounters: {\r\n            counterslistData: [],\r\n            totalCounters: ''\r\n        },\r\n        friendsCounters:{\r\n            counterslistData: [],\r\n            totalCounters: ''\r\n        },\r\n        currentCounter:{\r\n            counterInfo: '',\r\n            counterUsers: '',\r\n            totalUsers: ''\r\n        }\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"counters/ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: action.counterData._id,\r\n                name: action.counterData.name,\r\n                domen: action.counterData.domen,\r\n                dayusers: action.counterData.dayusers,\r\n                allusers: action.counterData.allusers,\r\n                status: action.counterData.status\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                pixelCode: action.pixelCode,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: [newCounter, ...state.yourCounters.counterslistData]\r\n                }\r\n\r\n            }\r\n        }\r\n        case \"counters/CLEAR-PIXEL-CODE\":{\r\n            return {\r\n                ...state,\r\n                pixelCode: ''\r\n            }\r\n        }\r\n        case \"counters/SET-YOUR-COUNTERS\":{\r\n\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: action.countersData.items\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'counters/SET-YOUR-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    totalCounters: action.totalCounters.totalDocs\r\n                }\r\n\r\n            }\r\n        }\r\n        case \"counters/SET-FRIENDS-COUNTERS\":{\r\n\r\n            return {\r\n                ...state,\r\n                friendsCounters: {\r\n                    ...state.friendsCounters,\r\n                    counterslistData: action.countersData.items\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'counters/SET-FRIENDS-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                friendsCounters: {\r\n                    ...state.friendsCounters,\r\n                    totalCounters: action.totalCounters.totalDocs\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        case 'counters/SET-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: action.counterInfo,\r\n                    counterUsers: action.counterUsers.usersPage,\r\n                    totalUsers: action.counterUsers.totalDocs\r\n                }\r\n            }\r\n        }\r\n        case 'counters/CLEAR-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: '',\r\n                    counterUsers: '',\r\n                    totalUsers: ''\r\n                }\r\n            }\r\n        }\r\n        case 'counters/ADD-COUNTER-USERS':{\r\n\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterUsers: [...state.currentCounter.counterUsers, ...action.users]\r\n                }\r\n            }\r\n        }\r\n        case 'counters/CLEAR-COUNTERS-LISTS':{\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: [],\r\n                    totalCounters: ''\r\n                },\r\n                friendsCounters:{\r\n                    ...state.friendsCounters,\r\n                    counterslistData: [],\r\n                    totalCounters: ''\r\n                },\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = (counterData, pixelCode) =>({\r\n    type: 'counters/ADD-COUNTER',\r\n    counterData: counterData,\r\n    pixelCode: pixelCode\r\n})\r\nexport const setYourCounters = (countersData) =>({\r\n    type: 'counters/SET-YOUR-COUNTERS',\r\n    countersData: countersData\r\n})\r\nexport const setYourTotalCounters = (totalCounters) =>({\r\n    type: 'counters/SET-YOUR-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\nexport const setFriendsCounters = (countersData) =>({\r\n    type: 'counters/SET-FRIENDS-COUNTERS',\r\n    countersData: countersData\r\n})\r\n\r\nexport const setFriendsTotalCounters = (totalCounters) => ({\r\n    type: 'counters/SET-FRIENDS-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\n\r\nexport const clearPixelCode = () =>({\r\n    type: 'counters/CLEAR-PIXEL-CODE'\r\n})\r\n\r\nexport const setCurrentCounter = (counterInfo, counterUsers) =>({\r\n    type: 'counters/SET-CURRENT-COUNTER',\r\n    counterInfo: counterInfo,\r\n    counterUsers: counterUsers\r\n})\r\n\r\nexport const clearCurrentCounter = () => ({\r\n    type: 'counters/CLEAR-CURRENT-COUNTER'\r\n})\r\n\r\nexport const clearCountersLists = () =>({\r\n    type: 'counters/CLEAR-COUNTERS-LISTS'\r\n})\r\n\r\nexport const addCounterUsers = (users) =>({\r\n    type: 'counters/ADD-COUNTER-USERS',\r\n    users: users\r\n})\r\n\r\nexport const getCounters = () => (dispatch) =>{\r\n    Promise.all([countersAPI.getYourCounters(1, store.getState().countersPage.pageSize), countersAPI.getFriendsCounters(1, store.getState().countersPage.pageSize)]).then(response=>{\r\n        dispatch(setYourCounters(response[0]))\r\n        dispatch(setYourTotalCounters(response[0]))\r\n        dispatch(setFriendsCounters(response[1]))\r\n        dispatch(setFriendsTotalCounters(response[1]))\r\n    })\r\n}\r\n\r\nexport const changeYourCounters = (page) => async (dispatch) =>{\r\n    let response = await countersAPI.getYourCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setYourCounters(response))\r\n    dispatch(setYourTotalCounters(response))\r\n}\r\n\r\nexport const changeFriendsCounters = (page) => async (dispatch) =>{\r\n    let response = await countersAPI.getFriendsCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setFriendsCounters(response))\r\n    dispatch(setFriendsTotalCounters(response))\r\n}\r\n\r\nexport const postCounter = (data) => async (dispatch) => {\r\n\r\n    let response = await countersAPI.postCounter(data)\r\n    dispatch(addCounter(response.newCounter, response.pixelCode))\r\n    dispatch(reset('addcounter-form'))\r\n}\r\n\r\nexport const getCurrentCounter = (counterId) => (dispatch) =>{\r\n    Promise.all([countersAPI.getCounterById(counterId),\r\n        usersAPI.getCounterUsers(counterId, 1, store.getState().countersPage.pageSize)])\r\n            .then(response =>{\r\n        dispatch(setCurrentCounter(response[0], response[1]) )\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n\r\n    let response = await usersAPI.getCounterUsers(store.getState().countersPage.currentCounter.counterInfo._id, page, store.getState().countersPage.pageSize)\r\n    dispatch(addCounterUsers(response.usersPage))\r\n}\r\n\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId === state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId === action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id === action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const summaryAPI = {\r\n    getSummary(){\r\n        return axiosInstance.get('/summary/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getSummaryGraphic(){\r\n        return axiosInstance.get('/summary/graphic', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.graphicArr;\r\n                })\r\n    }\r\n}\r\n","import {usersAPI} from \"../api/users-api\";\r\nimport {summaryAPI} from \"../api/summary-api\";\r\nimport store from \"./redux-store\"\r\n\r\n\r\nlet initialState = {\r\n    summaryInfo:{\r\n       dayUsers: '',\r\n       dayClicks: ''\r\n    },\r\n    summaryUsers: [],\r\n    pageSize: 7,\r\n    totalUsers: '',\r\n    graphicData : []\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n\r\n        case 'SET-SUMMARY-USERS':{\r\n            let users = ''\r\n            if(action.summaryUsers.usersPage){\r\n                users = action.summaryUsers.usersPage\r\n            }\r\n            else{\r\n                users = action.summaryUsers.message\r\n            }\r\n            return {\r\n                ...state,\r\n                summaryUsers: users,\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'ADD-SUMMARY-USERS':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [...state.summaryUsers, ...action.summaryUsers.usersPage],\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'CLEAR-SUMMARY-SELECTOR':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [],\r\n                totalUsers: '',\r\n                graphicData: [],\r\n                summaryInfo:{\r\n                    dayClicks: '',\r\n                    dayUsers: ''\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'SET-SUMMARY-INFO':{\r\n            return {\r\n                ...state,\r\n                summaryInfo:{\r\n                    dayClicks: action.summaryInfo.clicks,\r\n                    dayUsers: action.summaryInfo.users\r\n                }\r\n            }\r\n        }\r\n        case 'SET-GRAPHIC-DATA':{\r\n            return {\r\n                ...state,\r\n                graphicData: action.graphicData\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nconst setSummaryInfo = (summaryInfo) =>({\r\n    type: 'SET-SUMMARY-INFO',\r\n    summaryInfo: summaryInfo\r\n})\r\n\r\n\r\nconst setGraphicData = (graphicData) => ({\r\n    type: 'SET-GRAPHIC-DATA',\r\n    graphicData: graphicData\r\n})\r\n\r\n\r\n\r\nconst setSummaryUsers = (summaryUsers) =>({\r\n    type: 'SET-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\nconst addSummaryUsers = (summaryUsers) =>({\r\n    type: 'ADD-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\n\r\n\r\n\r\nexport const clearSummaryData = () => ({\r\n    type: 'CLEAR-SUMMARY-SELECTOR'\r\n})\r\n\r\nexport const getSummaryData = () => (dispatch) =>{\r\n    Promise.all([usersAPI.getProfileUsers(1, store.getState().summaryPage.pageSize), summaryAPI.getSummary(), summaryAPI.getSummaryGraphic()]).then(response =>{\r\n        dispatch(setSummaryUsers(response[0]))\r\n        dispatch(setSummaryInfo(response[1]))\r\n        dispatch(setGraphicData(response[2]))\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n    let response = await usersAPI.getProfileUsers(page, store.getState().summaryPage.pageSize)\r\n    dispatch(addSummaryUsers(response))\r\n}\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n\r\n    },\r\n    getProfileInfoById(userId){\r\n        return axiosInstance.get('/userid/'+userId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProposals(){\r\n        return axiosInstance.get('/your_proposals/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.proposals;\r\n                })\r\n\r\n    },\r\n\r\n    getProfilesList(page, limit){\r\n        return axiosInstance.get('/profileslist', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsList(page, limit){\r\n        return axiosInstance.get('/friends/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getAvatar(){\r\n        return axiosInstance.get('/avatar', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    },\r\n    updateAvatar(file){\r\n        return axiosInstance.post('/avatar', {avatarImage: file}, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}}).then(response =>{\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const profileActionsAPI = {\r\n    postProposal(userId){\r\n        return axiosInstance.post('/proposal/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n\r\n    deleteProposal(userId){\r\n        return axiosInstance.delete('/proposal/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    acceptProposal(userId){\r\n        return axiosInstance.post('/proposals/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    denyProposal(userId){\r\n        return axiosInstance.delete('/proposals/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    deleteFriend(userId){\r\n        return axiosInstance.delete('/delete_friend/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI, profileActionsAPI} from '../api/profile-api'\r\nimport store from \"../redux/redux-store\";\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: '',\r\n    avatar: '',\r\n    pageSize: 2,\r\n    totalProfiles: undefined,\r\n    proposals: [],\r\n    profilesList: [],\r\n    friendsList: [],\r\n    totalFriends: undefined,\r\n    deletedFriend: undefined\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'profile/SET-PROFILE-INFO':\r\n\r\n            return {\r\n                ...state,\r\n                name: action.data.name ? action.data.name : state.name,\r\n                soName: action.data.soName ? action.data.soName : state.soName,\r\n                company: action.data.company ? action.data.company : state.company,\r\n                description: action.data.description ? action.data.description : state.description\r\n            }\r\n        case 'profile/SET-PROFILES-LIST':\r\n            return {\r\n                ...state,\r\n                profilesList: action.data\r\n            }\r\n        case 'profile/SET-TOTAL-PROFILES':\r\n            return {\r\n                ...state,\r\n                totalProfiles: action.count\r\n\r\n            }\r\n        case 'profile/SET-PROPOSALS':\r\n            return {\r\n                ...state,\r\n                proposals: action.proposals\r\n            }\r\n        case 'profile/SET-FRIENDS-LIST':\r\n            return {\r\n                ...state,\r\n                friendsList: action.friends,\r\n                totalFriends: action.totalDocs\r\n            }\r\n        case 'profile/SET-DELETED-FRIEND':\r\n            return {\r\n                ...state,\r\n                deletedFriend: [action.friendId]\r\n            }\r\n        case 'profile/SET-AVATAR':\r\n            return {\r\n                ...state,\r\n                avatar: action.avatarData.avatar\r\n            }\r\n        case 'profile/CLEAR-FRIENDS-PAGE':{\r\n            return {\r\n                ...state,\r\n                profilesList: [],\r\n                totalProfiles: undefined,\r\n                proposals: []\r\n            }\r\n        }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'profile/SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'profile/RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'profile/SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\nexport const setProfilesList = (data) =>({\r\n    type: 'profile/SET-PROFILES-LIST',\r\n    data: data\r\n})\r\n\r\nexport const setTotalProfiles = (count) =>({\r\n    type: 'profile/SET-TOTAL-PROFILES',\r\n    count: count\r\n})\r\n\r\nexport const setProposals = (proposals) => ({\r\n    type: 'profile/SET-PROPOSALS',\r\n    proposals: proposals\r\n})\r\n\r\nexport const setFriendsList = (friends, totalDocs) =>({\r\n    type: 'profile/SET-FRIENDS-LIST',\r\n    friends: friends,\r\n    totalDocs: totalDocs\r\n})\r\n\r\nexport const setDeletedFriend = (friendId)=>({\r\n    type: 'profile/SET-DELETED-FRIEND',\r\n    friendId: friendId\r\n})\r\n\r\nexport const setAvatar = (avatarData) =>({\r\n    type: 'profile/SET-AVATAR',\r\n    avatarData: avatarData\r\n})\r\n\r\nexport const clearFriendsPage = () =>({\r\n    type: 'profile/CLEAR-FRIENDS-PAGE'\r\n})\r\n\r\n\r\n\r\nexport const getAvatar = () => async (dispatch) =>{\r\n    let response = await profileAPI.getAvatar()\r\n    dispatch(setAvatar(response))\r\n\r\n}\r\n\r\n\r\n\r\nexport const getProfileInfo = () => async (dispatch) =>{\r\n    let response = await profileAPI.getProfileInfo()\r\n    dispatch(setProfileInfo(response))\r\n}\r\n\r\n\r\n\r\nexport const getProposals = () => async (dispatch)=>{\r\n    let response = await profileAPI.getProposals()\r\n    dispatch(setProposals(response))\r\n}\r\n\r\nexport const getProfilesList = (page,limit) => async (dispatch) =>{\r\n    let response = await profileAPI.getProfilesList(page,limit)\r\n    dispatch(setProfilesList(response.items))\r\n    dispatch(setTotalProfiles(response.totalPages))\r\n}\r\n\r\n\r\nexport const getFriendsPage = () => (dispatch) =>{\r\n    Promise.all([profileAPI.getProposals(), profileAPI.getProfilesList(1,store.getState().profilePage.pageSize)]).then(response=>{\r\n        dispatch(setProposals(response[0]))\r\n        dispatch(setProfilesList(response[1].items))\r\n        dispatch(setTotalProfiles(response[1].totalPages))\r\n\r\n    })\r\n}\r\n\r\n\r\nexport const postProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.postProposal(userId)\r\n    if(response.message === 'proposal sended'){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const deleteProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteProposal(userId)\r\n    if(response.message === \"proposal deleted\"){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const acceptProposal = (userId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.acceptProposal(userId)\r\n    if(response.message === \"Friend added\"){\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const denyProposal = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileActionsAPI.denyProposal(userId)\r\n    if (response.message === \"Proposal denied\") {\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const putProfileInfo = (data) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.putProfileInfo(data)\r\n    dispatch(setProfileInfo(response.newInfo))\r\n}\r\n\r\nexport const getFriendsList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page,limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const addFriendsList = (page, limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page, limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const deleteFriend = (userId, buttonId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteFriend(userId)\r\n    if(response.message === \"friend deleted\"){\r\n        dispatch(setDeletedFriend(buttonId))\r\n    }\r\n}\r\n\r\nexport const updateAvatar = (file) => async (dispatch) =>{\r\n    let response = await profileAPI.updateAvatar(file)\r\n    if (response.avatar){\r\n        dispatch(setAvatar(response.avatar))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    },\r\n    confirmEmail(token){\r\n        return authedInstance.put('confirm_email/'+token)\r\n                .then(response =>{\r\n                    return response.data.message\r\n                })\r\n                .catch(error=>{\r\n\r\n                    return error.response.data.error\r\n                })\r\n    },\r\n    sendEmail(){\r\n\r\n        return authedInstance.post('send_message/', {}, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response=>{\r\n            return response\r\n        })\r\n    },\r\n    putAdditionalInfo(name, soName, company, description){\r\n        return authedInstance.put('additional_information/', {name: name, soName: soName, company: company, descriptions: description},\r\n                {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response\r\n                }\r\n    )\r\n    }\r\n\r\n}","import {authAPI, signUpAPI} from \"../api/auth-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    stage: undefined,\r\n    isFetching: false,\r\n    confirmEmailResult: ''\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"auth/SET_PROFILE_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n                stage: action.data.stage\r\n\r\n            }\r\n        case \"auth/SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"auth/DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'auth/TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'auth/SET_CONFIRM_EMAIL_RESULT':\r\n            return {\r\n                ...state,\r\n                confirmEmailResult: action.result\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"auth/SET_PROFILE_DATA\",\r\n    data: authProfileData})\r\nexport const setToken = (token) =>({\r\n    type: 'auth/SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'auth/DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'auth/SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'auth/TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\nexport const setConfirmEmailResult = (result) =>({\r\n    type: 'auth/SET_CONFIRM_EMAIL_RESULT',\r\n    result: result\r\n})\r\n\r\n\r\nexport const updateAuthInfo = () => async (dispatch) =>{\r\n     let response  = await authAPI.getAuthInfo()\r\n     dispatch(setProfileData(response))\r\n}\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message === \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=2592000;  secure; path=/'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=2592000;  secure; path=/'\r\n                    dispatch(updateAuthInfo())\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(stopSubmit('login-form', {_error : \"Неверные данные\"}))\r\n                dispatch(toggleIsFetching(false))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(toggleIsFetching(false))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message === \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                dispatch(updateAuthInfo())\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error)\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(stopSubmit('signup-form', {email : 'Данная почта уже зарегистрирована'}))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(stopSubmit('signup-form', {login : 'Данный логин уже зарегистрирован'}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const AuthThunkCreator = () => async (dispatch)=>{\r\n    let getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    let getAuth  = async() =>{\r\n        let response  = await authAPI.getAuthInfo()\r\n        dispatch(setProfileData(response))\r\n\r\n    }\r\n\r\n\r\n    if (getCookie('email') && getCookie('password')){\r\n       let response = await authAPI.postLoginInfo(getCookie('email'), getCookie('password'))\r\n            dispatch(setToken(response.token))\r\n            await getAuth()\r\n    }\r\n}\r\n\r\nexport const SendEmail = () => async (dispatch) =>{\r\n    dispatch(toggleIsFetching(true))\r\n    await signUpAPI.sendEmail()\r\n    dispatch(toggleIsFetching(false))\r\n}\r\n\r\n\r\n\r\nexport const ConfirmEmail = (token) => (dispatch) =>{\r\n\r\n    signUpAPI.confirmEmail(token)\r\n            .then(response=>{\r\n                dispatch(setConfirmEmailResult(response))\r\n\r\n            })\r\n            .catch(error=>{\r\n                dispatch(setConfirmEmailResult(error))\r\n            })\r\n}\r\n\r\nexport const SendAdditionalInfo = (name, soName, company, description) => (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    signUpAPI.putAdditionalInfo(name, soName, company, description).then(response =>{\r\n        dispatch(updateAuthInfo())\r\n        dispatch(toggleIsFetching(false))\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {AuthThunkCreator} from './auth-reducer'\r\n\r\n\r\nlet initialState = {\r\n    isInitialized: false,\r\n    menuState: 'collapsed'\r\n}\r\n\r\n\r\nconst appReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"app/INITIALIZED_SUCCESS\":\r\n            return{\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        case \"app/TOGGLE-MENU-STATE\":\r\n            let menuState = ''\r\n            switch (state.menuState ){\r\n                case 'collapsed':\r\n                    menuState = 'closed';\r\n                    break;\r\n                case 'closed':\r\n                    menuState = 'collapsed';\r\n                    break\r\n                default: menuState = 'closed'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                menuState: menuState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: \"app/INITIALIZED_SUCCESS\"})\r\n\r\n\r\nexport const InitializingApp = () => (dispatch) =>{\r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n                dispatch(setInitializedSuccess())\r\n            })\r\n}\r\n\r\nexport const toggleMenuState = () => ({\r\n    type: \"app/TOGGLE-MENU-STATE\"\r\n})\r\n\r\n\r\nexport  default appReducer\r\n","\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    userInfo: ''\r\n}\r\n\r\nlet usersReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case 'users/SET-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        }\r\n        case 'users/CLEAR-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: ''\r\n            }\r\n        }\r\n        default :{\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst setUserInfo = (userInfo) =>({\r\n    type: 'users/SET-USER-INFO',\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const clearUserInfo = () => ({\r\n    type: 'users/CLEAR-USER-INFO'\r\n})\r\n\r\nexport const getUserInfo = (tysId) => async (dispatch) =>{\r\n    let response = await usersAPI.getUser(tysId)\r\n    dispatch(setUserInfo(response))\r\n\r\n}\r\n\r\nexport default usersReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport countersReducer from \"./counters-reducer\"\r\nimport audiencesReducer from \"./audiences-reducer\"\r\nimport summaryReducer from \"./summary-reducer\"\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\"\r\nimport appReducer from \"./app-reducer\"\r\nimport usersReducer from './users-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    users: usersReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.store = store\r\nexport default store","import React, {useEffect, useState} from 'react';\r\nimport s from './sidebar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport hamburgerIcon from '../../assets/icons/menu/hamburger.svg'\r\nimport summaryIcon from '../../assets/icons/menu/summary.svg'\r\nimport eyeIcon from '../../assets/icons/menu/eye.svg'\r\nimport auditoriesIcon from '../../assets/icons/menu/auditories.svg'\r\nimport friendsIcon from '../../assets/icons/menu/friend.svg'\r\nimport settingsIcon from '../../assets/icons/menu/settings.svg'\r\nimport shortMenuIcon from '../../assets/icons/menu/short-menu.svg'\r\nimport profileIcon from '../../assets/icons/menu/profile.svg'\r\nlet Sidebar = (props) =>{\r\n\r\n    /* let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    } */\r\n\r\n\r\n\r\n\r\n\r\n    let logout = () =>{\r\n        props.logout()\r\n    }\r\n\r\n    let selectSideBarClassName = () =>{\r\n        let className = ''\r\n        if(props.menuState === 'collapsed'){\r\n            className = s.sidebar\r\n        }\r\n        else{\r\n            className = s.sidebar + \" \" + s.sidebar_closed\r\n        }\r\n        return className\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={selectSideBarClassName()}>\r\n        <div className={s.sidebar_top}>\r\n            <div className={s.logo}>Трекер</div>\r\n            <div className={s.hamburger} onClick={()=>{props.toggleMenuState()}}>\r\n                <img src={hamburgerIcon} alt=\"\"/>\r\n            </div>\r\n             <nav className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <NavLink to={'/summary'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                    <div className={s.menu_icon}><img src={summaryIcon} alt=\"\"/></div>\r\n                    <p>Сводка</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/counters'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={eyeIcon} alt=\"\"/></div>\r\n                     <p>Счётчики</p>\r\n                 </NavLink>\r\n                 {/* <NavLink to={'/audiences'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={auditoriesIcon} alt=\"\"/></div>\r\n                     <p>Аудитории</p>\r\n                 </NavLink> */}\r\n                 <NavLink to={'/friends'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={friendsIcon} alt=\"\"/></div>\r\n                     <p>Друзья</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/profilesettings'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={settingsIcon} alt=\"\"/></div>\r\n                     <p>Настройки</p>\r\n                 </NavLink>\r\n             </nav>\r\n        </div>\r\n            <div className={props.menuState === 'collapsed' ? s.profile_cont : s.profile_cont + \" \" + s.sidebar_closed}>\r\n              <div className=\"dropdown-menu\">\r\n                  <div className='dropdown-menu-dots'><img  src={shortMenuIcon} alt=\"\"/></div>\r\n                  <div className=\"dropdown-menu-content\">\r\n                      {props.isAuth === true ?\r\n                              <div className=\"dropdown-menu-link\" onClick={logout}>Выйти</div> :\r\n                              <NavLink to=\"/login\" className='dropdown-menu-link' activeClassName='active'>Войти</NavLink>}\r\n                  </div>\r\n              </div>\r\n               <div className={s.avatar}>\r\n\r\n                   {props.fetching === 'fetching' ? <div className={s.avatar_loader} /> : <img className={props.avatar === 'none' ? s.none : s.uploaded}\r\n                                                                           src={props.avatar === 'none' ? profileIcon : props.avatar}\r\n                                                                           alt=\"\"/>}\r\n\r\n               </div>\r\n                <div className={s.user_login}>\r\n                    {props.fetching === 'fetching' ? <div className={s.login_loader} /> :  <div className={s.login_wr}><p>{props.profileLogin}</p></div>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","export const getMenuState = (state) =>{\r\n    return state.app.menuState\r\n}\r\n","export const selectProfilesList = (state) =>{\r\n    return state.profilePage.profilesList\r\n}\r\n\r\nexport const getTotalProfiles = (state) =>{\r\n    return state.profilePage.totalProfiles\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.profilePage.pageSize\r\n}\r\n\r\nexport const getProposalsList = (state) =>{\r\n    return state.profilePage.proposals\r\n}\r\n\r\nexport const getFriends = (state) =>{\r\n    return state.profilePage.friendsList\r\n}\r\n\r\nexport const getTotalFriends = (state) =>{\r\n    return state.profilePage.totalFriends\r\n}\r\n\r\nexport const getDeletedFriend = (state) =>{\r\n    return state.profilePage.deletedFriend\r\n}\r\n\r\nexport const getAvatarSelector = (state) =>{\r\n    return state.profilePage.avatar\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Sidebar from \"./sidebar\";\r\nimport {connect} from \"react-redux\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {setToken} from \"../../redux/auth-reducer\";\r\nimport {toggleMenuState} from '../../redux/app-reducer'\r\nimport {getMenuState} from \"../../redux/selectors/app-selectors\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {getAvatar} from \"../../redux/profile-reducer\";\r\nimport {getAvatarSelector} from \"../../redux/selectors/profileselectors\";\r\n\r\nlet SideBarContainer = (props) => {\r\n   const [cookies, setCookie, removeCookie] = useCookies([\"email\", \"password\"]);\r\n   const [sideBarVisibility, setSideBarVisibility ] = useState('visible')\r\n   const [profileBlockState, setProfileBlockState] = useState('fetching')\r\n   const pageName = useLocation()\r\n   useEffect(()=>{\r\n       if(['login', 'signup', 'auth'].some(el => pageName.pathname.split('/').includes(el))){\r\n           setSideBarVisibility('hidden')\r\n       }\r\n       else{\r\n           setSideBarVisibility('')\r\n       }\r\n   },[pageName.pathname, sideBarVisibility])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized && props.isAuth){\r\n            props.getAvatar()\r\n        }\r\n        else{\r\n            setProfileBlockState('fetching')\r\n        }\r\n\r\n    }, [ props.isInitialized, props.isAuth])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if((props.avatar && props.avatar.length !== 0) && profileBlockState === 'fetching'){\r\n            setProfileBlockState(\"main\")\r\n        }\r\n\r\n    },[props.avatar])\r\n\r\n\r\n\r\n   let logOut = () =>{\r\n       removeCookie(\"email\");\r\n       removeCookie(\"password\")\r\n\r\n       window.location.reload()\r\n\r\n    }\r\n\r\n    return  sideBarVisibility === 'hidden' ? <></> : <Sidebar isAuth={props.isAuth}\r\n                       profileLogin={props.profileLogin}\r\n                       logout={logOut}\r\n                       menuState={props.menuState}\r\n                       toggleMenuState={props.toggleMenuState}\r\n                       avatar={props.avatar}\r\n                       fetching={profileBlockState}\r\n    />\r\n\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login,\r\n        menuState: getMenuState(state),\r\n        isInitialized: state.app.isInitialized,\r\n        avatar:  getAvatarSelector(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {setToken, toggleMenuState, getAvatar})(SideBarContainer)","export const getSummaryInfo = (state) =>{\r\n    return state.summaryPage.summaryInfo\r\n}\r\n\r\nexport const getSummaryGraphic = (state) =>{\r\n    return state.summaryPage.graphicData\r\n\r\n}\r\n\r\nexport const getSummaryUsers = (state) =>{\r\n    return state.summaryPage.summaryUsers\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.summaryPage.pageSize\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.summaryPage.totalUsers\r\n}","const mongoDate = (inputDate) => {\r\n\r\n    let d = new Date(inputDate)\r\n    let dateNow = new Date()\r\n    let dateFormatter = new Intl.DateTimeFormat(\"ru\");\r\n    let timeFormatter = new Intl.DateTimeFormat(\"ru\",{hour: '2-digit', minute: '2-digit'});\r\n    let comparativeDate = ''\r\n    const millieSecondsCompare = (firstDate, secondDate) =>{\r\n        return (firstDate - secondDate)/(60*60*1000)\r\n    }\r\n    if(millieSecondsCompare(Date.now(), Date.parse(inputDate)) < (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)){\r\n       comparativeDate = 'Сегодня'\r\n    }\r\n    else if (millieSecondsCompare(Date.now(), Date.parse(inputDate)) > (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)\r\n            && millieSecondsCompare(Date.now(), Date.parse(inputDate)) < 24 + (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)){\r\n        comparativeDate = 'Вчера'\r\n    }\r\n    else {\r\n        comparativeDate = dateFormatter.format(d)\r\n    }\r\n\r\n\r\n    return{\r\n        comparativeDate: comparativeDate,\r\n        date: dateFormatter.format(d),\r\n        time: timeFormatter.format(d),\r\n        seconds: d.getSeconds()\r\n    }\r\n}\r\nexport default mongoDate","import React, { useEffect, useRef, useState} from \"react\";\r\n\r\nimport s from \"./common.module.scss\";\r\nimport styled from 'styled-components'\r\n\r\nexport const Input = ({input, meta,placeholder, ...props}) =>{\r\n    return (\r\n\r\n                <div className={s.input_wr}>\r\n                    <p className={s.placeholder}>{placeholder}</p>\r\n                    <input className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                    {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, placeholder, ...props}) =>{\r\n    const textareaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        textareaRef.current.style.height = \"50px\";\r\n        const scrollHeight = textareaRef.current.scrollHeight;\r\n        textareaRef.current.style.height = scrollHeight + \"px\";\r\n    }, [input.value]);\r\n\r\n    return (\r\n\r\n            <div className={s.textarea_wr}>\r\n                <p className={s.placeholder}>{placeholder}</p>\r\n                <textarea ref={textareaRef} cols=\"2\" rows=\"3\"  className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Select = () =>{\r\n    return(\r\n            <p>gj</p>\r\n    )\r\n}\r\n\r\n\r\nexport const PasswordScoreInput = ({input, meta, placeholder, ...props}) =>{\r\n        let strengthValue = 'none'\r\n        let strengthText = ''\r\n\r\n        if(input.value === ''){\r\n            strengthValue = 'none'\r\n            strengthText = ''\r\n\r\n        }\r\n        else if(input.value.length <= 4 && input.value.length >= 1){\r\n            strengthValue = 'tooWeak'\r\n            strengthText = 'Слишком слабый пароль'\r\n            meta.error = ' '\r\n        }\r\n        else if(input.value.length <= 6){\r\n            strengthValue = 'weak'\r\n            strengthText = 'Слабый пароль'\r\n        }\r\n        else if(input.value.length <= 8){\r\n            strengthValue = 'medium'\r\n            strengthText = 'Средний пароль'\r\n        }\r\n        else{\r\n            strengthValue = 'good'\r\n            strengthText = 'Хороший пароль'\r\n        }\r\n\r\n    return (\r\n\r\n            <div className={s.input_wr}>\r\n                <p className={s.placeholder}>{placeholder}</p>\r\n\r\n                <input className={meta.touched && meta.error && s.danger} {...input} {...props} />\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                {strengthValue !== 'none' ?  <div className={s.password_strength}><div className={s[strengthValue]}></div>\r\n                    <p>{strengthText}</p></div> : ''}\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nlet ButtonJSX = (props) =>{\r\n    return(\r\n            <button {...props}>\r\n                {props.icon && <IconCont ><img src={props.icon} alt=\"\"/></IconCont>}\r\n                <span>{props.children}</span>\r\n            </button>\r\n    )\r\n}\r\n\r\nconst IconCont = styled.div`\r\n    width: 16px;\r\n    height: 16px;\r\n    margin-right: 5px;\r\n    img{\r\n        width: 100%;\r\n        \r\n    }\r\n   \r\n`\r\n\r\nconst ButtonStyled = styled(ButtonJSX)`\r\n    background: ${props=> props.primary ? \"#0078d4\" : \"white\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    font: inherit;\r\n    padding: ${props => props.icon ? \"6px 21px 8px 21px\" : \"8px 21px 9px 21px\"};\r\n    font-weight: 600;\r\n    letter-spacing: 0.4px;\r\n    border: 1px solid  ${props => props.primary ? \"#0078d4\" : \"#323130\"};\r\n    font-size: 13px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    border-radius: 2px;\r\n    margin-bottom: 10px;\r\n    line-height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    &:hover{\r\n    background: ${props=> props.primary ? \"#106ebe\" : \"#f3f2f1\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    border: 1px solid  ${props => props.primary ? \"#106ebe\" : \"#323130\"};\r\n    }\r\n    &:active{\r\n    background: ${props=> props.primary ? \"#005a9e\" : \"#edebe9\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    border: 1px solid  ${props => props.primary ? \"#005a9e\" : \"#323130\"};\r\n    }\r\n`\r\n\r\nconst DisabledStyled = styled.span`\r\n    padding: 9px 22px 10px 22px;\r\n    font-weight: 600;\r\n    letter-spacing: 0.4px;\r\n    font-size: 13px;\r\n    border-radius: 2px;\r\n    background-color: #f3f2f1;\r\n    color: #a19f9d;\r\n    line-height: 100%;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`\r\n\r\nexport const Button = (props) =>{\r\n\r\n    return (props.disabled  ?<DisabledStyled {...props} /> : <ButtonStyled {...props} />)\r\n\r\n}\r\n\r\nexport const FormFetching = (props) =>{\r\n    return  <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar} />\r\n}","import React from \"react\";\r\nimport s from \"./common.module.scss\"\r\nimport {Button} from \"./formControls\";\r\nimport styled from \"styled-components\"\r\n\r\nconst LoadMoreButton = styled(Button)`\r\nmargin: auto;\r\nmargin-bottom: 15px;\r\nmax-width: 210px;\r\npadding: 11px 30px 12px 30px;\r\n`\r\n\r\n\r\nconst LoadMoreComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    const buttonSelector = () =>{\r\n        if(props.pages === 'empty' || props.inizialized === false || props.pages.length < props.pageSize){\r\n            return (<></>)\r\n        }\r\n        else if(pagesCount > props.currentPage){\r\n            return <LoadMoreButton onClick={()=>{props.changePage(props.currentPage+1)}}>Загрузить ещё</LoadMoreButton>\r\n        }\r\n        else{\r\n            return <LoadMoreButton disabled >Загружены все записи</LoadMoreButton>\r\n        }\r\n    }\r\n\r\n    return(\r\n            buttonSelector()\r\n\r\n    )\r\n}\r\n\r\n\r\nexport class LoadMore extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages,\r\n        initialized: false\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page, this.props.pageSize)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            this.setState({isFetching: false})\r\n            this.setState({initialized: true})\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n            this.loaders.push(this.props.loader)\r\n        }\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n        else{\r\n            this.setState({initialized: true})\r\n        }\r\n    }\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching && this.state.pages !== 'empty'){\r\n            return [this.props.pages, this.loaders]\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n            <LoadMoreComponent   currentPage={this.state.currentPage}\r\n                                 pageSize={this.props.pageSize}\r\n                                 totalPages={this.props.totalPages}\r\n                                 changePage={this.changePage}\r\n                                 pages={this.state.pages}\r\n                                 inizialized={this.state.initialized}\r\n            />\r\n        </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport mongoDate from \"../../../../../utils/mongoDate\";\r\nimport s from './usersList.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LoadMore} from \"../../../../common/loadMore\";\r\n\r\nimport styled from 'styled-components'\r\nimport AndroidIcon from '../../../../../assets/icons/os/android.svg'\r\nimport WindowsIcon from '../../../../../assets/icons/os/windows.svg'\r\nimport iOSIcon from '../../../../../assets/icons/os/apple.svg'\r\nimport MacOsIcon from '../../../../../assets/icons/os/macos.svg'\r\nimport LinuxIcon from '../../../../../assets/icons/os/linux.svg'\r\nimport UndefinedOsIcon from '../../../../../assets/icons/os/undefined.svg'\r\n\r\nimport NoUsersIcon from '../../../../../assets/icons/emptyUsers.svg'\r\nconst Time = styled.div`\r\n  width: 94px;\r\n  p{\r\n  padding-left: 12px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: 80px;\r\n  }\r\n  @media screen and (max-width: 500px){\r\n  width: 64px;\r\n  }\r\n`\r\n\r\nconst Sessions = styled.div`\r\n  width: 140px;\r\n  @media screen and (max-width: 1400px){\r\n  width: 47px;\r\n  }\r\n  @media screen and (max-width: 500px){\r\n  width: 30px;\r\n  }\r\n`\r\n\r\nconst Referrer = styled.div`\r\n  width: calc(60% - 404px);\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: calc(70% - 257px);\r\n  }\r\n  @media screen and (max-width: 750px){\r\n  width: calc(100% - 200px);\r\n  }\r\n  \r\n`\r\n\r\nconst City = styled.div`\r\n  width: 40%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  margin-left: 20px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: 30%;\r\n  }\r\n  @media screen and (max-width: 750px){\r\n  display: none;\r\n  }\r\n`\r\n\r\nconst Country = styled.div`\r\n      width: 120px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    @media screen and (max-width: 750px){\r\n    width: 80px;\r\n    }\r\n    @media screen and (max-width: 500px){\r\n    width: 64px;\r\n    }\r\n`\r\n\r\nconst Os = styled.div`\r\n  width: 47px;\r\n  img{\r\n  width: 20px;\r\n    margin: auto;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ShortUserLine = styled(NavLink)`\r\n   display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #f7f7f7;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n  height: 47px;\r\n`\r\n\r\nconst LoadingUser = styled.div`\r\n    width: 100%;\r\n    background: #f7f7f7;\r\n    margin-bottom: 10px;\r\n    height: 47px;\r\n    display: block;\r\n    animation: loadingScheme 1s infinite ;\r\n  \r\n  @keyframes loadingScheme {\r\n    0%{background: #efefef}\r\n    50%{background: #dcdcdc}\r\n    100%{background: #efefef}\r\n  }\r\n`\r\n\r\nconst ListDivider = styled.div`\r\n    height: 46px;\r\n    border-bottom: 1px solid #dadada;\r\n    margin-bottom: 10px;\r\n        display: flex;\r\n    align-items: flex-end;\r\n    p{\r\n    margin-bottom: 5px;\r\n    }\r\n`\r\n\r\nconst Visits = styled.span`\r\n    background: #2980ea;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    width: 18px;\r\n    height: 18px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    overflow: hidden;\r\n    display: block;\r\n`\r\n\r\nconst NoUsersBlock = styled.div`\r\n    background: #f7f7f7;\r\n    padding: 15px;\r\n    width: calc(100% - 30px);\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    img{\r\n    width: 47px;\r\n   \r\n    }\r\n    div{\r\n    width: 70px;\r\n    }\r\n    p{\r\n    width: calc(100% - 70px);\r\n    }\r\n`\r\n\r\n\r\n\r\nconst NoUsers = () =>{\r\n    return(\r\n            <NoUsersBlock>\r\n                <div>\r\n                    <img src={NoUsersIcon} alt=\"\"/>\r\n                </div>\r\n                <p>У Вас ещё нет пользователей, подождите или добавьте новый счётчик</p>\r\n            </NoUsersBlock>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst ShortUser = (props) =>{\r\n    let selectOsIcon = (os) =>{\r\n        switch(os){\r\n            case 'Android':\r\n                return <img src={AndroidIcon} alt=\"Android\" />\r\n            case 'Windows':\r\n                return <img src={WindowsIcon} alt=\"Windows\" />\r\n            case 'iOS':\r\n                return <img src={iOSIcon} alt=\"iOS\" />\r\n            case 'Mac OS':\r\n                return <img src={MacOsIcon} alt=\"Mac OS\" />\r\n            case 'Linux':\r\n                return <img src={LinuxIcon} alt=\"Linux\" />\r\n            default:\r\n                return <img src={UndefinedOsIcon} alt=\"undefined\" />\r\n        }\r\n    }\r\nreturn(\r\n        <ShortUserLine to={'/users/'+props.tysId} className={s.shortUser}>\r\n            <Time>\r\n                <p>{props.time}</p>\r\n            </Time>\r\n            <Sessions>\r\n                <Visits>{props.sessions}</Visits>\r\n            </Sessions>\r\n            <Referrer>\r\n                <p>{props.referrer}</p>\r\n            </Referrer>\r\n            <Country>\r\n                <i className={s.flag+' '+s['flag-'+props.country]} > </i>\r\n                <p>{props.country}</p>\r\n            </Country>\r\n            <City>\r\n                <p>{props.city}</p>\r\n            </City>\r\n\r\n            <Os>\r\n                {selectOsIcon(props.os)}\r\n            </Os>\r\n        </ShortUserLine>\r\n)\r\n}\r\n\r\nconst UsersList = (props) => {\r\n\r\n    let users = []\r\n    if(props.usersList !== undefined){\r\n        if(props.usersList !== \"no users\" && props.usersList !== \"you do not have counters\"){\r\n\r\n            let lastDivider = ''\r\n            props.usersList.forEach((item, index)=>{\r\n                if(mongoDate(item.date).comparativeDate !== lastDivider){\r\n                    lastDivider = mongoDate(item.date).comparativeDate\r\n                    users.push({divider: mongoDate(item.date).comparativeDate}, item)\r\n\r\n                }\r\n                else{\r\n                    users.push(item)\r\n                }\r\n\r\n            })\r\n            users = users.map((user, index) => {\r\n                if(user.divider) {\r\n                    return <ListDivider key={index}><p>{user.divider}</p></ListDivider>\r\n                }\r\n                else{\r\n                return <ShortUser key={user.tysId} time={mongoDate(user.date).time} sessions={user.sessionsNumber}\r\n                                  city={user.city} country={user.country}\r\n                                  os={user.os} tysId={user.tysId}\r\n                                  referrer={user.referrer}/>}\r\n                })\r\n        }\r\n        else{\r\n            users =\"empty\"\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"container\">\r\n\r\n                <LoadMore pages={users} pageSize={props.pageSize} totalPages={props.totalUsers}\r\n                          pageChanger={props.getMoreUsers} loader={<LoadingUser />} emptyBlock={<NoUsers />} />\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default UsersList","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getSummaryUsers, getTotalUsers} from \"../../../../redux/selectors/summary-selectors\";\r\nimport {getMoreUsers} from \"../../../../redux/summary-reducer\";\r\nimport UsersList from \"../../../../components/content/counters/counterPage/usersList/usersList\";\r\n\r\n\r\nconst DayUsersContainer = (props) => {\r\n\r\n    return <UsersList  usersList={props.summaryUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state),\r\n        summaryUsers: getSummaryUsers(state),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(DayUsersContainer);\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport mongoDate from \"../../../utils/mongoDate\";\r\nconst Col = styled.div`\r\n display: block;\r\n background: #0063b1;\r\n height: ${props => props.height};\r\n width: 10px;\r\n @media screen and (max-width: 1200px){\r\n  width: 6px;\r\n }\r\n @media screen and (max-width: 500px){\r\n  width: 4px;\r\n }\r\n \r\n`\r\n\r\n\r\nconst ColInfo = styled.div`\r\n  width: 120px;\r\n  height: 65px;\r\n  box-shadow: 0px 0px 5px #c3c3c3;\r\n  display: none;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 0px;\r\n  z-index: 2;\r\n  margin-top: 20px;\r\n  background: white;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  ${(props)=>{\r\n    switch (props.show) {\r\n        case 'showLeft':\r\n            return css`display: flex;\r\n                       right: 0px;\r\n                      `\r\n        case 'showRight':\r\n            return css`display: flex`\r\n        default:\r\n          return css`display: none`\r\n}\r\n}}\r\n`\r\n\r\nconst ColBlock = styled.div`\r\nheight: 100%;\r\nwidth: 2.0833%;\r\ndisplay: block;\r\nposition: relative;\r\n&:hover{\r\nbackground: #e0e0e0;\r\n}\r\n`\r\n\r\n\r\n\r\nconst ColWr = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: flex-end;\r\nposition: relative;\r\ncursor: pointer;\r\n\r\n`\r\n\r\nconst ColTime = styled.p`\r\n       font-size: 12px;\r\n    text-align: left;\r\n    padding-top: 3px;\r\n`\r\n\r\nconst ColNumber = styled.span`\r\n    color: #00A7CF;\r\n    font-size: 24px;\r\n    padding-left: 10px;\r\n    padding-top: 2px;\r\n`\r\n\r\nconst ColTimesRow = styled.div`\r\n    padding-left: 8px;\r\n    padding-top: 6px;\r\n`\r\n\r\nconst ColDay = styled.p`\r\nfont-size: 14px;\r\ncolor: gray;\r\n`\r\n\r\n\r\nconst Graphiccol = (props) => {\r\n    let colheight = props.colHeight*110+'px'\r\n    const [infoState, setInfoState] = useState('hidden')\r\n\r\n    let changeInfoState = (e) =>{\r\n        if(window.innerWidth - e.clientX < 200){\r\n            setInfoState('showLeft')\r\n        }\r\n        else{\r\n            setInfoState('showRight')\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n            <ColBlock onMouseOver={(e)=>{changeInfoState(e)}} onMouseOut={()=>{setInfoState('hidden')}}>\r\n                <ColInfo show={infoState}>\r\n                    <ColNumber>{props.colValue}</ColNumber>\r\n                    <ColTimesRow>\r\n                        <ColDay>{mongoDate(props.colData).comparativeDate}</ColDay>\r\n                        <ColTime>{mongoDate(Date.parse(props.colData)).time + \"-\" + mongoDate(Date.parse(props.colData)+ 60*60*1000).time}</ColTime>\r\n                    </ColTimesRow>\r\n\r\n                </ColInfo>\r\n                <ColWr>\r\n                    <Col height={colheight}/>\r\n                </ColWr>\r\n            </ColBlock>\r\n    )\r\n}\r\nexport default Graphiccol;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport styled from 'styled-components'\r\nimport ReactDOM from \"react-dom\";\r\n\r\nlet GraphicWr = styled.div`\r\nwidth: 100%;\r\nheight: 250px;\r\nbackground: #f4f4f4;\r\nposition: relative;\r\n`\r\n\r\nlet GraphicColsWR = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    height: 200px;\r\n    width: calc(100% - 24px);\r\n    margin: auto;\r\n    \r\n`\r\n\r\nlet GraphicBottom = styled.div`\r\n    position: relative;\r\n    width: calc(100% - 24px);\r\n    border-top: 1px solid gray;\r\n    margin: auto;\r\n    margin-top: 8px;\r\n    padding-top: 3px;\r\n    \r\n    p{\r\n     color: gray;\r\n     position: absolute;\r\n     font-size: 16px;\r\n     @media screen and (max-width: 500px){\r\n     font-size: 13px;\r\n     }\r\n    }\r\n    div{\r\n            width: 9px;\r\n            height: 9px;\r\n            border-radius: 50%;\r\n            display: block;\r\n            background: gray;\r\n            position: absolute;\r\n            top: -5px;\r\n    }\r\n`\r\n\r\nlet GraphicName = styled.h2`\r\n    display: block;\r\n    position: absolute;\r\n    left: 14px;\r\n    top: 8px;\r\n    font-size: 20px;\r\n    visibility: ${props => (props.hide ? `hidden` : `visible`)};;\r\n   \r\n`\r\n\r\nlet NowP = styled.p`\r\n  left: 0%;\r\n   &:before{\r\n   left: 1.04%;\r\n   }\r\n`\r\n\r\nlet Hours24P = styled.p`\r\nleft: 49%;\r\n&:before{\r\n   left: -4px;\r\n   }\r\n\r\n`\r\n\r\nlet Hours48P = styled.p`\r\nright: 0%;\r\n&:before{\r\n   right: 4px;\r\n   }\r\n`\r\n\r\nlet NowDot = styled.div`\r\n  left: calc(1.04% - 5px);\r\n`\r\n\r\nlet Hours24Dot = styled.div`\r\n  left: calc(49.04% - 5px);\r\n`\r\n\r\nlet Hours48Dot = styled.div`\r\n  right: calc(1.04% - 5px);\r\n`\r\n\r\n\r\nconst Graphic = (props) => {\r\n    const [hideH, setHideH] = useState(false)\r\n    const hideRef = useRef(false)\r\n    const hRef = useRef(null);\r\n\r\n    const changeHState = (e) =>{\r\n\r\n\r\n        if(hRef.current.getBoundingClientRect().x + hRef.current.getBoundingClientRect().width > e.clientX - 50){\r\n\r\n            //hideRef.current = true\r\n            setHideH(true)\r\n\r\n        }\r\n        else if( hRef.current.getBoundingClientRect().x + hRef.current.getBoundingClientRect().width < e.clientX - 50){\r\n            //hideRef.current = false\r\n            setHideH(false)\r\n        }\r\n        else{\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    let maxUsersCount = props.graphicData.map((coldata) => (coldata.usersCount))\r\n    maxUsersCount = Math.max.apply(null, maxUsersCount)\r\n\r\n    let graphicColElements = props.graphicData.map((coldata, index) => <Graphiccol key={coldata.time} colData={coldata.time} colHeight={coldata.usersCount / maxUsersCount}\r\n                                                                                   colValue={coldata.usersCount}/>)\r\n\r\n    return  (\r\n            <GraphicWr onMouseLeave={()=>{setHideH(false)}}>\r\n\r\n                <GraphicName ref={hRef} hide={hideH}>Пользователи в час</GraphicName>\r\n               <GraphicColsWR onMouseMove={(e)=>{changeHState(e)}}>\r\n                   {graphicColElements}\r\n               </GraphicColsWR>\r\n\r\n              <GraphicBottom>\r\n                  <NowDot />\r\n                  <Hours24Dot />\r\n                  <Hours48Dot />\r\n                  <NowP>48 часов назад</NowP>\r\n                  <Hours24P>24 часа назад</Hours24P>\r\n                  <Hours48P>Сейчас</Hours48P>\r\n              </GraphicBottom>\r\n            </GraphicWr>\r\n\r\n\r\n    )\r\n}\r\nexport default React.memo(Graphic);","import React from 'react';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nimport styled from 'styled-components'\r\n\r\nconst KeyNumbersWr  = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: center;\r\n@media screen and (max-width: 500px){\r\njustify-content: space-between;\r\nmargin-bottom: 1px;\r\n}\r\n`\r\n\r\nconst KeyNumberBlock = styled.div`\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 200px;\r\n    padding-bottom: 200px; // пропорции блока определяются здесь\r\n    margin-right: 11px;\r\n    @media screen and (max-width: 500px){\r\n    width: calc(50% - 6px);\r\n    padding-bottom: calc(50% - 6px);\r\n    margin-right: 0px;\r\n    }\r\n    \r\n`\r\nconst KeyNumberContent = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f4f4f4;\r\n    \r\n`\r\n\r\nconst KeyNumberName = styled.p`\r\n    font-size: 20px;\r\n    position: absolute;\r\n    right: 16px;\r\n    bottom: 10px;\r\n    @media screen and (max-width: 360px){\r\n    font-size: 16px;\r\n    }\r\n`\r\n\r\nconst KeyNumber = styled.p`\r\n    font-size: 40px;\r\n    position: absolute;\r\n    left: 16px;\r\n    top: 10px;\r\n`\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <>\r\n            <div className='container'>\r\n\r\n                        <KeyNumbersWr>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayClicks}</KeyNumber>\r\n                                    <KeyNumberName>Клики</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayUsers}</KeyNumber>\r\n                                    <KeyNumberName>Пользователи</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n\r\n                        </KeyNumbersWr>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n\r\n                <Graphic graphicData={props.graphicData}/>\r\n            </div>\r\n                </>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSummaryGraphic, getSummaryInfo} from \"../../../../redux/selectors/summary-selectors\";\r\n\r\n\r\n\r\nconst DaystatContainer = (props) => {\r\n    return <Daystat graphicData={props.graphicInfo} summaryInfo={props.summaryInfo}/>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        summaryInfo: getSummaryInfo(state),\r\n        graphicInfo: getSummaryGraphic(state),\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(DaystatContainer)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        stage: state.auth.stage,\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\n\r\n\r\nconst WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isInitialized){\r\n            if(props.stage === 'registered') return <Component {...props}/>\r\n            else if(props.stage === 'confirm email' || props.stage === 'additional_information') return <Redirect to='signup' />\r\n            else return <Redirect to='/login' />\r\n        }\r\n        else{\r\n            return <Component {...props}/>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n\r\n}\r\nexport default WithAuthRedirect","import React from \"react\";\r\nimport s from \"./loadingschemes.module.scss\";\r\nexport const CountersListLoader = () =>{\r\n    return (\r\n            <div className=\"container\">\r\n              <div className={s.counters_h1}>\r\n                  <div className={s.h1 +\" \"+ s.elem} />\r\n                  <div className={s.add_counter +\" \"+ s.elem} />\r\n              </div>\r\n\r\n              <div className={s.counters_table_head +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.page_buttons}>\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n              </div>\r\n                <div className={s.margin_55px} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.page_buttons}>\r\n                    <div className={s.page_button + \" \" + s.elem} />\r\n                    <div className={s.page_button + \" \" + s.elem} />\r\n                    <div className={s.page_button + \" \" + s.elem} />\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport const CounterPageLoader = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <div className={s.h1 +\" \"+ s.elem} />\r\n            <div className={s.counterpage_row + \" row\"}>\r\n                <div className={s.counter_left}>\r\n                    <div className={s.counter_key_numbers}>\r\n                        <div className={s.counter_key_number +\" \"+ s.elem}/>\r\n                        <div className={s.counter_key_number +\" \"+ s.elem}/>\r\n                    </div>\r\n                    <div className={s.counter_desc +\" \"+ s.elem} />\r\n                    <div className={s.counter_desc +\" \"+ s.elem} />\r\n                    <div className={s.counter_desc +\" \"+ s.elem} />\r\n                </div>\r\n                <div className={s.code_block +\" \"+ s.elem} />\r\n            </div>\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.load_more_bottom + \" \" + s.elem} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const FriendsPageLoader = () =>{\r\n    return(\r\n            <div className=\"container\">\r\n                <div className={s.h1 +\" \"+ s.elem} />\r\n                <div className={s.text_linefriends +\" \"+ s.elem} />\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.proposals + \" \" + s.elem} />\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n\r\n                    <div className={s.page_buttons}>\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport const SummaryPageLoader = () =>{\r\n    return(\r\n            <div className=\"container\">\r\n                <div className={s.loading_scheme}>\r\n                    <div className={s.h1 +\" \"+ s.elem} />\r\n                    <div className={s.day_stat_row}>\r\n                        <div className={s.day_stat + ' ' + s.elem} />\r\n                        <div className={s.day_stat + ' ' + s.elem} />\r\n                    </div>\r\n                    <div className={s.graphic + ' ' + s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.load_more_bottom + \" \" + s.elem} />\r\n                </div>\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport const UserPageLoader = () =>{\r\n    return (\r\n            <div className=\"container\">\r\n                <div className={s.loading_scheme}>\r\n                    <div className={s.h1 +\" \"+ s.elem} />\r\n                    <div className={s.user_stat_row}>\r\n                        <div className={s.user_main_block +\" \"+ s.elem} />\r\n                        <div className={s.user_main_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_blocks_row}>\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_blocks_row}>\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_block_col_12 +\" \"+ s.elem} />\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nconst useDocTitle = title => {\r\n  const [docTitle, setDocTitle] = useState(title);\r\n\r\n  useEffect(() => {\r\n    document.title = docTitle;\r\n    return (()=>{\r\n        document.title = ''\r\n    })\r\n  }, [docTitle]);\r\n\r\n  return [docTitle, setDocTitle];\r\n};\r\n\r\nexport {useDocTitle};\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSummaryData, clearSummaryData} from \"../../../redux/summary-reducer\";\r\nimport {getSummaryInfo} from \"../../../redux/selectors/summary-selectors\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {SummaryPageLoader} from \"../../common/loadingschemes/loadingSchemes\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\n\r\n\r\nconst SummaryContainer = (props) =>{\r\n    const [pageState, setPageState] = useState('fetching')\r\n    const [title, setTitle] = useDocTitle('Сводка')\r\n\r\n    useEffect(()=>{\r\n        return( ()=>{\r\n            props.clearSummaryData()\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getSummaryData()\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [ props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.summaryInfo.dayClicks !== undefined && props.summaryInfo.dayClicks !== '' && pageState === 'fetching'){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.summaryInfo.dayClicks])\r\n\r\n    return (\r\n            <>\r\n\r\n                {pageState === 'fetching' ?<SummaryPageLoader /> :\r\n                        <>\r\n                            <div className=\"container h1-block\"><h1 className=\"h1\">Статистика за сутки</h1></div>\r\n                            <DaystatContainer  />\r\n                            <DayusersContainer />\r\n                        </> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        isInitialized: state.app.isInitialized,\r\n        summaryInfo: getSummaryInfo(state)\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{getSummaryData, clearSummaryData}),WithAuthRedirect)(SummaryContainer, SummaryPageLoader);","export const required = value => (value || typeof value === 'number' ? undefined : 'Обязательно')\r\n\r\nexport const checkLogin = value => (value && /^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(value) ? undefined : 'Некорректный логин')\r\n\r\nexport const checkEmail = value => (value && /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(value) ? undefined : 'Почта некорректная')\r\n\r\nexport const checkPassword = value => (value && /^[0-9a-z#!_-]/i.test(value) ? undefined : 'Пароль некорректный')\r\n\r\nexport const passwordsMatch = (value, allValues) =>\r\n        value !== allValues.password ? 'Пароли не совпадают' : undefined;\r\nexport const minLength = (value) => (value && value.length > 1 ? undefined : 'Минимум 2 символа')\r\n","import React, {useRef, useState} from \"react\";\r\nimport s from \"./pixelCode.module.scss\";\r\nimport {Button} from \"../../../common/formControls\";\r\n\r\nconst PixelCodeBlock = (props) =>{\r\n\r\n    const [copySuccess, setCopySuccess] = useState('');\r\n    const textAreaRef = useRef(null);\r\n\r\n    let copyToClipboard = (e) =>{\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n        setCopySuccess('copied');\r\n        setTimeout(()=>{setCopySuccess('')}, 3000)\r\n    };\r\n\r\n\r\n\r\n    return(\r\n            <div className={s.codeBlock}>\r\n                <textarea onClick={(e)=>{e.target.select()}} ref={textAreaRef} value={props.pixelCode} name=\"\" id=\"\" cols=\"30\" rows=\"10\" className={s.codeTextarea}> </textarea>\r\n                <div className={s.copyButton_wr}>\r\n                    <Button primary onClick={copyToClipboard}>Скопировать код</Button>\r\n                    {copySuccess === 'copied' ? <div className={s.copied_label}>Скопировано</div> : ''}\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PixelCodeBlock","import React, {useState, useEffect, useRef} from 'react';\r\nimport s from '../addcounter.module.scss';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Button} from \"../../../../common/formControls\";\r\nimport {required} from \"../../../../../utils/validation\";\r\nimport loader_icon from \"../../../../../assets/icons/loading.svg\"\r\nimport styled from 'styled-components'\r\nimport PixelCodeBlock from \"../../pixelcode/pixelCode\";\r\nconst SendButton = styled(Button)`\r\n float: right;\r\n`\r\n\r\nconst AddCounterForm = (props) =>{\r\n    return (\r\n\r\n            <div className={s.addcounter_form}>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                    <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar} />\r\n                    <Field name=\"counterName\" type=\"text\"  component={Input} placeholder=\"Название счётчика\" validate={required}/>\r\n                    <Field name=\"counterDomen\" type=\"text\"  component={Input} placeholder=\"Домен\" validate={required}/>\r\n                    <SendButton primary disabled={props.submitting  || (props.invalid && props.anyTouched)} type=\"submit\">Отправить</SendButton >\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddCounterReduxForm = reduxForm({form: 'addcounter-form'})(AddCounterForm)\r\n\r\n\r\n\r\n\r\nconst FetchingForm = (props) => {\r\n    return(\r\n            <div className={s.form_fetching}>\r\n                <img src={loader_icon} alt=\"\"/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Addcounterblock = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.postCounter(values.counterName, values.counterDomen)\r\n    }\r\n\r\n\r\n    const blockSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <AddCounterReduxForm onSubmit={onSubmit}/>\r\n            case \"fetching\": return <FetchingForm />\r\n            case \"pixelCode\": return <PixelCodeBlock pixelCode={props.pixelCode}/>\r\n        }\r\n    }\r\n    const textSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <p className={s.text}>Добавьте ваш счётчик <br /><br /> Выбирите название для счётчика и укажите URL с которого хотите получать данные</p>\r\n            case \"fetching\": return ''\r\n            case \"pixelCode\": return <div className={s.last_text + \" \" + s.text}><p>Скопируйте код и вставьте его на ваш сайт через редактор кода.<br /><br />Сразу после этого в разделе данного счётчика\r\n                начнёт отображаться статистика о новых посетителях</p><button onClick={()=>{props.makeOneMore()}} className=\"attractive-button\">Создать другой счётчик</button></div>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Счётчики</h1>\r\n            </div>\r\n            <div className={`${s.row} row`}>\r\n                <div className=\"col-6\">\r\n                {textSelector()}\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {blockSelector()}\r\n            </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\nexport default Addcounterblock;","export const getPixelCode = (state) =>{\r\n    return state.countersPage.pixelCode\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.countersPage.pageSize\r\n}\r\nexport const getCurrentCounterInfo = (state) =>{\r\n    return state.countersPage.currentCounter.counterInfo\r\n}\r\nexport const getCurrentCounterUsers = (state) =>{\r\n    return state.countersPage.currentCounter.counterUsers\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.countersPage.currentCounter.totalUsers\r\n}\r\n\r\n\r\nexport const getYourCounters = (state) =>{\r\n    return state.countersPage.yourCounters.counterslistData\r\n}\r\n\r\nexport const getYourTotalCounters = (state) =>{\r\n    return state.countersPage.yourCounters.totalCounters\r\n}\r\n\r\nexport const getFriendsCounters = (state) =>{\r\n    return state.countersPage.friendsCounters.counterslistData\r\n}\r\n\r\nexport const getFriendsTotalCounters = (state) =>{\r\n    return state.countersPage.friendsCounters.totalCounters\r\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {postCounter} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {getPixelCode} from  \"../../../../../redux/selectors/counters-selectors\"\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst AddcounterblockContainer = (props) => {\r\n    let postCounter = (name, domen) =>{\r\n        props.postCounter({name: name, domen: domen})\r\n        setBlockState(\"fetching\")\r\n    }\r\n\r\n    let makeOneMore = () =>{\r\n        setBlockState(\"form\")\r\n    }\r\n\r\n    const [blockState, setBlockState] = useState(\"form\")\r\n\r\n    useEffect(()=>{\r\n       if(props.pixelCode !== \"\"){\r\n           setBlockState(\"pixelCode\")\r\n       }\r\n    },[props.pixelCode])\r\n\r\n    return <Addcounterblock postCounter={postCounter}\r\n                            blockState={blockState}\r\n                            makeOneMore={makeOneMore}\r\n                            pixelCode={props.pixelCode}\r\n\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n      pixelCode: getPixelCode(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {postCounter}), WithAuthRedirect)(AddcounterblockContainer);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Счётчики</h1>\r\n\r\n                <div className=\"h1-buttons\">\r\n                    <NavLink to=\"/counters/addcounter\" className=\"h1-button\">\r\n                        <div className=\"h1-button-icon\">\r\n                            <img src={addIcon} alt=\"\"/>\r\n                        </div>\r\n                        <p className=\"h1-button-text\">Добавить счётчик</p>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route exact path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counter/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n                        <div className={s.owner}>\r\n                            <p>{props.login}</p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from \"react\";\r\nimport s from \"./pagination.module.scss\"\r\n\r\n\r\n\r\n\r\nconst PaginationComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    let pages =[]\r\n    for(let i=1; i<=pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n    let pagesButtonsElements = pages.map(page => <button key={page} className={props.currentPage === page ? s.page_button + \" \" + s.current_page : s.page_button}\r\n             onClick={() => {props.currentPage !== page && props.changePage(page)}}>{page}</button>)\r\n    let buttonsSelector = () =>{\r\n        if (props.pages === 'empty' || pagesCount === 1){\r\n            return (<></>)\r\n        }\r\n        else{\r\n            return   <nav className={s.pages_buttons}>{pagesButtonsElements}</nav>\r\n        }\r\n    }\r\n    return(\r\n            buttonsSelector()\r\n    )\r\n}\r\n\r\nconst Loader = (props) =>{\r\n    return(\r\n            props.elem\r\n    )\r\n}\r\n\r\nexport class Pagination extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            if(this.props.getCurrentPage === undefined){\r\n                this.setState({isFetching: false})\r\n            }\r\n        else{\r\n\r\n                if(this.state.pages !== prevState.pages){\r\n\r\n                    this.setState({isFetching: false})\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n\r\n            this.loaders.push(<Loader elem={this.props.loader} key={i} />)\r\n        }\r\n\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n        else{\r\n            this.setState({initialized: true})\r\n        }\r\n    }\r\n\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching){\r\n            return this.loaders\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n                <PaginationComponent currentPage={this.state.currentPage}\r\n                                     pageSize={this.props.pageSize}\r\n                                     totalPages={this.props.totalPages}\r\n                                     changePage={this.changePage}\r\n                                     pages={this.state.pages}\r\n                />\r\n               </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../counterslist.module.scss';\r\nimport Shortcounter from '../shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../../common/pagination/pagination\";\r\nimport plus from \"../../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У вас ещё нет счётчиков,<br /> добавьте свой первый счётчик</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst YourCountersList = (props) => {\r\n\r\n       let countersElement = []\r\n\r\n       if(props.countersListData.length !== 0){\r\n           countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}\r\n                                                                   login={counter.login}\r\n           /> )\r\n       }\r\n       else{\r\n           countersElement = 'empty'\r\n       }\r\n\r\n\r\n       let firstLoader = []\r\n            for(let i=0; i < props.pageSize; i++){\r\n            firstLoader.push(<LoadingCounter />)\r\n        }\r\n       return <><div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.owner}>\r\n                           <p>Владелец</p>\r\n                       </div>\r\n                   </div>\r\n                    <div className={s.list_head}><p>Ваши счётчики</p></div>\r\n                   <div className={s.list}>\r\n\r\n                     <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                           pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n                   </div>\r\n\r\n               </div>\r\n\r\n\r\n\r\n       </>\r\n\r\n\r\n}\r\nexport default YourCountersList;","import React from \"react\";\r\nimport YourCountersList from \"./yourCountersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeYourCounters} from \"../../../../../redux/counters-reducer\";\r\nimport {getYourCounters, getYourTotalCounters, getPageSize} from \"../../../../../redux/selectors/counters-selectors\";\r\n\r\nclass YourCountersListContainer extends React.Component{\r\n\r\n\r\n    changePage = (page) =>{\r\n        this.props.changeYourCounters(page)\r\n    }\r\n    render(){\r\n      return <YourCountersList\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n\r\n    return{\r\n        countersListData: getYourCounters(state),\r\n        pageSize: getPageSize(state),\r\n        totalCounters: getYourTotalCounters(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeYourCounters})(YourCountersListContainer)\r\n\r\n","import React from 'react';\r\nimport s from '../counterslist.module.scss';\r\nimport Shortcounter from '../shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../../common/pagination/pagination\";\r\nimport plus from \"../../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У ваших друзей ещё нет счётчиков</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nconst FriendsCountersList = (props) =>{\r\n    let countersElement = []\r\n\r\n    if(props.countersListData.length !== 0){\r\n        countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                              name={counter.name}\r\n                                                                              domen={counter.domen}\r\n                                                                              dayusers={counter.dayusers}\r\n                                                                              allusers={counter.allusers}\r\n                                                                              status={counter.status}\r\n                                                                              login={counter.login}\r\n        /> )\r\n    }\r\n    else{\r\n        countersElement = 'empty'\r\n    }\r\n    return(\r\n\r\n\r\n            <div className=\"container\">\r\n                <div className={s.list_head}><p>Счётчики ваших друзей</p></div>\r\n\r\n                <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                            pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FriendsCountersList;","import React from \"react\";\r\nimport FriendsCountersList from \"./friendsCountersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeFriendsCounters} from \"../../../../../redux/counters-reducer\";\r\nimport {getFriendsCounters, getFriendsTotalCounters, getPageSize} from \"../../../../../redux/selectors/counters-selectors\";\r\n\r\nclass FriendsCountersListContainer extends React.Component{\r\n    changePage = (page) =>{\r\n        this.props.changeFriendsCounters(page)\r\n    }\r\n    render(){\r\n      return <FriendsCountersList\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n\r\n    return{\r\n        countersListData: getFriendsCounters(state),\r\n        pageSize: getPageSize(state),\r\n        totalCounters: getFriendsTotalCounters(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeFriendsCounters})(FriendsCountersListContainer)\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport YourCounterslistContainer from \"./countersLists/yourCounters/yourCountersListContainer\";\r\nimport FriendsCountersListContainer from \"./countersLists/friendsCounters/friendsCountersListContainer\";\r\nimport {CountersListLoader} from \"../../common/loadingschemes/loadingSchemes\"\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {getCounters, clearCountersLists} from \"../../../redux/counters-reducer\";\r\nimport {getYourTotalCounters} from \"../../../redux/selectors/counters-selectors\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\n\r\nconst Counters = (props) =>{\r\n    const [pageState, setPageState] = useState('fetching')\r\n    const [title, setTitle] = useDocTitle('Счётчики')\r\n\r\n    useEffect(()=>{\r\n        return( ()=>{\r\n            props.clearCountersLists()\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getCounters()\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(props.totalCounters !== '' && pageState === 'fetching'){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.totalCounters])\r\n    return (\r\n\r\n            <>\r\n                {pageState === 'fetching' ?\r\n                        <CountersListLoader />: <>\r\n                    <Addcounter/>\r\n                    <YourCounterslistContainer pageState={pageState}/>\r\n                    <FriendsCountersListContainer /></>}\r\n                    </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        totalCounters: getYourTotalCounters(state),\r\n        isInitialized: state.app.isInitialized,\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, {getCounters,  clearCountersLists}), WithAuthRedirect)(Counters);","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Аудитории</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Аудитории</h1>\r\n                <div className=\"h1-buttons\">\r\n                    <NavLink to='/audiences/addaudience' className=\"h1-button\">\r\n                        <div className=\"h1-button-icon\">\r\n                            <img src={addIcon} alt=\"\"/>\r\n                        </div>\r\n                        <p className=\"h1-button-text\">Добавить аудиторию</p>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <>\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from \"react\";\r\n\r\nexport const offsetText = (text) =>{\r\n    let textarr = text.split('\\n');\r\n    const isUrl = /^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/;\r\n    for (let i = 0; i < textarr.length; i=i+2){\r\n        textarr.splice(i+1,0,<br />)\r\n    }\r\n\r\n    for (let lineNumber = 0; lineNumber < textarr.length; lineNumber++){\r\n        if(typeof textarr[lineNumber] === 'string'){\r\n            let line = textarr[lineNumber].split(' ')\r\n            for (let wordNumber = 0; wordNumber < line.length; wordNumber++){\r\n                if(line[wordNumber] == '') {\r\n                    line[wordNumber] = <span>&nbsp;</span>\r\n                }\r\n                else{\r\n                    line[wordNumber] = line[wordNumber]+' ';\r\n                }\r\n\r\n                if(isUrl.test(line[wordNumber])){\r\n                    line[wordNumber] = <a target=\"blank\" href={'https://'+line[wordNumber]}>{line[wordNumber]}</a>\r\n                }\r\n            }\r\n            textarr[lineNumber] = line\r\n        }\r\n\r\n    }\r\n    return(\r\n            textarr\r\n    )\r\n}","import React from \"react\";\r\nimport loadingImg from \"../../assets/icons/loading.svg\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport s from \"./common.module.scss\"\r\nimport {offsetText} from \"../../utils/textTransformation\";\r\nimport {Input} from \"./formControls\";\r\n\r\nexport class EditInput extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n                this.setState({isFetching: true})\r\n                this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n\r\n            if(prevState.isFetching === true){\r\n                this.setState({wasUpdated: true})\r\n                setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n                    {this.state.inputEditMode\r\n                            ?\r\n\r\n                                        <div className={s.input_wr + \" \" + s.editInput}>\r\n                                            <input onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                                   type=\"text\"  placeholder={this.props.placeholder}\r\n                                                   onBlur={() => {this.changeCondition(false)}} autoFocus={true}/>\r\n\r\n                                        </div>\r\n                            :\r\n                            <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.props.inputText}</div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class EditTextarea extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    changeCondition = (inputState,e) =>{\r\n        if(e){\r\n            console.log(e.target)\r\n        }\r\n\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n            this.setState({isFetching: true})\r\n            this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n            \r\n        }\r\n\r\n        if(prevState.isFetching === true && prevProps !== this.props){\r\n            this.setState({wasUpdated: true})\r\n            setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={(e) =>{this.changeCondition(true, e)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n            {this.state.inputEditMode\r\n                    ?\r\n\r\n                    <div>\r\n                        <textarea onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                  wrap=\"soft\" className='plain_textarea'\r\n                                  type=\"text\"  placeholder={this.props.placeholder}\r\n                                  cols=\"30\" rows=\"10\"\r\n                                  onBlur={() => {this.changeCondition(false)}} autoFocus={true}> </textarea>\r\n                    </div>\r\n                    :\r\n                    <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder :<p>{offsetText(this.props.inputText)}</p>}</div>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport s from './avatar.module.scss'\r\nimport profileIcon from '../../../../assets/icons/menu/profile.svg'\r\n\r\nconst Avatar = (props) =>{\r\n\r\n    return(\r\n\r\n            <div className={s.avatarBlock}>\r\n                <div className={s.photo_wr}>\r\n                    <img src={profileIcon} alt=\"\"/>\r\n                </div>\r\n                <p className={s.p}>Добавить фото</p>\r\n\r\n            </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Avatar;","import React from 'react';\r\n\r\nimport Avatar from \"./avatar\"\r\n\r\nconst AvatarContainer = (props) =>{\r\n\r\n    return(\r\n           <Avatar />\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default AvatarContainer;","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nimport {EditInput, EditTextarea} from \"../../../common/editinput\";\r\nimport AvatarContainer from \"../avatar/avatarContainer\";\r\n\r\nconst YourProfile = (props) =>{\r\n\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <AvatarContainer />\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <EditInput inputText={props.name} putInfo={props.putProfileInfo} name={\"name\"} placeholder={\"Введите ваше имя\"}/>\r\n                                <EditInput inputText={props.soName} putInfo={props.putProfileInfo} name={\"soName\"} placeholder={\"Введите вашу фамилию\"}/>\r\n                                <EditInput inputText={props.company} putInfo={props.putProfileInfo} name={\"company\"} placeholder={\"Введите вашу компанию\"}/>\r\n                                <EditTextarea inputText={props.description} putInfo={props.putProfileInfo} name={\"description\"} placeholder={\"Введите описание\"} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React, {useEffect, useState, useRef} from 'react';\r\nimport s from \"./profileLine.module.scss\";\r\nimport emptyAvatar from '../../../assets/icons/menu/profile.svg'\r\nimport {offsetText} from '../../../utils/textTransformation'\r\n\r\nconst Description = (props) =>{\r\n\r\n    const blockRef = useRef(0)\r\n    const openRef = useRef(0)\r\n    const [descriptionVisibility, setDescriptionVisibility] = useState(false)\r\n\r\n\r\n        const handleOutsideClick = (e) => {\r\n\r\n            if(e.target.id === openRef.current.id) return ;\r\n            if(blockRef.current && e.target.closest(`.${blockRef.current.className}`)) return;\r\n\r\n                setDescriptionVisibility(false)\r\n\r\n\r\n        }\r\n\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener('click', handleOutsideClick);\r\n        }}, [])\r\n\r\n\r\n\r\n    let onClickHandler = () =>{\r\n        setDescriptionVisibility((descriptionVisibility)=> !descriptionVisibility)\r\n    }\r\n\r\n\r\n    return(\r\n\r\n            <div className={s.description_wr}>\r\n\r\n                {descriptionVisibility &&\r\n                        <div ref={blockRef} className={s.description_block}>\r\n                            <div className={s.company_line}><span>Компания:</span><p>{props.company}</p></div>\r\n                            <p>{offsetText(props.description)}</p>\r\n                        </div>}\r\n\r\n                <p ref={openRef} onClick={()=>{onClickHandler()}}  id={props.id} className={s.info_p}>О пользователе</p>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileLine = (props) => {\r\n\r\n    return  (\r\n        <div key={props.key} className={s.line}>\r\n            <div className={s.names_row} >\r\n                <div className={s.avatar_cont}>\r\n                    {props.avatar === 'none' ? <img className={s.emptyAvatar} src={emptyAvatar} alt=\"\"/> : <img className={s.avatar} src={props.avatar} alt=\"\"/>}\r\n                </div>\r\n                <p>{props.name}</p>\r\n                <p>{props.soName}</p>\r\n            </div>\r\n            <div className={s.company}>\r\n                <p>{props.company}</p>\r\n            </div>\r\n            <div className={s.description}>\r\n                {(props.company || props.description) && <Description id={props._id} company={props.company}  description={props.description}/>}\r\n            </div>\r\n            <div className={s.buttons}>\r\n                {props.buttonsComponent}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileLine","import React from 'react';\r\nimport s2 from '../../friends/friends.module.scss';\r\nimport s from './yourFriends.module.scss'\r\n\r\nimport {LoadMore} from \"../../../common/loadMore\";\r\nimport friendIcon from '../../../../assets/icons/users.svg'\r\nimport ProfileLine from \"../../../profile/profileLine/profileLine\";\r\nimport {Button} from \"../../../common/formControls\";\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\n\r\nconst NoFriends = () =>{\r\n    return <div className={s.noFriends}>\r\n        <img src={friendIcon} alt=\"\"/>\r\n        <p>У вас ещё нет друзей</p>\r\n    </div>\r\n}\r\n\r\nconst YourFriends = (props) => {\r\n    let friendsList = []\r\n    let deleteFriend = (userId, key) =>{\r\n     props.deleteFriend(userId, key)\r\n    }\r\n\r\n    let buttonSelector = (userId, buttonId) =>{\r\n        if(props.friends[buttonId].isFetching === false){\r\n            return <Button className={s.button}  onClick={()=>{deleteFriend(userId, buttonId)}}>Удалить из друзей</Button>\r\n        }\r\n        else{\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n    }\r\n    if(props.friends !== \"no friends\"){\r\n        friendsList = props.friends.map((friend, index)=>\r\n                <ProfileLine {...friend} buttonsComponent={buttonSelector(friend.userId, index)}/>)\r\n    }\r\n    else{\r\n        friendsList = \"empty\"\r\n    }\r\n    return  (\r\n            <div className={s2.yourFriends}>\r\n                <h2>Ваши друзья:</h2>\r\n                <LoadMore pages={friendsList} pageSize={props.pageSize} totalPages={props.totalFriends}\r\n                          pageChanger={props.addToFriendsList} loader={<LoadingProfile />} emptyBlock={<NoFriends />}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default YourFriends;","import React from 'react';\r\nimport YourFriends from \"./yourFriends\";\r\nimport {getFriends, getPageSize, getTotalFriends, getDeletedFriend} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getFriendsList, deleteFriend, addFriendsList, setFriendsList} from \"../../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nclass YourFriendsContainer extends React.Component{\r\n    state ={\r\n        friends: []\r\n    }\r\n    componentDidMount() {\r\n        this.props.getFriendsList(1, this.props.pageSize)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            if(prevProps.deletedFriend !== this.props.deletedFriend){\r\n                this.deleteFriendLocal(this.props.deletedFriend[0])\r\n            }\r\n\r\n            if(prevProps.friends !== this.props.friends){\r\n                if(typeof this.props.friends === \"object\"){\r\n                    let friendsFetching = this.props.friends.map((friend)=> ({...friend, isFetching: false}))\r\n                    this.setState({friends: [...this.state.friends, ...friendsFetching]})\r\n\r\n                }\r\n                else{\r\n                    if(typeof this.props.friends === 'object'){\r\n                        let friendsFetching = this.props.friends.map((friend)=> ({...friend, isFetching: false\r\n                        }))\r\n                        this.setState({friends: friendsFetching})\r\n                    }\r\n                    else{\r\n                        this.setState({friends: this.props.friends})\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyFriends = {...this.state.friends}\r\n        copyFriends[buttonId].isFetching = true\r\n        this.setState({listButtons: copyFriends})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setFriendsList([],undefined)\r\n    }\r\n\r\n    deleteFriendLocal = (friendId) =>{\r\n        let friendsCopy = [...this.state.friends]\r\n        friendsCopy.splice(friendId, 1)\r\n        if(friendsCopy.length === 0){\r\n            this.setState({friends: \"no friends\"})\r\n        }\r\n        else{\r\n            this.setState({friends: friendsCopy})\r\n        }\r\n    }\r\n\r\n    deleteFriend = (userId, buttonId) =>{\r\n        this.changeButtonState(buttonId)\r\n        this.props.deleteFriend(userId, buttonId)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <div className=\"container\">\r\n                <YourFriends\r\n                        friends={this.state.friends}\r\n                        pageSize={this.props.pageSize}\r\n                        totalFriends={this.props.totalFriends}\r\n                        deleteFriend={this.deleteFriend}\r\n                        addToFriendsList={this.props.addFriendsList}/>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        friends: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalFriends: getTotalFriends(state),\r\n        deletedFriend: getDeletedFriend(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getFriendsList, deleteFriend, addFriendsList, setFriendsList})(YourFriendsContainer);","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport YourFriendsContainer from './yourFriends/yourFriendsContainer'\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\nconst ProfileSettings = () =>{\r\n    const [title, setTitle] = useDocTitle('Настройки')\r\n    return(\r\n            <>\r\n                <div className=\"container h1-block\">\r\n                    <h1 className=\"h1\">Настройки</h1>\r\n                </div>\r\n               <YourProfileContainer />\r\n               <YourFriendsContainer />\r\n            </>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings);","import React from 'react';\r\n\r\nimport styled from \"styled-components\";\r\nimport background from \"../../assets/summary-bg.jpg\";\r\n\r\nexport const BackGround = styled.div`\r\nbackground: url(${background});\r\ndisplay: block;\r\nposition: fixed;\r\ntop:0;\r\nleft: 0;\r\nright: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: -1;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\n    background-position: center top;\r\n    @media screen and (max-width: 480px){\r\n        background: white;\r\n    }\r\n`","import React, {useEffect, useState} from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Button, FormFetching} from \"../common/formControls\"\r\nimport {required} from \"../../utils/validation\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport {BackGround} from \"../common/background\"\r\nimport styled from 'styled-components'\r\n\r\nconst SuccessForm = () =>{\r\n    const [redirect, setRedirect] = useState(false)\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setRedirect(true)},1500)\r\n    },[])\r\n    return(\r\n            <div className={s.success_auth}>\r\n                {redirect && <Redirect to='/summary' />}\r\n                <img src={doneImg} alt=\"\"/><p>Вы авторизованы</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst SendButton = styled(Button)`\r\n float: right;\r\n margin-top: 60px;\r\n`\r\n\r\n\r\nconst LoginForm = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <h1 className={s.h1}>Вход</h1>\r\n                <div className={s.form_danger_wr}>{props.error ? <span className={s.form_danger}>{props.error}</span> : ''}</div>\r\n                <FormFetching isFetching={props.isFetching}/>\r\n                <Field name=\"emailInput\" type=\"text\"  component={Input} placeholder=\"Почта\" validate={required}/>\r\n                <Field name=\"passwordInput\" type=\"password\"  component={Input} placeholder=\"Пароль\" validate={required}/>\r\n                <p className={s.dont_reg_yet}>Нет учётной записи? <NavLink to='signup'>Создайте её!</NavLink></p>\r\n                <SendButton primary disabled={props.submitting  || (props.invalid && props.anyTouched)} type=\"submit\">Войти</SendButton>\r\n\r\n\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login-form'})(LoginForm)\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendLoginRequest(values.emailInput, values.passwordInput)\r\n\r\n    }\r\n\r\n\r\n    return  (\r\n            <>\r\n           <BackGround />\r\n          <div className=\"fullpage_container\">\r\n              <div className={s.login_block}>\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <LoginReduxForm isFetching={props.isFetching} onSubmit={onSubmit}/>\r\n                          </div>\r\n                          :\r\n                          <SuccessForm />\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {useDocTitle} from \"../../utils/customHooks\";\r\n\r\nlet LoginContainer = (props) => {\r\n    const [title, setTitle] = useDocTitle('Вход')\r\n    let sendLoginRequest = (email, password) => {\r\n        props.loginThunkCreator(email, password)\r\n    }\r\n\r\n\r\n\r\n\r\n        return <LoginBlock\r\n                       isFetching={props.isFetching}\r\n                       isAuth={props.isAuth}\r\n                       sendLoginRequest={sendLoginRequest}\r\n            />\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport s from \"./registration.module.scss\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Button, Input, PasswordScoreInput} from \"../../common/formControls\";\r\nimport {checkEmail, checkLogin, checkPassword, passwordsMatch, required} from \"../../../utils/validation\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SignUpForm = (props) =>{\r\n    return (\r\n\r\n            <form onSubmit={props.handleSubmit}>\r\n                <h1 className={s.h1}>Регистрация</h1>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar} />\r\n                <Field name=\"login\" type=\"text\"  component={Input} placeholder=\"Придумайте логин\" validate={[required, checkLogin]}/>\r\n                <Field name=\"email\" type=\"text\"  component={Input} placeholder=\"Ваша почта\" validate={[required, checkEmail]}/>\r\n                <Field name=\"password\" type=\"password\"  component={PasswordScoreInput} placeholder=\"Придумайте пароль\" validate={[required, checkPassword]}/>\r\n                <Field name=\"repeatPassword\" type=\"password\"  component={Input} placeholder=\"Повторите пароль\" validate={[required, passwordsMatch]}/>\r\n                <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n                <Button className={s.button} primary  disabled={props.submitting  || (props.invalid && props.anyTouched) || props.isFetching}  type=\"submit\" >Отправить</Button>\r\n\r\n            </form>\r\n\r\n    )\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({form: 'signup-form'})(SignUpForm)\r\n\r\nconst Registration = (props) =>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendSignUpRequest( values.email, values.login, values.password)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.signup_form}>\r\n                <SignUpReduxForm onSubmit={onSubmit} isFetching={props.isFetching}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Registration","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport s from \"../components/signup/signup.module.scss\";\r\nimport loading from \"../assets/icons/loading.svg\";\r\n\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\n\r\nconst FetchingBlock = () =>{\r\n    return(\r\n            <div className={s.fetching_block}>\r\n                <img src={loading} alt=\"\"/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst  WithSignUpStagePreloader = (Component) =>{\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isInitialized){\r\n            return <Component {...props}/>\r\n        }\r\n        else{\r\n            return <FetchingBlock />\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n\r\n}\r\nexport default  WithSignUpStagePreloader","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Registration from \"./registration\"\r\nimport {signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\nimport WithSignUpStagePreloader from \"../../../hoc/withAuthStageRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\n\r\nconst RegistrationContainer = (props) =>{\r\n    const [title, setTitle] = useDocTitle('Регистрация')\r\n\r\n    let sendSignUpRequest = (email,login,password) =>{\r\n        props.signUpThunkCreator(email,login,password)\r\n    }\r\n\r\n    return(\r\n            <Registration isFetching={props.isFetching}  sendSignUpRequest={sendSignUpRequest} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isFetching: state.auth.isFetching\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {signUpThunkCreator}), WithSignUpStagePreloader)(RegistrationContainer)","import React, {useEffect, useState, useRef} from \"react\";\r\nimport s from \"./confirmEmail.module.scss\"\r\nimport {Button, FormFetching} from \"../../common/formControls\";\r\n\r\nconst ConfirmEmail = (props) =>{\r\n    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n    const [timerSeconds, setTimerSeconds] = useState(30)\r\n    const [showBadge, setShowBadge] = useState(false)\r\n    const [showTimer, setShowTimer] = useState(false)\r\n    const timer = useRef(null)\r\n\r\n    let sendMail = () =>{\r\n        props.sendEmail()\r\n\r\n        timer.current = setInterval(() => {\r\n            setTimerSeconds((timerSeconds)=>timerSeconds - 1)\r\n        }, 1000)\r\n        setButtonDisabled(true)\r\n        setShowTimer(true)\r\n        }\r\n\r\n    useEffect(\r\n            ()=> {\r\n                if(timerSeconds === 0){\r\n                    clearInterval(timer.current)\r\n                    setButtonDisabled(false)\r\n                    setShowTimer(false)\r\n                    setTimerSeconds(30)\r\n                }\r\n                if(timerSeconds === 20){\r\n                    setShowBadge(false)\r\n                }\r\n            },[timerSeconds])\r\n\r\n    useEffect(()=>{\r\n        if(buttonDisabled === true && props.isFetching === false){\r\n            setShowBadge(true)\r\n        }\r\n    }, [props.isFetching])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n    }, )\r\n\r\n\r\n\r\n\r\n    return(\r\n            <div className={s.confirm_block}>\r\n\r\n                <FormFetching isFetching={props.isFetching}/>\r\n                <h1 className={s.h1}>Подтвердите почту</h1>\r\n\r\n                <p>На адрес <b>{props.email}</b> отправлено письмо с инструкцией для его подтверждения.\r\n                    Письмо действительно 1 час с момента отправки.\r\n                </p>\r\n                <p>\r\n                    Если вы не получили письмо, проверьте папку Спам или запросите\r\n                    новое письмо.\r\n                </p>\r\n                <div className={s.button_cont}>\r\n\r\n                    <Button disabled={buttonDisabled} onClick={()=>{sendMail()}}>Получить новое письмо</Button>\r\n                    {showBadge ?  <div className={s.sent_badge}>Письмо отправлено</div> : ''}\r\n\r\n\r\n                </div>\r\n                <div className={s.timer_p}>\r\n                    {showTimer ? <p >Вы сможете отправить новое письмо<br /> через {timerSeconds} секунд</p> : ''}\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ConfirmEmail","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ConfirmEmail from \"./confirmEmail\"\r\nimport {SendEmail} from '../../../redux/auth-reducer'\r\nimport {compose} from \"redux\";\r\nimport WithSignUpStagePreloader from \"../../../hoc/withAuthStageRedirect\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\nconst ConfirmEmailContainer = (props) =>{\r\n    const [title, setTitle] = useDocTitle('Подтвердиет почту')\r\n\r\n    return(\r\n            <ConfirmEmail email={props.email} sendEmail={props.SendEmail} isFetching={props.isFetching}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        email: state.auth.email,\r\n        isFetching: state.auth.isFetching\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {SendEmail}), WithSignUpStagePreloader)(ConfirmEmailContainer)","import React from \"react\";\r\nimport s from \"./additionalInfo.module.scss\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Button, FormFetching, Input, Textarea} from \"../../common/formControls\";\r\nimport {minLength, required} from \"../../../utils/validation\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n\r\n            <form className={s.profile_form} onSubmit={props.handleSubmit}>\r\n\r\n                <Field name=\"name\" type=\"text\"  component={Input} placeholder=\"Имя\" validate={[required, minLength]}/>\r\n                <Field name=\"soName\" type=\"text\"  component={Input} placeholder=\"Фамилия\" validate={[required, minLength]}/>\r\n                <Field name=\"company\" type=\"text\"  component={Input} placeholder=\"Компания\" />\r\n                <Field name=\"about\" type='text' component={Textarea} placeholder=\"О вас\"  />\r\n                <Button className={s.button} primary  disabled={props.submitting  || (props.invalid && props.anyTouched) || props.isFetching} type='submit'>Отправить</Button>\r\n            </form>\r\n\r\n    )\r\n}\r\nconst ProfileFormReduxForm = reduxForm({form: 'signupProfile-form'})(ProfileForm)\r\n\r\n\r\n\r\n\r\n\r\nconst AdditionalInfo = (props)=>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendAdditionalInfo(values.name, values.soName, values.company, values.about)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.profile_form_wr}>\r\n                <div className={s.email}><p>{props.email}</p></div>\r\n                <div className={s.add_photo_row}>\r\n                    <div className={s.photo_cont} />\r\n                    <p className={s.add_photo}>Добавить фото</p>\r\n                </div>\r\n                <FormFetching isFetching={props.isFetching}/>\r\n                <ProfileFormReduxForm onSubmit={onSubmit}  />\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default AdditionalInfo","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AdditionalInfo from \"./additionalInfo\"\r\nimport {SendAdditionalInfo} from '../../../redux/auth-reducer'\r\nimport WithSignUpStagePreloader from \"../../../hoc/withAuthStageRedirect\";\r\nimport {compose} from \"redux\";\r\nconst AdditionalInfoContainer = (props) =>{\r\n    return(\r\n       <AdditionalInfo isFetching={props.isFetching} email={props.email} sendAdditionalInfo={props.SendAdditionalInfo}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        email: state.auth.email,\r\n        isFetching: state.auth.isFetching\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {SendAdditionalInfo}),  WithSignUpStagePreloader)(AdditionalInfoContainer)","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./success.module.scss\"\r\nimport successImg from '../../../assets/icons/done.svg'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport WithSignUpStagePreloader from \"../../../hoc/withAuthStageRedirect\";\r\nconst Success = () =>{\r\n    const [redirect, setRedirect] = useState(false)\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setRedirect(true)},3000)\r\n    },[])\r\n\r\n\r\n    return(\r\n            <div className={s.successBlock}>\r\n                {redirect && <Redirect to={'/summary'} />}\r\n                <img src={successImg} alt=\"\"/>\r\n                <p>Вы успешно зарегистрировались</p>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default  WithSignUpStagePreloader(Success)","import React, {useEffect} from 'react';\r\nimport s from './signup.module.scss';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {BackGround} from \"../common/background\";\r\nimport RegistrationContainer from \"./registration/registrationContainer\";\r\nimport ConfirmEmailContainer from \"./confirmEmail/confirmEmailContainer\";\r\nimport AdditionalInfoContainer from \"./additionalInfo/additionalInfoContainer\";\r\nimport Success from \"./success/success\";\r\n\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n    let redirectCallBack = () =>{\r\n\r\n        switch (props.regStage){\r\n            case '':{\r\n                return <Redirect to='/signup'/>\r\n            }\r\n            case 'confirm email':{\r\n                return <Redirect to='/signup/confirm_email' />\r\n            }\r\n            case 'additional_information':{\r\n                return <Redirect to='/signup/additional_info' />\r\n            }\r\n            case 'registered':{\r\n                return <Redirect to='/signup/success' />\r\n            }\r\n            default:{\r\n                return <Redirect to='/signup'/>\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <>\r\n            <BackGround />\r\n                <div className=\"fullpage_container\">\r\n                    <div className={s.signup_block}>\r\n                        <Route exact path='/signup' render={()=>(<RegistrationContainer />)}/>\r\n                        <Route exact path='/signup/confirm_email/' render={()=>( <ConfirmEmailContainer />)}/>\r\n                        <Route exact path='/signup/additional_info' render={()=>(<AdditionalInfoContainer /> )} />\r\n                        <Route exact path='/signup/success' render={()=>(<Success />)} />\r\n\r\n                        {props.isInitialized && redirectCallBack()}\r\n\r\n                    </div>\r\n                </div>\r\n                </>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;\r\n\r\n","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst SignUpContainer = (props) => {\r\n\r\n\r\n        return <SignUpBlock regStage={props.regStage} isInitialized={props.isInitialized}/>\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        regStage: state.auth.stage,\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, {})(SignUpContainer)","import React, {useEffect} from 'react';\r\nimport s from \"../newFriends.module.scss\";\r\nimport {Button} from \"../../../../common/formControls\";\r\nimport acceptIcon from '../../../../../assets/icons/accept.svg'\r\nimport dismissIcon from '../../../../../assets/icons/dismiss.svg'\r\nimport loadingButton from '../../../../../assets/icons/loading.svg'\r\nimport ProfileLine from \"../../../../profile/profileLine/profileLine\";\r\n\r\n\r\n\r\nconst Proposal = (props) => {\r\n    let acceptProposal = (userId, buttonId) =>{\r\n        props.acceptProposal(userId)\r\n        props.chanhgeButtonsState(buttonId)\r\n    }\r\n    let denyProposal = (userId, buttonId) =>{\r\n        props.denyProposal(userId)\r\n        props.chanhgeButtonsState(buttonId)\r\n    }\r\n\r\n    let buttonSelector = (userId, buttonId) =>{\r\n\r\n        if(props.buttonsState[buttonId] && props.buttonsState[buttonId].isFetching === false){\r\n            return <div className={s.buttons_row}>\r\n                <Button icon={dismissIcon} onClick={() =>{denyProposal(userId, buttonId)}}>Отказать</Button>\r\n                <Button icon={acceptIcon} onClick={()=>{acceptProposal(userId, buttonId)}}>Принять</Button>\r\n            </div>\r\n        }\r\n        else {\r\n            return <div className={s.loader}><img src={loadingButton} alt=\"\"/></div>\r\n        }\r\n\r\n\r\n    }\r\n    console.log(props)\r\n\r\n\r\n    return  (\r\n            <ProfileLine {...props} _id={props.userId}  buttonsComponent={buttonSelector(props.userId, props.buttonKey)}/>\r\n    )\r\n}\r\n\r\n\r\nexport default Proposal","import React from 'react';\r\nimport s from './newFriends.module.scss';\r\nimport openFolderIcon from '../../../../assets/icons/mail-open.svg'\r\nimport Proposal from \"./proposal/proposal\";\r\n\r\n\r\n\r\nconst NewFriends = (props) => {\r\n\r\n        let proposalsList = []\r\n\r\n\r\n            if(props.proposals !== \"no proposals\"){\r\n                let i = 0\r\n                proposalsList = props.proposals.map((proposal, index)=> <Proposal  {...proposal} {...props} buttonKey={index}/>)\r\n            }else{\r\n                proposalsList = <div className={s.noProposals}>\r\n                    <img src={openFolderIcon} alt=\"\"/>\r\n                    <p>У вас нет заявок</p>\r\n                </div>\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.newFriends}>\r\n                <h2>Заявки в друзья:</h2>\r\n                {proposalsList}\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default NewFriends;","import React from 'react';\r\nimport NewFriends from \"./newFriends\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getProposalsList} from \"../../../../redux/selectors/profileselectors\";\r\nimport {acceptProposal, denyProposal} from \"../../../../redux/profile-reducer\";\r\n\r\nclass NewFriendsContainer extends React.Component{\r\n    state = {\r\n        buttonsState: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(typeof this.props.proposals == 'object'){\r\n            let listButtons = this.props.proposals.map((profile)=> ({isFetching: false}))\r\n            this.setState({buttonsState: listButtons})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            if(typeof this.props.proposals == 'object'){\r\n                let listButtons = this.props.proposals.map((profile)=> ({isFetching: false}))\r\n                this.setState({buttonsState: listButtons})\r\n            }\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyButtonsState = {...this.state.buttonsState}\r\n        copyButtonsState[buttonId].isFetching = true\r\n        this.setState({buttonsState: copyButtonsState})\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n\r\n                <NewFriends proposals={this.props.proposals}\r\n                            acceptProposal={this.props.acceptProposal}\r\n                            denyProposal={this.props.denyProposal}\r\n                            buttonsState={this.state.buttonsState}\r\n                            chanhgeButtonsState={this.changeButtonState}\r\n\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n       proposals: getProposalsList(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { acceptProposal, denyProposal})(NewFriendsContainer);","import React from 'react';\r\nimport s2 from '../friends.module.scss';\r\nimport s from './usersList.module.scss'\r\nimport {Pagination} from \"../../../common/pagination/pagination\";\r\nimport ProfileLine from \"../../../profile/profileLine/profileLine\";\r\nimport {Button} from \"../../../common/formControls\";\r\nimport loadingIcon from \"../../../../assets/icons/loading.svg\"\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\nconst UsersList = (props) => {\r\n    let postProposal = (id, buttonId) => {\r\n        props.postProposal(id, props.currentPage)\r\n        props.changeButtonState(buttonId)\r\n\r\n    }\r\n\r\n    let deleteProposal = (id, buttonId) => {\r\n        props.deleteProposal(id, props.currentPage)\r\n        props.changeButtonState(buttonId)\r\n    }\r\n\r\n\r\n    let buttonSelector = (status, id, buttonId) => {\r\n        if (props.buttonsStates[buttonId] && props.buttonsStates[buttonId].isFetching === false) {\r\n            switch (status) {\r\n                case 'It is you':\r\n                    return\r\n                case 'proposal sent':\r\n                    return <Button onClick={() => {\r\n                        deleteProposal(id, buttonId)\r\n                    }}>Заявка отправлена</Button>\r\n                case 'Your friend':\r\n                    return <div className={s.yourfriend}><p>Ваш друг</p></div>\r\n                case 'plain user':\r\n                    return <Button primary onClick={() => {\r\n                    postProposal(id, buttonId)\r\n                }}>Добавить в друзья</Button>\r\n                default:\r\n                    return\r\n            }\r\n        } else {\r\n            return <div className={s.fetching}><img src={loadingIcon} alt=\"\"/></div>\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let profilesArr = props.profilesList.map((profile, index) =>\r\n            <ProfileLine  {...profile} key={profile._id} buttonsComponent={<div className={s.buttons_cont}>{buttonSelector(profile.friendStatus, profile._id, index)}</div>}/>\r\n    )\r\n\r\n    return (\r\n            <div className={s.usersList}>\r\n                <h2>Список пользователей:</h2>\r\n                <Pagination pages={profilesArr} pageSize={props.pageSize} totalPages={props.totalProfiles}\r\n                            pageChanger={props.getProfilesList} loader={<LoadingProfile/>}\r\n                            getCurrentPage={props.getCurrentPage}/>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default UsersList;","import React from 'react';\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {postProposal, deleteProposal, setProposals, getProfilesList} from \"../../../../redux/profile-reducer\";\r\nimport {selectProfilesList, getTotalProfiles, getPageSize} from \"../../../../redux/selectors/profileselectors\"\r\nclass UsersListContainer extends React.Component{\r\n\r\n    state ={\r\n        listButtons: [],\r\n        profilesList: [],\r\n        currentPage: 1\r\n    }\r\n\r\n\r\n\r\n    getCurrentPage = (currentPage) =>{\r\n        this.setState({currentPage: currentPage})\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyListButtons = {...this.state.listButtons}\r\n        copyListButtons[buttonId].isFetching = true\r\n        this.setState({listButtons: copyListButtons})\r\n    }\r\n\r\n    componentDidMount() {\r\n            let listButtons = this.props.profilesList.map((profile)=> ({isFetching: false}))\r\n            this.setState({listButtons: listButtons})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props !== prevProps){\r\n            this.setState({profilesList: this.props.profilesList})\r\n            for(let i = 0; i < this.state.profilesList.length; i++){\r\n                if(this.state.profilesList[i] && this.props.profilesList[i]){\r\n                    if( this.state.profilesList[i].friendStatus !== this.props.profilesList[i].friendStatus){\r\n                        let copyListButtons = {...this.state.listButtons}\r\n                        copyListButtons[i].isFetching = false\r\n                        this.setState({listButtons: copyListButtons})\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setProposals([])\r\n    }\r\n\r\n    getProfilesList = (page) =>{\r\n        this.props.getProfilesList(page,this.props.pageSize)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <UsersList profilesList={this.props.profilesList}\r\n                           totalProfiles={this.props.totalProfiles}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.state.currentPage}\r\n                           getProfilesList={this.getProfilesList}\r\n                           postProposal={this.props.postProposal}\r\n                           deleteProposal={this.props.deleteProposal}\r\n                           changeButtonState={this.changeButtonState}\r\n                           buttonsStates={this.state.listButtons}\r\n                           getCurrentPage={this.getCurrentPage}\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n      profilesList: selectProfilesList(state),\r\n      totalProfiles: getTotalProfiles(state),\r\n      pageSize: getPageSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {postProposal, deleteProposal, setProposals, getProfilesList})(UsersListContainer);","import React, {useEffect, useState} from 'react';\r\nimport NewFriendsContainer from \"./newFriends/newFriendsContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {FriendsPageLoader} from \"../../common/loadingschemes/loadingSchemes\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\n\r\nimport {clearFriendsPage, getFriendsPage} from \"../../../redux/profile-reducer\";\r\nimport {getTotalProfiles} from \"../../../redux/selectors/profileselectors\";\r\n\r\n\r\nconst FriendsPage = (props) => {\r\n    const [title, setTitle] = useDocTitle('Друзья')\r\n    const [pageState, setPageState] = useState('fetching')\r\n\r\n    useEffect(()=>{\r\n        return( ()=>{\r\n            props.clearFriendsPage()\r\n        })\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getFriendsPage()\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.totalProfiles !== undefined && props.totalProfiles !== '' && pageState === 'fetching'){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.totalProfiles])\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <>\r\n                {pageState === 'fetching' ? <FriendsPageLoader />\r\n                    : <div className=\"container\">\r\n                    <div className=\"h1-block\">\r\n                    <h1 className=\"h1\">Друзья</h1>\r\n                    </div>\r\n                    <p>Добавляйте другие аккаунты в друзья, для совместной работы.</p>\r\n                    <NewFriendsContainer />\r\n                    <UsersListContainer />\r\n                    </div>}\r\n            </>\r\n\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        totalProfiles: getTotalProfiles(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {clearFriendsPage, getFriendsPage}), WithAuthRedirect)(FriendsPage)","import React from \"react\";\r\nimport s from './counterInfo.module.scss'\r\nimport PixelCodeBlock from \"../../pixelcode/pixelCode\";\r\nimport styled from \"styled-components\"\r\n\r\nconst KeyNumbersWr = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nwidth: 100%;\r\nmargin-bottom: 12px;\r\n@media screen and (max-width: 600px) {\r\n  flex-wrap: wrap;\r\n  margin-bottom: 0px;\r\n}\r\n`\r\n\r\nconst KeyNumberBlock = styled.div`\r\nwidth: calc(50% - 6px);\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nheight: 94px;\r\nbackground: #f4f4f4;\r\n@media screen and (max-width: 600px) {\r\n  width: 100%;\r\n  margin-bottom: 12px;\r\n}\r\n`\r\n\r\nconst KeyNumber = styled.div`\r\nwidth: 94px;\r\nheight: 100%;\r\ntext-align: center;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\np{\r\nfont-size: 30px;\r\n\r\n}\r\n\r\n`\r\n\r\nconst KeyNumberName = styled.div`\r\nwidth: calc(100% - 94px);\r\nheight: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: flex-start;\r\n\r\np{\r\npadding-right: 10px;\r\n}\r\n`\r\nconst CounterDesc = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: center;\r\nheight: 52px;\r\nbackground: #f4f4f4;\r\nmargin-bottom: 12px;\r\n`\r\nconst CounterDescLabel = styled.div`\r\nwidth: 160px;\r\np{\r\n    font-size: 16px;\r\n    padding-left: 12px;\r\n    color: #616161;\r\n}\r\n@media screen and (max-width: 500px){\r\n  width: 120px;\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n}\r\n`\r\nconst CounterDescText = styled.div`\r\nwidth: calc(100% - 160px);\r\n@media screen and (max-width: 500px){\r\n  width: calc(100% - 120px);\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst CounterInfo = (props) => {\r\n\r\n    return (\r\n            <>\r\n            <div className=\"container h1-block\"><h1 className=\"h1\">{props.counterInfo.name}</h1></div>\r\n\r\n            <div className=\"container\">\r\n                <div className={`${s.row}  row`}>\r\n\r\n\r\n\r\n                    <div className={`${s.counterInfo} col-6`}>\r\n                        <KeyNumbersWr>\r\n                            <KeyNumberBlock>\r\n                                    <KeyNumber><p>{props.counterInfo.dayusers}</p></KeyNumber>\r\n                                    <KeyNumberName><p>Пользователи за день</p></KeyNumberName>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                    <KeyNumber><p>{props.counterInfo.allusers}</p></KeyNumber>\r\n                                    <KeyNumberName><p>Пользователей всего</p></KeyNumberName>\r\n                            </KeyNumberBlock>\r\n                        </KeyNumbersWr>\r\n\r\n                        <CounterDesc>\r\n                            <CounterDescLabel><p>Id счётчика</p></CounterDescLabel>\r\n                            <CounterDescText><p>{props.counterInfo._id}</p></CounterDescText>\r\n                        </CounterDesc>\r\n\r\n                        <CounterDesc>\r\n                            <CounterDescLabel><p>Адрес счётчика</p></CounterDescLabel>\r\n                            <CounterDescText><p>{props.counterInfo.domen}</p></CounterDescText>\r\n                        </CounterDesc>\r\n\r\n                        <CounterDesc>\r\n                            <CounterDescLabel><p>Владелец</p></CounterDescLabel>\r\n                            <CounterDescText><p>{props.counterInfo.login}</p></CounterDescText>\r\n                        </CounterDesc>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <PixelCodeBlock pixelCode={props.counterInfo.pixelCode} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CounterInfo","import React, {useEffect, useState} from \"react\";\r\nimport CounterInfo from \"./counterInfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst CounterInfoContainer = (props) => {\r\n\r\n\r\n    return <CounterInfo counterId={props.counterId}\r\n                        counterInfo={props.counterInfo}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {})(CounterInfoContainer);","import React from \"react\";\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getTotalUsers} from '../../../../../redux/selectors/counters-selectors'\r\nimport {getMoreUsers} from \"../../../../../redux/counters-reducer\";\r\n\r\n\r\nconst UsersListContainer = (props) => {\r\n\r\n\r\n    return <UsersList  usersList={props.counterUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(UsersListContainer);","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport CounterInfoContainer from \"./counterInfo/counterInfoContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {clearCurrentCounter, getCurrentCounter} from \"../../../../redux/counters-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentCounterUsers, getCurrentCounterInfo} from \"../../../../redux/selectors/counters-selectors\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {CounterPageLoader} from \"../../../../components/common/loadingschemes/loadingSchemes\";\r\nimport {compose} from \"redux\";\r\nimport {useDocTitle} from \"../../../../utils/customHooks\";\r\n\r\nconst CounterPage = (props) =>{\r\n    let {counterId} = useParams()\r\n    const [pageState, setPageState] = useState('fetching')\r\n    const [title, setTitle] = useDocTitle('Счётчик')\r\n\r\n    useEffect(()=>{\r\n        return () =>{\r\n            props.clearCurrentCounter()\r\n        }\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getCurrentCounter(counterId)\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if((props.counterInfo && props.counterInfo.length !== 0) && pageState === 'fetching'){\r\n            setTitle('Счётчик '+props.counterInfo.name)\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.counterInfo])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<CounterPageLoader /> :<><CounterInfoContainer counterInfo={props.counterInfo}\r\n                    counterId={counterId} />\r\n                    <UsersListContainer counterUsers={props.counterUsers}\r\n                    counterId={counterId}/></> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n       counterInfo: getCurrentCounterInfo(state),\r\n       counterUsers: getCurrentCounterUsers(state),\r\n       isInitialized: state.app.isInitialized,\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{getCurrentCounter, clearCurrentCounter}), WithAuthRedirect)(CounterPage);","import React from \"react\";\r\nimport s from './userPage.module.scss'\r\nimport mongoDate from \"../../utils/mongoDate\";\r\nconst UserPage = (props) => {\r\n    let userInfo = props.userInfo\r\n\r\n\r\n\r\n\r\n    let users = []\r\n    let lastDivider = ''\r\n    props.userSessions.forEach((item, index)=>{\r\n        if(item.awayTime && mongoDate(item.awayTime).comparativeDate !== lastDivider){\r\n            lastDivider = mongoDate(item.awayTime).comparativeDate\r\n            users.push({divider: mongoDate(item.awayTime).comparativeDate}, item)\r\n\r\n        }\r\n        else{\r\n            users.push(item)\r\n        }\r\n\r\n    })\r\n    let sessionCount = 0\r\n    users = users.map((user) => {\r\n        if(user.divider) {\r\n            return <div className={s.date_divider}>{user.divider}</div>\r\n        }\r\n        else{\r\n            return <div className={s.session}>\r\n                <span className={s.sessionNumber}>{++sessionCount}</span>\r\n                <div className={s.session_line}>\r\n                    {user.entryTime ? <p className={s.time}>{mongoDate(user.entryTime).time}</p> : <p className={s.notdefined}>Не определено</p>}\r\n                    <div className={s.time_line}></div>\r\n                    {user.awayTime ? <p className={s.time}>{mongoDate(user.awayTime).time}</p> : <p className={s.notdefined}>Не определено</p>}\r\n                </div>\r\n\r\n            </div>}\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n                <>\r\n                <div className=\"container h1-block\">\r\n                    <h1 className='h1'>Пользователь <span className={s.tysId}>{userInfo._id}</span></h1>\r\n                </div>\r\n                <div className='container'>\r\n\r\n\r\n                    <div className={s.row}>\r\n                        <div className={s.block + \" \" + s.col_6}>\r\n\r\n                                <h3 className={s.h3}>Основное:</h3>\r\n\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">URL</label>\r\n                                    <p>{userInfo.referer}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Ip</label>\r\n                                    <p>{userInfo.data.ipInfo.query}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Страна</label>\r\n                                    <p>{userInfo.data.ipInfo.country}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Город</label>\r\n                                    <p>{userInfo.data.ipInfo.city}</p>\r\n                                </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.block + \" \" + s.col_6}>\r\n\r\n                                <h3 className={s.h3}>Посещения:</h3>\r\n                            <div className={s.sessions_cont}>\r\n                                {users}\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.device_info}>\r\n                        <h4 className={s.h4}>Устройство:</h4>\r\n                        <div className={s.row}>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>Браузер</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Имя</label>\r\n                                    <p>{userInfo.data.device.browser.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.browser.version}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Осн. версия</label>\r\n                                    <p>{userInfo.data.device.browser.majorVersion}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>ОС</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Название</label>\r\n                                    <p>{userInfo.data.device.os.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.os.version}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>Об утстройстве</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Производитель</label>\r\n                                    <p>{userInfo.data.device.device.vendor}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Модель</label>\r\n                                    <p>{userInfo.data.device.device.model}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Тип</label>\r\n                                    <p>{userInfo.data.device.device.type}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Процессор</label>\r\n                                    <p>{userInfo.data.device.cpu.architecture}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <section>\r\n                        <h4 className={s.h4}>Расшифровка IP:</h4>\r\n                            <div className={s.row}>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>География</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Код страны</label>\r\n                                        <p>{userInfo.data.ipInfo.countryCode}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Регион</label>\r\n                                        <p>{userInfo.data.ipInfo.regionName}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. широта</label>\r\n                                        <p>{userInfo.data.ipInfo.lat}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. долгота</label>\r\n                                        <p>{userInfo.data.ipInfo.lon}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>Оператор</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Провайдер</label>\r\n                                        <p>{userInfo.data.ipInfo.isp}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Организация</label>\r\n                                        <p>{userInfo.data.ipInfo.org}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">AS</label>\r\n                                        <p>{userInfo.data.ipInfo.as}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>Остальное</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Индекс</label>\r\n                                        <p>{userInfo.data.ipInfo.zip}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Часовой пояс</label>\r\n                                        <p>{userInfo.data.ipInfo.timezone}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                    </section>\r\n                    <section>\r\n                        <h4 className={s.h4}>Заголовки:</h4>\r\n\r\n                        <div className={s.block + \" \" + s.col_12}>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">user_agent</label>\r\n                                <p>{userInfo.data.headers.user_agent}</p>\r\n                            </div>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">accept</label>\r\n                                <p>{userInfo.data.headers.accept}</p>\r\n                            </div>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">languages</label>\r\n                                <p>{userInfo.data.headers.languages}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </section>\r\n                </div>\r\n                    </>\r\n        )\r\n\r\n}\r\n\r\nexport default UserPage","import {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUserInfoFromState = (state) =>{\r\n    return state.users.userInfo\r\n}\r\n\r\nexport const getSessions = (state) =>{\r\n    return state.users.userInfo.sessions\r\n}\r\n\r\nexport const getUserSessionsList = createSelector(getSessions, (sessions) => {\r\n    let getSessions = (sessions) => {\r\n        let sessionsArray = []\r\n        for (let i = 0; sessions.length  > i ; i = i + 2) {\r\n            let nextIndex = i + 1\r\n            let session = ''\r\n\r\n            const makeSessionPare = (enterTime, awayTime) =>{\r\n                return  {\r\n                    entryTime : enterTime,\r\n                    awayTime : awayTime\r\n                }\r\n            }\r\n\r\n            if(sessions[i] && sessions[nextIndex]){\r\n                if(Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"goAwayTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, sessions[nextIndex].goAwayTime)\r\n                }\r\n                else if (Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"entryTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, undefined)\r\n                    i--\r\n                }\r\n            }\r\n            else if (sessions[i]){\r\n                session = makeSessionPare(sessions[i].entryTime,  undefined)\r\n            }\r\n            else {\r\n                session = makeSessionPare(undefined, undefined)\r\n            }\r\n\r\n            sessionsArray.unshift(session)\r\n        }\r\n\r\n\r\n        return sessionsArray\r\n\r\n    }\r\n       if(sessions !== undefined){\r\n           return getSessions(sessions)\r\n       }\r\n       else{\r\n           return ''\r\n       }\r\n\r\n\r\n\r\n})\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport UserPage from \"./userPage\";\r\nimport {clearUserInfo, getUserInfo} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserInfoFromState, getUserSessionsList} from '../../redux/selectors/users-selectors'\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {UserPageLoader} from \"../common/loadingschemes/loadingSchemes\";\r\nimport {useDocTitle} from \"../../utils/customHooks\";\r\n\r\nconst UserPageContainer = (props) =>{\r\n    let {tysId} = useParams()\r\n    const [pageState, setPageState] = useState('fetching')\r\n    const [title, setTitle] = useDocTitle('Пользователь')\r\n\r\n    useEffect(()=>{\r\n        props.getUserInfo(tysId)\r\n\r\n        return () =>{\r\n\r\n            props.clearUserInfo()\r\n        }\r\n    },[])\r\n\r\n     useEffect(()=>{\r\n        if(props.userInfo !== \"\"){\r\n            setPageState(\"main\")\r\n            setTitle('Пользователь ' + props.userInfo.data.ipInfo.city)\r\n        }\r\n    },[props.userInfo])\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<UserPageLoader /> :<UserPage userInfo={props.userInfo}\r\n                                                                      userSessions={props.userSessions}\r\n                                                                      tysId={props.tysId}\r\n                /> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        userInfo: getUserInfoFromState(state),\r\n        userSessions: getUserSessionsList(state)\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{clearUserInfo, getUserInfo}), WithAuthRedirect)(UserPageContainer);","import React from 'react';\r\nimport s from './notFoundPage.module.scss';\r\nimport notFoundGif from '../../../assets/notFound.gif'\r\nimport  {NavLink} from \"react-router-dom\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\n\r\n\r\nconst NotFoundPage = (props) => {\r\n    const [title, setTitle] = useDocTitle('404 - страница не найдена')\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.container}>\r\n                <div className={s.row}>\r\n                    <div className={s.gif_cont}>\r\n                        <img src={notFoundGif} alt=\"\"/>\r\n                    </div>\r\n                    <div className={s.text}>\r\n                        <h1>Упс! Что-то пошло не так</h1>\r\n                        <NavLink to={'/'} >Вернуться на главную страницу</NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default NotFoundPage;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./confirmEmailRef.module.scss\"\r\nimport loading from '../../../assets/icons/loading.svg'\r\nimport {BackGround} from \"../../common/background\";\r\nimport clockImg from '../../../assets/icons/clockError.svg'\r\nimport errorImg from '../../../assets/icons/error.svg'\r\nimport successImg from '../../../assets/icons/done.svg'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nconst FetchingBlock = () =>{\r\n    return(\r\n            <div className={s.fetching_block}>\r\n                <img src={loading} alt=\"\"/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ExpiredBlock = (props) =>{\r\n    return(\r\n            <div className={s.block}>\r\n                <img src={clockImg} alt=\"\"/>\r\n                <p>Прошло больше часа, cсылка больше не действительна. <NavLink to={props.isAuth ? '/signup' : '/login' }>Отправьте</NavLink> новое письмо</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ErrorBlock = () =>{\r\n    return(\r\n            <div className={s.block}>\r\n                <img src={errorImg} alt=\"\"/>\r\n                <p>Ошибка</p>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst SuccessBlock = (props) =>{\r\n    const [redirect, setRedirect] = useState(false)\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setRedirect(true)},3000)\r\n    },[])\r\n\r\n\r\n    return(\r\n            <div className={s.block}>\r\n                {redirect && <Redirect to={props.isAuth ? '/signup' : '/login' } />}\r\n                <img src={successImg} alt=\"\"/>\r\n                <p>Почта успешно подтверждена</p>\r\n                <NavLink to={props.isAuth ? '/signup' : '/login' }>Продолжить регистрацию</NavLink>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst FalseStageBlock = (props) =>{\r\n\r\n\r\n\r\n    return(\r\n\r\n           <Redirect to={props.isAuth ? '/signup' : '/login' } />\r\n            )\r\n\r\n}\r\nconst ConfirmEmailRef = (props) =>{\r\n    const [pageState, setPageState] = useState('fetching')\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.confirmResult !== '' && props.isInitialized){\r\n            setPageState(props.confirmResult)\r\n        }\r\n\r\n    }, [props.confirmResult, props.isInitialized])\r\n    let blockSelector = (pageState) =>{\r\n        switch (pageState) {\r\n            case 'fetching':{\r\n                return <FetchingBlock />\r\n            }\r\n            case 'jwt expired':{\r\n                return <ExpiredBlock {...props}/>\r\n            }\r\n            case 'incorrect token':{\r\n                return  <ErrorBlock />\r\n            }\r\n            case 'false stage':{\r\n                return <FalseStageBlock {...props}/>\r\n            }\r\n            case 'email confirmed':{\r\n                return <SuccessBlock {...props} />\r\n            }\r\n            default:{\r\n                return  <ErrorBlock />\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n            <>\r\n                <BackGround />\r\n                <div className=\"fullpage_container\" >\r\n                    <div className={s.confirm_block}>\r\n                        {blockSelector(pageState)}\r\n                    </div>\r\n                </div>\r\n            </>\r\n    )\r\n}\r\n\r\n\r\nexport default ConfirmEmailRef","import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport ConfirmEmailRef from \"./confirmEmailRef\"\r\nimport {ConfirmEmail} from \"../../../redux/auth-reducer\";\r\nimport {useDocTitle} from \"../../../utils/customHooks\";\r\nconst ConfirmEmailContainerRef = (props) =>{\r\n    let {confirmToken} = useParams()\r\n    const [title, setTitle] = useDocTitle('Подтверждение почты')\r\n    useEffect(()=>{\r\n        props.ConfirmEmail(confirmToken)\r\n    }, [])\r\n\r\n    return(\r\n            <ConfirmEmailRef {...props} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        confirmResult: state.auth.confirmEmailResult,\r\n        isAuth: state.auth.isAuth,\r\n        isInitialized: state.app.isInitialized\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {ConfirmEmail})(ConfirmEmailContainerRef)","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\n\nimport SideBarContainer from \"./components/sidebar/sidebarContainer\";\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport  {Route, Switch} from \"react-router-dom\";\nimport ProfileSettings from \"./components/content/settings/profilesettings\";\nimport LoginContainer from \"./components/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/signup/signupContainer\"\nimport FriendsPage from \"./components/content/friends/friends\";\nimport CounterPage from \"./components/content/counters/counterPage/counterPage\";\nimport {InitializingApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nimport UserPageContainer from \"./components/userPage/userPageContainer\";\nimport NotFoundPage from \"./components/content/notFoundPage/notFoundPage\";\nimport {getMenuState} from \"./redux/selectors/app-selectors\";\nimport ConfirmEmailContainerRef from './components/signup/confirmEmailRef/confirmEmailRefContainer'\nimport {compose} from \"redux\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.InitializingApp()\n    }\n\n\n    render (){\n        return <div className=\"app-wrapper\">\n\n            <div className=\"row\">\n\n                <SideBarContainer />\n                <div className={this.props.menuState === \"collapsed\" ? \"content\" : \"content sidebar_closed\"}>\n                    <Switch>\n                    <Route exact path='/'  render={ () => <Summary  /> } />\n                    <Route  path='/summary'  render={ () => <Summary  /> } />\n                    <Route  path='/counter/:counterId' render={()=> <CounterPage />} />\n                    <Route  path='/counters/' render={() => <Counters />}/>\n                    <Route  path='/audiences' render={() => <Audiences />} />\n                    <Route  path='/profile' render={() => <ProfileContainer />} />\n                    <Route  path='/profilesettings' render={() => <ProfileSettings />} />\n                    <Route  path='/login'  render={()=> <LoginContainer />} />\n                    <Route  path='/signup' render={()=> <SignUpContainer />} />\n                    <Route  path='/friends' render={()=> <FriendsPage />} />\n                    <Route  path='/users/:tysId' render={()=><UserPageContainer />} />\n                    <Route  path='/auth/confirmemail/:confirmToken' render={()=><ConfirmEmailContainerRef />} />\n                    <Route path='*' render={()=><NotFoundPage />} />\n                    </Switch>\n            </div>\n\n\n\n            </div>\n        </div>\n    }\n}\n\n\nlet mapStateToProps = (state) =>{\n    return{\n        menuState: getMenuState(state)\n    }\n}\n\n\nexport default compose(connect(mapStateToProps, {InitializingApp}))(App)\n\n\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {CookiesProvider} from \"react-cookie\";\n\n\n\n    ReactDOM.render(\n            <CookiesProvider>\n                <BrowserRouter>\n                    <Provider store={store}>\n                        <App  />\n                    </Provider>\n                </BrowserRouter>\n            </CookiesProvider> ,\n            document.getElementById('root')\n            );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_row\":\"userPage_label_row__2k2Vo\",\"sessions_cont\":\"userPage_sessions_cont__KgoZv\",\"h4\":\"userPage_h4__1uA9A\",\"h3\":\"userPage_h3__19Kt-\",\"main_info\":\"userPage_main_info__G48F6\",\"visits\":\"userPage_visits__32s7Y\",\"session_line\":\"userPage_session_line__1H_I5\",\"session\":\"userPage_session__2cKEr\",\"time\":\"userPage_time__1uscj\",\"notdefined\":\"userPage_notdefined__9FmxH\",\"time_line\":\"userPage_time_line__20dSP\",\"date_divider\":\"userPage_date_divider__x2Thq\",\"col_head\":\"userPage_col_head__2HiGw\",\"block\":\"userPage_block__1Liia\",\"col_4\":\"userPage_col_4__2FpHk\",\"col_6\":\"userPage_col_6__rdc5i\",\"col_12\":\"userPage_col_12__1_pxn\",\"row\":\"userPage_row__2I3SL\",\"tysId\":\"userPage_tysId__3Sf4D\"};","module.exports = __webpack_public_path__ + \"static/media/done.5cdbb761.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"registration_signup_form__1rTS6\",\"h1\":\"registration_h1__2ee7D\",\"button\":\"registration_button__CCRom\",\"dont_reg_yet\":\"registration_dont_reg_yet__Z8snA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__16JBJ\",\"h1\":\"login_h1__3ESmW\",\"login_block\":\"login_login_block__1-ppr\",\"form_danger_wr\":\"login_form_danger_wr__2TBsQ\",\"false_alert\":\"login_false_alert__2Nsrs\",\"dont_reg_yet\":\"login_dont_reg_yet__3izGu\",\"form_danger\":\"login_form_danger__1VOU1\",\"success_auth\":\"login_success_auth__kHwsz\",\"login_container\":\"login_login_container__3W4YV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_form_wr\":\"additionalInfo_profile_form_wr__3KlKd\",\"profile_form\":\"additionalInfo_profile_form__1Ljne\",\"button\":\"additionalInfo_button__2_mHk\",\"photo_cont\":\"additionalInfo_photo_cont__2FxNC\",\"add_photo_row\":\"additionalInfo_add_photo_row__1ykN-\",\"email\":\"additionalInfo_email__3SBDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__1Nria\",\"name\":\"shortcounter_name__Xmzxi\",\"domen\":\"shortcounter_domen__2aB4J\",\"dayusers\":\"shortcounter_dayusers__RFuyn\",\"totalusers\":\"shortcounter_totalusers__CL71_\",\"owner\":\"shortcounter_owner__8oobN\"};","module.exports = __webpack_public_path__ + \"static/media/profile.7918bc4f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons_row\":\"newFriends_buttons_row__3-3mN\",\"deny\":\"newFriends_deny__3K3pu\",\"accept\":\"newFriends_accept__3LPkM\",\"newFriends\":\"newFriends_newFriends__2yA7G\",\"noProposals\":\"newFriends_noProposals__2fruI\",\"loader\":\"newFriends_loader__3dx1g\",\"fetching\":\"newFriends_fetching__g0kq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirm_block\":\"confirmEmail_confirm_block__3iWdR\",\"h1\":\"confirmEmail_h1__3008x\",\"timer_p\":\"confirmEmail_timer_p__3wVea\",\"button_cont\":\"confirmEmail_button_cont__O_QhP\",\"sent_badge\":\"confirmEmail_sent_badge__5Js7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirm_block\":\"confirmEmailRef_confirm_block__iKwAm\",\"fetching_block\":\"confirmEmailRef_fetching_block__3YPuB\",\"rotation\":\"confirmEmailRef_rotation__3rA26\",\"block\":\"confirmEmailRef_block__1FjVQ\"};","module.exports = __webpack_public_path__ + \"static/media/add.9962b909.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load_more\":\"friends_load_more__1n_q4\",\"loading_profile\":\"friends_loading_profile__1FXAw\",\"loading\":\"friends_loading__2kSgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeTextarea\":\"pixelCode_codeTextarea__1GDi0\",\"codeBlock\":\"pixelCode_codeBlock__sU4e9\",\"copyButton_wr\":\"pixelCode_copyButton_wr__1tPxw\",\"copied_label\":\"pixelCode_copied_label__32fvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_button\":\"pagination_page_button__32Qa8\",\"current_page\":\"pagination_current_page__2apnm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__6aVJ9\",\"photo_col\":\"yourprofile_photo_col__oVu2R\",\"info_col\":\"yourprofile_info_col__5n6V8\",\"info_inputs\":\"yourprofile_info_inputs__29An4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"usersList_add_button__37PFy\",\"usersList\":\"usersList_usersList__197qN\",\"buttons_cont\":\"usersList_buttons_cont__2aAMZ\",\"fetching\":\"usersList_fetching__1oSNA\",\"yourfriend\":\"usersList_yourfriend__2pvAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"notFoundPage_container__2LUC0\",\"row\":\"notFoundPage_row__1Pa91\",\"gif_cont\":\"notFoundPage_gif_cont__2Wf2s\",\"text\":\"notFoundPage_text__6yf2N\"};","module.exports = __webpack_public_path__ + \"static/media/plus.a6e975ca.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_container\":\"signup_signup_container__18j6I\",\"signup_block\":\"signup_signup_block__3H-Nl\",\"fetching_block\":\"signup_fetching_block__1iBRr\",\"rotation\":\"signup_rotation__3rDj0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flag\":\"usersList_flag__2GSHq\",\"flag-AD\":\"usersList_flag-AD__28-Ld\",\"flag-AE\":\"usersList_flag-AE__-Tvo4\",\"flag-AG\":\"usersList_flag-AG__3hY5f\",\"flag-AM\":\"usersList_flag-AM__w92z3\",\"flag-AR\":\"usersList_flag-AR__iDlvg\",\"flag-AT\":\"usersList_flag-AT__1F4KS\",\"flag-AU\":\"usersList_flag-AU__2BQBr\",\"flag-BE\":\"usersList_flag-BE__u-KjT\",\"flag-BF\":\"usersList_flag-BF__30Pnv\",\"flag-BG\":\"usersList_flag-BG__3E-M9\",\"flag-BO\":\"usersList_flag-BO__3oA8e\",\"flag-BR\":\"usersList_flag-BR__1rqh-\",\"flag-CA\":\"usersList_flag-CA__AckMB\",\"flag-CD\":\"usersList_flag-CD__3aUbU\",\"flag-CG\":\"usersList_flag-CG__13pgd\",\"flag-CH\":\"usersList_flag-CH__2L8EY\",\"flag-CL\":\"usersList_flag-CL__ECGkc\",\"flag-CM\":\"usersList_flag-CM__1ZjFS\",\"flag-CN\":\"usersList_flag-CN__28Kt9\",\"flag-CO\":\"usersList_flag-CO__kszHI\",\"flag-CZ\":\"usersList_flag-CZ__3s1gU\",\"flag-DE\":\"usersList_flag-DE__HWnJh\",\"flag-DJ\":\"usersList_flag-DJ__3IFAb\",\"flag-DK\":\"usersList_flag-DK__20-GX\",\"flag-DZ\":\"usersList_flag-DZ__2guVT\",\"flag-EE\":\"usersList_flag-EE__3SD-O\",\"flag-EG\":\"usersList_flag-EG__Zw2gT\",\"flag-ES\":\"usersList_flag-ES__3Mvgx\",\"flag-FL\":\"usersList_flag-FL__3UviB\",\"flag-FR\":\"usersList_flag-FR__Sc6R8\",\"flag-GA\":\"usersList_flag-GA__3N5wF\",\"flag-GB\":\"usersList_flag-GB__QDFE0\",\"flag-GM\":\"usersList_flag-GM__2ZYP_\",\"flag-GT\":\"usersList_flag-GT__R20cv\",\"flag-HN\":\"usersList_flag-HN__SG8HZ\",\"flag-HT\":\"usersList_flag-HT__2gLUp\",\"flag-HU\":\"usersList_flag-HU__1np09\",\"flag-ID\":\"usersList_flag-ID__3sv_I\",\"flag-IE\":\"usersList_flag-IE__6D5k6\",\"flag-IL\":\"usersList_flag-IL__3j7eI\",\"flag-IN\":\"usersList_flag-IN__2lSnm\",\"flag-IQ\":\"usersList_flag-IQ__3sBmG\",\"flag-IR\":\"usersList_flag-IR__f7dHv\",\"flag-IT\":\"usersList_flag-IT__1W8ex\",\"flag-JM\":\"usersList_flag-JM__3j6Pm\",\"flag-JO\":\"usersList_flag-JO__3AezU\",\"flag-JP\":\"usersList_flag-JP__r5fM4\",\"flag-KG\":\"usersList_flag-KG__SY17J\",\"flag-KN\":\"usersList_flag-KN__1SC6n\",\"flag-KP\":\"usersList_flag-KP__36V4l\",\"flag-KR\":\"usersList_flag-KR__HxNFj\",\"flag-KW\":\"usersList_flag-KW__1s10H\",\"flag-KZ\":\"usersList_flag-KZ__3deke\",\"flag-LA\":\"usersList_flag-LA__kcv1W\",\"flag-LB\":\"usersList_flag-LB__3E8KO\",\"flag-LC\":\"usersList_flag-LC__1d3_w\",\"flag-LS\":\"usersList_flag-LS__117IC\",\"flag-LU\":\"usersList_flag-LU__1qrf8\",\"flag-LV\":\"usersList_flag-LV__3zU9I\",\"flag-MG\":\"usersList_flag-MG__t-CXg\",\"flag-MK\":\"usersList_flag-MK__vPOkL\",\"flag-ML\":\"usersList_flag-ML__36g1u\",\"flag-MM\":\"usersList_flag-MM__28dSo\",\"flag-MT\":\"usersList_flag-MT__2-Yrc\",\"flag-MX\":\"usersList_flag-MX__wzUa1\",\"flag-NA\":\"usersList_flag-NA__3kCAp\",\"flag-NE\":\"usersList_flag-NE__27h7N\",\"flag-NG\":\"usersList_flag-NG__3db0b\",\"flag-NI\":\"usersList_flag-NI__35LU0\",\"flag-NL\":\"usersList_flag-NL__SCdSk\",\"flag-NO\":\"usersList_flag-NO__3Uy0z\",\"flag-OM\":\"usersList_flag-OM__1bqbs\",\"flag-PA\":\"usersList_flag-PA__1vtN-\",\"flag-PE\":\"usersList_flag-PE__1WaE3\",\"flag-PG\":\"usersList_flag-PG__1Rn6z\",\"flag-PK\":\"usersList_flag-PK__3hHpS\",\"flag-PL\":\"usersList_flag-PL__2SJC2\",\"flag-PT\":\"usersList_flag-PT__4j0by\",\"flag-PY\":\"usersList_flag-PY__1I_VY\",\"flag-QA\":\"usersList_flag-QA__3k-bO\",\"flag-RO\":\"usersList_flag-RO__2LJX3\",\"flag-RU\":\"usersList_flag-RU__2UisT\",\"flag-RW\":\"usersList_flag-RW__3ucM_\",\"flag-SA\":\"usersList_flag-SA__RBhxn\",\"flag-SE\":\"usersList_flag-SE__2NYyw\",\"flag-SG\":\"usersList_flag-SG__38Sbp\",\"flag-SL\":\"usersList_flag-SL__1ql1t\",\"flag-SN\":\"usersList_flag-SN__3xhNv\",\"flag-SO\":\"usersList_flag-SO__3OvPT\",\"flag-SV\":\"usersList_flag-SV__sc9e8\",\"flag-TD\":\"usersList_flag-TD__PJirO\",\"flag-TJ\":\"usersList_flag-TJ__32Ew_\",\"flag-TL\":\"usersList_flag-TL__svnVy\",\"flag-TR\":\"usersList_flag-TR__2xcu_\",\"flag-TZ\":\"usersList_flag-TZ__11_a1\",\"flag-UA\":\"usersList_flag-UA__2W8Z3\",\"flag-US\":\"usersList_flag-US__3rCFU\",\"flag-VE\":\"usersList_flag-VE__9EUPl\",\"flag-VN\":\"usersList_flag-VN__NOtmd\",\"flag-YE\":\"usersList_flag-YE__2d5wR\"};"],"sourceRoot":""}