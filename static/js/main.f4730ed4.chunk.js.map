{"version":3,"sources":["components/common/loadingschemes/loadingschemes.module.scss","assets/icons/small-loading.svg","components/profile/profilesettings/yourFriends/yourFriends.module.scss","components/profile/friends/usersList/usersList.module.scss","components/content/counters/counterPage/counterInfo/counterInfo.module.scss","components/sidebar/sidebar.module.scss","assets/icons/menu/hamburger.svg","assets/icons/menu/summary.svg","assets/icons/menu/eye.svg","assets/icons/menu/friend.svg","assets/icons/menu/settings.svg","assets/icons/menu/short-menu.svg","assets/icons/menu/profile.svg","assets/icons/os/android.svg","assets/icons/os/windows.svg","assets/icons/os/apple.svg","assets/icons/os/macos.svg","assets/icons/os/linux.svg","assets/icons/os/undefined.svg","assets/icons/emptyUsers.svg","assets/icons/loading.svg","components/content/audiences/audienceslist/audienceslist.module.scss","assets/icons/users.svg","assets/summary-bg.jpg","assets/icons/mail-open.svg","assets/notFound.gif","components/common/common.module.scss","components/profile/friends/friends.module.scss","components/content/counters/countersLists/counterslist.module.scss","assets/icons/menu/auditories.svg","components/profile/signup/signup.module.scss","components/content/counters/addcounter/addcounter.module.scss","serviceWorker.js","api/counters-api.js","api/users-api.js","redux/counters-reducer.js","redux/audiences-reducer.js","api/summary-api.js","redux/selectors/summary-selectors.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/app-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","redux/selectors/app-selectors.js","redux/selectors/profileselectors.js","components/sidebar/sidebarContainer.jsx","utils/mongoDate.js","components/common/formControls.jsx","components/common/loadMore.jsx","components/content/counters/counterPage/usersList/usersList.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","hoc/withAuthRedirect.js","components/common/loadingschemes/loadingSchemes.jsx","components/content/summary/summary.jsx","utils/validation.js","components/content/counters/pixelcode/pixelCode.jsx","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","redux/selectors/counters-selectors.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/countersLists/shortcounter/shortcounter.jsx","components/common/pagination/pagination.jsx","components/content/counters/countersLists/yourCounters/yourCountersList.jsx","components/content/counters/countersLists/yourCounters/yourCountersListContainer.jsx","components/content/counters/countersLists/friendsCounters/friendsCountersList.jsx","components/content/counters/countersLists/friendsCounters/friendsCountersListContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","utils/textTransformation.js","components/common/editinput.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/yourFriends/yourFriends.jsx","components/profile/profilesettings/yourFriends/yourFriendsContainer.jsx","components/profile/profilesettings/profilesettings.jsx","components/common/background.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","components/profile/friends/newFriends/newFriends.jsx","components/profile/friends/newFriends/newFriendsContainer.jsx","components/profile/friends/usersList/usersList.jsx","components/profile/friends/usersList/usersListContainer.jsx","components/profile/friends/friends.jsx","components/content/counters/counterPage/counterInfo/counterInfo.jsx","components/content/counters/counterPage/counterInfo/counterInfoContainer.jsx","components/content/counters/counterPage/usersList/usersListContainer.jsx","components/content/counters/counterPage/counterPage.jsx","components/userPage/userPage.jsx","redux/selectors/users-selectors.js","components/userPage/userPageContainer.jsx","components/content/NotFoundPage/notFoundPage.jsx","App.js","index.js","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/profile/login/login.module.scss","components/userPage/userPage.module.scss","components/profile/friends/newFriends/newFriends.module.scss","components/content/counters/countersLists/shortcounter/shortcounter.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","assets/icons/h1-block/add.svg","assets/icons/done.svg","components/content/counters/pixelcode/pixelCode.module.scss","components/common/pagination/pagination.module.scss","components/content/NotFoundPage/notFoundPage.module.scss","assets/icons/plus.svg","components/content/counters/counterPage/usersList/usersList.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","baseURL","countersAPI","data","post","headers","store","getState","auth","token","then","response","catch","error","console","warn","page","limit","get","params","counterId","usersAPI","tysId","initialState","pageSize","pixelCode","yourCounters","counterslistData","totalCounters","friendsCounters","currentCounter","counterInfo","counterUsers","totalUsers","addCounter","counterData","type","setYourCounters","countersData","setYourTotalCounters","setFriendsCounters","setFriendsTotalCounters","countersReducer","state","action","newCounter","id","_id","name","domen","dayusers","allusers","status","items","totalDocs","usersPage","users","audiencelistData","description","counters","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","inputName","value","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","summaryAPI","graphicArr","getSummaryInfo","summaryPage","summaryInfo","getSummaryGraphic","graphicData","getSummaryUsers","summaryUsers","getPageSize","getTotalUsers","dayUsers","dayClicks","summaryReducer","clicks","profileAPI","put","proposals","profileActionsAPI","userId","delete","soName","company","avatar","totalProfiles","undefined","profilesList","friendsList","totalFriends","deletedFriend","setProfileInfo","setProposals","setFriendsList","friends","getProposals","dispatch","a","getProfilesList","count","totalPages","profileReducer","friendId","avatarData","authedInstance","authAPI","email","password","signUpAPI","login","profileId","regDate","isAuth","isFetching","signUpState","setProfileData","authProfileData","setToken","toggleIsFetching","setSignUpState","authReducer","isInitialized","menuState","appReducer","userInfo","usersReducer","reducers","combineReducers","countersPage","audiencePage","profilePage","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","Sidebar","props","className","s","sidebar","sidebar_closed","sidebar_top","logo","hamburger","onClick","toggleMenuState","src","hamburgerIcon","alt","sidebar_menu","onMouseOver","onmouseover","onMouseOut","onmouseout","to","activeClassName","active","link_item","menu_icon","summaryIcon","eyeIcon","friendsIcon","settingsIcon","profile_cont","shortMenuIcon","logout","fetching","avatar_loader","none","uploaded","profileIcon","user_login","login_loader","login_wr","profileLogin","getMenuState","selectProfilesList","getTotalProfiles","getProposalsList","getFriends","getTotalFriends","getDeletedFriend","getAvatarSelector","connect","deleteProfileData","getAvatar","useCookies","removeCookie","useState","sideBarVisibility","setSideBarVisibility","profileBlockState","setProfileBlockState","pageName","useLocation","useEffect","pathname","mongoDate","inputDate","d","Date","dateNow","dateFormatter","Intl","DateTimeFormat","timeFormatter","hour","minute","millieSecondsCompare","firstDate","secondDate","comparativeDate","now","parse","getHours","getMinutes","getSeconds","getMilliseconds","format","date","time","seconds","Input","input","meta","placeholder","input_wr","touched","danger","input_danger","Textarea","textareaRef","useRef","current","style","height","scrollHeight","textarea_wr","ref","cols","rows","PasswordScoreInput","strengthValue","strengthText","password_strength","ButtonStyled","styled","button","primary","DisabledStyled","span","Button","disabled","LoadMoreButton","LoadMoreComponent","pagesCount","Math","ceil","pages","inizialized","currentPage","changePage","LoadMore","initialized","setState","pageChanger","getCurrentPage","loaders","pagesSelector","emptyBlock","prevProps","prevState","snapshot","push","loader","React","Component","Time","div","Sessions","Referrer","City","Country","Os","ShortUserLine","NavLink","LoadingUser","ListDivider","Visits","NoUsersBlock","NoUsers","NoUsersIcon","ShortUser","shortUser","sessions","referrer","flag","country","city","os","AndroidIcon","WindowsIcon","iOSIcon","MacOsIcon","LinuxIcon","UndefinedOsIcon","selectOsIcon","UsersList","usersList","lastDivider","forEach","item","index","divider","map","user","key","sessionsNumber","getMoreUsers","Col","ColInfo","show","css","ColBlock","ColWr","ColTime","p","ColNumber","ColTimesRow","ColDay","Graphiccol","colheight","colHeight","infoState","setInfoState","e","innerWidth","clientX","changeInfoState","colValue","colData","GraphicWr","GraphicColsWR","GraphicBottom","GraphicName","h2","hide","NowP","Hours24P","Hours48P","NowDot","Hours24Dot","Hours48Dot","memo","hideH","setHideH","hRef","maxUsersCount","coldata","usersCount","max","apply","graphicColElements","onMouseLeave","onMouseMove","getBoundingClientRect","x","width","changeHState","KeyNumbersWr","KeyNumberBlock","KeyNumberContent","KeyNumberName","KeyNumber","Daystat","graphicInfo","mapStateToProps","WithAuthRedirect","CountersListLoader","counters_h1","h1","elem","add_counter","counters_table_head","list_ul","page_buttons","page_button","margin_55px","CounterPageLoader","counterpage_row","counter_left","counter_key_numbers","counter_key_number","counter_desc","code_block","load_more_bottom","FriendsPageLoader","loading_scheme","text_line","list","big_ul","SummaryPageLoader","day_stat_row","day_stat","graphic","UserPageLoader","user_stat_row","user_main_block","user_h3","user_blocks_row","user_block","user_block_col_12","getSummaryData","Promise","all","clearSummaryData","pageState","setPageState","required","checkLogin","test","checkEmail","checkPassword","passwordsMatch","allValues","PixelCodeBlock","copySuccess","setCopySuccess","textAreaRef","codeBlock","target","select","codeTextarea","copyButton_wr","document","execCommand","focus","setTimeout","copied_label","SendButton","AddCounterReduxForm","reduxForm","addcounter_form","onSubmit","handleSubmit","form_danger","loading_bar","Field","component","validate","submitting","invalid","anyTouched","FetchingForm","form_fetching","loader_icon","Addcounterblock","values","postCounter","counterDomen","row","blockState","text","last_text","makeOneMore","textSelector","blockSelector","getPixelCode","getCurrentCounterInfo","getCurrentCounterUsers","getYourCounters","getYourTotalCounters","getFriendsCounters","getFriendsTotalCounters","reset","setBlockState","log","Addcounterbutton","addIcon","Addcounter","exact","path","render","Shortcounter","short_counter","owner","PaginationComponent","pagesButtonsElements","current_page","pages_buttons","Loader","Pagination","LoadingCounter","loading_counter","EmptyBlock","noCounters","plus","YourCountersList","countersElement","countersListData","firstLoader","table_head","list_head","YourCountersListContainer","changeYourCounters","FriendsCountersList","FriendsCountersListContainer","changeFriendsCounters","getCounters","clearCountersLists","Addaudienceblock","clicked","event","deleteCounter","getAttribute","countersOptionsElements","countersSelect","countersElements","audience_badge","counterid","version","viewBox","xmlns","fill","name_input","createRef","description_input","counters_select","add_form","onChange","reloadInput","nameInput","descriptionName","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","offsetText","textarr","split","isUrl","lineNumber","line","wordNumber","href","EditInput","inputText","inputEditMode","wasUpdated","changeCondition","inputState","putInfo","reloadNameInput","currentTarget","withedit_block","loadingImg","done_check","doneImg","onBlur","autoFocus","withedit_current","EditTextarea","wrap","YourProfile","photo_col","photo_wr","info_col","info_inputs","putProfileInfo","YourProfileContainer","getProfileInfo","newInfo","LoadingProfile","s2","loading_profile","NoFriends","noFriends","friendIcon","YourFriends","buttonSelector","buttonId","delete_button","deleteFriend","friend","names_row","description_p","yourFriends","addToFriendsList","YourFriendsContainer","changeButtonState","copyFriends","listButtons","deleteFriendLocal","friendsCopy","getFriendsList","friendsFetching","addFriendsList","friendsPage","message","BackGround","background","SuccessForm","redirect","setRedirect","success_auth","LoginReduxForm","form_danger_wr","dont_reg_yet","LoginBlock","login_block","sendLoginRequest","emailInput","passwordInput","LoginContainer","loginThunkCreator","cookie","stopSubmit","_error","Profile","ProfileContainer","SignUpReduxForm","SignUpFormBlock","signup_form","sendSignUpRequest","ProfileFormReduxForm","profile_form","ProfileFormBlock","profile_form_wr","add_photo_row","photo_cont","add_photo","SignUpBlock","signup_block","SignUpContainer","signUpThunkCreator","NewFriends","proposalsList","buttonsState","buttons_row","deny","denyProposal","chanhgeButtonsState","accept","acceptProposal","proposal","noProposals","openfolder","newFriends","NewFriendsContainer","copyButtonsState","profile","buttonsStates","deleteProposal","postProposal","add_button","profilesArr","toString","friendStatus","UsersListContainer","copyListButtons","CounterDesc","CounterDescLabel","CounterDescText","CounterInfo","getCurrentCounter","setCurrentCounter","clearCurrentCounter","useParams","UserPage","userSessions","awayTime","sessionCount","date_divider","session","sessionNumber","session_line","entryTime","notdefined","time_line","block","col_6","h3","label_row","referer","ipInfo","query","sessions_cont","device_info","h4","col_4","col_head","device","browser","majorVersion","vendor","model","cpu","architecture","countryCode","regionName","lat","lon","isp","org","as","zip","timezone","col_12","user_agent","languages","getUserInfoFromState","getUserSessionsList","createSelector","sessionsArray","nextIndex","makeSessionPare","enterTime","Object","keys","goAwayTime","unshift","getSessions","clearUserInfo","getUserInfo","NotFoundPage","container","gif_cont","notFoundGif","App","InitializingApp","promise","getCookie","matches","RegExp","replace","decodeURIComponent","getAuth","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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":"static/js/main.f4730ed4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"loadingschemes_elem__Vvy4K\",\"loadingScheme\":\"loadingschemes_loadingScheme__2H65q\",\"add_button\":\"loadingschemes_add_button__3Rt3y\",\"counters_table_head\":\"loadingschemes_counters_table_head__2xwjR\",\"list_ul\":\"loadingschemes_list_ul__2wBKu\",\"page_buttons\":\"loadingschemes_page_buttons__2rBD2\",\"page_button\":\"loadingschemes_page_button__2qBLO\",\"text_line\":\"loadingschemes_text_line__2a9ay\",\"big_ul\":\"loadingschemes_big_ul__3lqIE\",\"list\":\"loadingschemes_list__BEqmK\",\"h2\":\"loadingschemes_h2__2Qxm2\",\"h1\":\"loadingschemes_h1__2d1I_\",\"day_stat_row\":\"loadingschemes_day_stat_row__2XYsd\",\"day_stat\":\"loadingschemes_day_stat__R9ia1\",\"graphic\":\"loadingschemes_graphic__LIDK2\",\"load_more_bottom\":\"loadingschemes_load_more_bottom__12O4I\",\"user_stat_row\":\"loadingschemes_user_stat_row__11-LX\",\"user_main_block\":\"loadingschemes_user_main_block__fDsnk\",\"user_h3\":\"loadingschemes_user_h3__3aUCk\",\"user_blocks_row\":\"loadingschemes_user_blocks_row__GJOPh\",\"user_block\":\"loadingschemes_user_block__QqJhC\",\"user_block_col_12\":\"loadingschemes_user_block_col_12__3156G\",\"counters_h1\":\"loadingschemes_counters_h1__3XU5D\",\"add_counter\":\"loadingschemes_add_counter__KnT8N\",\"margin_55px\":\"loadingschemes_margin_55px__2G-u7\",\"counter_left\":\"loadingschemes_counter_left__2-Ep-\",\"counter_key_numbers\":\"loadingschemes_counter_key_numbers__35sqa\",\"counter_key_number\":\"loadingschemes_counter_key_number__3KGBM\",\"counter_desc\":\"loadingschemes_counter_desc__1bETr\",\"code_block\":\"loadingschemes_code_block__P_LU-\",\"counterpage_row\":\"loadingschemes_counterpage_row__2XDx6\"};","module.exports = __webpack_public_path__ + \"static/media/small-loading.371c3637.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"yourFriends_delete_button__1bT4Z\",\"yourFriends\":\"yourFriends_yourFriends__3yW1r\",\"noFriends\":\"yourFriends_noFriends__13UPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"usersList_add_button__2fVWQ\",\"usersList\":\"usersList_usersList__2v1uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"counterInfo_names__Mts4J\",\"id\":\"counterInfo_id__2FRUp\",\"name\":\"counterInfo_name__1Da7N\",\"counterInfo\":\"counterInfo_counterInfo__3ssjo\",\"domen\":\"counterInfo_domen__1rZ-Z\",\"results\":\"counterInfo_results__3RGfx\",\"dayusers\":\"counterInfo_dayusers__10wzY\",\"allusers\":\"counterInfo_allusers__3L6Rh\",\"row\":\"counterInfo_row__3MA8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"backdrop_filter\":\"sidebar_backdrop_filter__1Z49B\",\"sidebar_closed\":\"sidebar_sidebar_closed__1ZL1V\",\"logo\":\"sidebar_logo__2Z-nV\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\",\"link_item\":\"sidebar_link_item__KDcsE\",\"active\":\"sidebar_active__3Sfny\",\"menu_icon\":\"sidebar_menu_icon__k-nvb\",\"avatar\":\"sidebar_avatar__zQw3u\",\"uploaded\":\"sidebar_uploaded__mNf7i\",\"none\":\"sidebar_none__2QA47\",\"avatar_loader\":\"sidebar_avatar_loader__2A75I\",\"loadingScheme\":\"sidebar_loadingScheme__2WGFy\",\"login_loader\":\"sidebar_login_loader__1nXjv\",\"login_wr\":\"sidebar_login_wr__3OYQC\",\"profile_cont\":\"sidebar_profile_cont__LnmQi\",\"empty_img\":\"sidebar_empty_img__PrQev\",\"user_login\":\"sidebar_user_login__3oBZN\",\"sidebar_top\":\"sidebar_sidebar_top__2t6gY\",\"hamburger\":\"sidebar_hamburger__3ytg7\"};","module.exports = __webpack_public_path__ + \"static/media/hamburger.8a529ed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary.ea33d762.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.a165d003.svg\";","module.exports = __webpack_public_path__ + \"static/media/friend.d29028be.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.b376bf7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/short-menu.e1c4065d.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.7918bc4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/android.36571833.svg\";","module.exports = __webpack_public_path__ + \"static/media/windows.9ca90a4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple.0c0e528a.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.6ac68ad4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.a000e4fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/undefined.66a30df1.svg\";","module.exports = __webpack_public_path__ + \"static/media/emptyUsers.c7042294.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.973560ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","module.exports = __webpack_public_path__ + \"static/media/users.7ba66cd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary-bg.e717e35f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mail-open.6a43bbb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/notFound.24f1671b.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withedit_current\":\"common_withedit_current__3mFwP\",\"withedit_block\":\"common_withedit_block__11_W2\",\"plain_input\":\"common_plain_input__3zzxU\",\"plain_textarea\":\"common_plain_textarea__237u6\",\"loading_bar\":\"common_loading_bar__TjjZG\",\"loading\":\"common_loading__2aPGq\",\"done_check\":\"common_done_check__3kKij\",\"input_wr\":\"common_input_wr__1j_qc\",\"form_danger\":\"common_form_danger__2ZFlS\",\"load_more\":\"common_load_more__mlkAq\",\"all_loaded\":\"common_all_loaded__11aHE\",\"loading_scheme\":\"common_loading_scheme__tcTaS\",\"danger\":\"common_danger__3DTtg\",\"placeholder\":\"common_placeholder__1Y8B_\",\"input_danger\":\"common_input_danger__2Mgji\",\"textarea_wr\":\"common_textarea_wr__1Owu_\",\"password_strength\":\"common_password_strength__1v8as\",\"smoothappearance\":\"common_smoothappearance__2t_Cv\",\"tooWeak\":\"common_tooWeak__24q-F\",\"weak\":\"common_weak__ekDY8\",\"medium\":\"common_medium__2cCV6\",\"good\":\"common_good__3C1A3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"friends_line__CTaIr\",\"names_row\":\"friends_names_row__I9xPa\",\"company\":\"friends_company__3IPjv\",\"description\":\"friends_description__HUJS-\",\"description_p\":\"friends_description_p__j17_s\",\"load_more\":\"friends_load_more__26ODF\",\"loading_profile\":\"friends_loading_profile__Us8VP\",\"loading\":\"friends_loading__3VScv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3i-U9\",\"name\":\"counterslist_name__1Koxx\",\"domen\":\"counterslist_domen__X1vQX\",\"dayusers\":\"counterslist_dayusers__5YOGM\",\"totalusers\":\"counterslist_totalusers__3O-N2\",\"owner\":\"counterslist_owner__2Hw17\",\"list\":\"counterslist_list__34VOf\",\"list_head\":\"counterslist_list_head__tWoHw\",\"loading_counter\":\"counterslist_loading_counter__DThYG\",\"loading\":\"counterslist_loading__1PlA5\",\"noCounters\":\"counterslist_noCounters__39KOr\"};","module.exports = __webpack_public_path__ + \"static/media/auditories.09d367fd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"signup_signup_form__7HJVd\",\"dont_reg_yet\":\"signup_dont_reg_yet__239zS\",\"input_wr\":\"signup_input_wr__WIkn0\",\"input_danger\":\"signup_input_danger__2AIPg\",\"password_strength\":\"signup_password_strength__peCEw\",\"smoothappearance\":\"signup_smoothappearance__4VAwc\",\"tooWeak\":\"signup_tooWeak__Vo_W9\",\"weak\":\"signup_weak__bx5Hx\",\"medium\":\"signup_medium__1OxDa\",\"good\":\"signup_good__2KcH1\",\"loading_bar\":\"signup_loading_bar__3cVFs\",\"loading\":\"signup_loading__1IMnh\",\"active\":\"signup_active__3mlkR\",\"auth_info\":\"signup_auth_info__eHPph\",\"profile_form_wr\":\"signup_profile_form_wr__3zHGM\",\"profile_form\":\"signup_profile_form__hgX0S\",\"photo_cont\":\"signup_photo_cont__-6OF5\",\"add_photo_row\":\"signup_add_photo_row__AGbTF\",\"signup_container\":\"signup_signup_container__1MW0R\",\"signup_block\":\"signup_signup_block__2gMeh\",\"h1\":\"signup_h1__2FFgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\",\"form_fetching\":\"addcounter_form_fetching__2ejXt\",\"loading\":\"addcounter_loading__2P9GN\",\"text\":\"addcounter_text__SeuXh\",\"last_text\":\"addcounter_last_text__3txDb\",\"row\":\"addcounter_row__3I8u4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/counters'\r\n})\r\n\r\nexport const countersAPI = {\r\n    postCounter(data){\r\n        return axiosInstance.post('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getYourCounters(page, limit){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsCounters(page, limit){\r\n        return axiosInstance.get('/friendscounters', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response=>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getCounterById(counterId){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getCounterUsers(counterId, page, limit){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileUsers(page,limit){\r\n        return axiosInstance.get('/profile', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getUser(tysId){\r\n        return  axiosInstance.get('/user/'+tysId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {countersAPI} from \"../api/counters-api\";\r\nimport store from \"./redux-store\"\r\nimport {reset} from 'redux-form';\r\nimport {usersAPI} from \"../api/users-api\";\r\nlet initialState = {\r\n\r\n        pageSize: 4,\r\n        pixelCode: '',\r\n        yourCounters: {\r\n            counterslistData: [],\r\n            totalCounters: ''\r\n        },\r\n        friendsCounters:{\r\n            counterslistData: [],\r\n            totalCounters: ''\r\n        },\r\n        currentCounter:{\r\n            counterInfo: '',\r\n            counterUsers: '',\r\n            totalUsers: ''\r\n        }\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"counters/ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: action.counterData._id,\r\n                name: action.counterData.name,\r\n                domen: action.counterData.domen,\r\n                dayusers: action.counterData.dayusers,\r\n                allusers: action.counterData.allusers,\r\n                status: action.counterData.status\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                pixelCode: action.pixelCode,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: [newCounter, ...state.yourCounters.counterslistData]\r\n                }\r\n\r\n            }\r\n        }\r\n        case \"counters/CLEAR-PIXEL-CODE\":{\r\n            return {\r\n                ...state,\r\n                pixelCode: ''\r\n            }\r\n        }\r\n        case \"counters/SET-YOUR-COUNTERS\":{\r\n\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: action.countersData.items\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'counters/SET-YOUR-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    totalCounters: action.totalCounters.totalDocs\r\n                }\r\n\r\n            }\r\n        }\r\n        case \"counters/SET-FRIENDS-COUNTERS\":{\r\n\r\n            return {\r\n                ...state,\r\n                friendsCounters: {\r\n                    ...state.friendsCounters,\r\n                    counterslistData: action.countersData.items\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'counters/SET-FRIENDS-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                friendsCounters: {\r\n                    ...state.friendsCounters,\r\n                    totalCounters: action.totalCounters.totalDocs\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        case 'counters/SET-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: action.counterInfo,\r\n                    counterUsers: action.counterUsers.usersPage,\r\n                    totalUsers: action.counterUsers.totalDocs\r\n                }\r\n            }\r\n        }\r\n        case 'counters/CLEAR-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: '',\r\n                    counterUsers: '',\r\n                    totalUsers: ''\r\n                }\r\n            }\r\n        }\r\n        case 'counters/ADD-COUNTER-USERS':{\r\n\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterUsers: [...state.currentCounter.counterUsers, ...action.users]\r\n                }\r\n            }\r\n        }\r\n        case 'counters/CLEAR-COUNTERS-LISTS':{\r\n            return {\r\n                ...state,\r\n                yourCounters: {\r\n                    ...state.yourCounters,\r\n                    counterslistData: [],\r\n                    totalCounters: ''\r\n                },\r\n                friendsCounters:{\r\n                    ...state.friendsCounters,\r\n                    counterslistData: [],\r\n                    totalCounters: ''\r\n                },\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = (counterData, pixelCode) =>({\r\n    type: 'counters/ADD-COUNTER',\r\n    counterData: counterData,\r\n    pixelCode: pixelCode\r\n})\r\nexport const setYourCounters = (countersData) =>({\r\n    type: 'counters/SET-YOUR-COUNTERS',\r\n    countersData: countersData\r\n})\r\nexport const setYourTotalCounters = (totalCounters) =>({\r\n    type: 'counters/SET-YOUR-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\nexport const setFriendsCounters = (countersData) =>({\r\n    type: 'counters/SET-FRIENDS-COUNTERS',\r\n    countersData: countersData\r\n})\r\n\r\nexport const setFriendsTotalCounters = (totalCounters) => ({\r\n    type: 'counters/SET-FRIENDS-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\n\r\nexport const clearPixelCode = () =>({\r\n    type: 'counters/CLEAR-PIXEL-CODE'\r\n})\r\n\r\nexport const setCurrentCounter = (counterInfo, counterUsers) =>({\r\n    type: 'counters/SET-CURRENT-COUNTER',\r\n    counterInfo: counterInfo,\r\n    counterUsers: counterUsers\r\n})\r\n\r\nexport const clearCurrentCounter = () => ({\r\n    type: 'counters/CLEAR-CURRENT-COUNTER'\r\n})\r\n\r\nexport const clearCountersLists = () =>({\r\n    type: 'counters/CLEAR-COUNTERS-LISTS'\r\n})\r\n\r\nexport const addCounterUsers = (users) =>({\r\n    type: 'counters/ADD-COUNTER-USERS',\r\n    users: users\r\n})\r\n\r\nexport const getCounters = () => (dispatch) =>{\r\n    Promise.all([countersAPI.getYourCounters(1, store.getState().countersPage.pageSize), countersAPI.getFriendsCounters(1, store.getState().countersPage.pageSize)]).then(response=>{\r\n        dispatch(setYourCounters(response[0]))\r\n        dispatch(setYourTotalCounters(response[0]))\r\n        dispatch(setFriendsCounters(response[1]))\r\n        dispatch(setFriendsTotalCounters(response[1]))\r\n    })\r\n}\r\n\r\nexport const changeYourCounters = (page) => async (dispatch) =>{\r\n    let response = await countersAPI.getYourCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setYourCounters(response))\r\n    dispatch(setYourTotalCounters(response))\r\n}\r\n\r\nexport const changeFriendsCounters = (page) => async (dispatch) =>{\r\n    let response = await countersAPI.getFriendsCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setFriendsCounters(response))\r\n    dispatch(setFriendsTotalCounters(response))\r\n}\r\n\r\nexport const postCounter = (data) => async (dispatch) => {\r\n\r\n    let response = await countersAPI.postCounter(data)\r\n    dispatch(addCounter(response.newCounter, response.pixelCode))\r\n    dispatch(reset('addcounter-form'))\r\n}\r\n\r\nexport const getCurrentCounter = (counterId) => (dispatch) =>{\r\n    Promise.all([countersAPI.getCounterById(counterId),\r\n        usersAPI.getCounterUsers(counterId, 1, store.getState().countersPage.pageSize)])\r\n            .then(response =>{\r\n        dispatch(setCurrentCounter(response[0], response[1]) )\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n\r\n    let response = await usersAPI.getCounterUsers(store.getState().countersPage.currentCounter.counterInfo._id, page, store.getState().countersPage.pageSize)\r\n    dispatch(addCounterUsers(response.usersPage))\r\n}\r\n\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId === state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId === action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id === action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const summaryAPI = {\r\n    getSummary(){\r\n        return axiosInstance.get('/summary/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getSummaryGraphic(){\r\n        return axiosInstance.get('/summary/graphic', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.graphicArr;\r\n                })\r\n    }\r\n}\r\n","export const getSummaryInfo = (state) =>{\r\n    return state.summaryPage.summaryInfo\r\n}\r\n\r\nexport const getSummaryGraphic = (state) =>{\r\n    return state.summaryPage.graphicData\r\n\r\n}\r\n\r\nexport const getSummaryUsers = (state) =>{\r\n    return state.summaryPage.summaryUsers\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.summaryPage.pageSize\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.summaryPage.totalUsers\r\n}","import {usersAPI} from \"../api/users-api\";\r\nimport {summaryAPI} from \"../api/summary-api\";\r\nimport store from \"./redux-store\"\r\nimport {getSummaryGraphic} from \"./selectors/summary-selectors\";\r\n\r\nlet initialState = {\r\n    summaryInfo:{\r\n       dayUsers: '',\r\n       dayClicks: ''\r\n    },\r\n    summaryUsers: [],\r\n    pageSize: 7,\r\n    totalUsers: '',\r\n    graphicData : []\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n\r\n        case 'SET-SUMMARY-USERS':{\r\n            let users = ''\r\n            if(action.summaryUsers.users){\r\n                users = action.summaryUsers.users\r\n            }\r\n            else{\r\n                users = action.summaryUsers.usersPage\r\n            }\r\n            return {\r\n                ...state,\r\n                summaryUsers: users,\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'ADD-SUMMARY-USERS':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [...state.summaryUsers, ...action.summaryUsers.usersPage],\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'CLEAR-SUMMARY-SELECTOR':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [],\r\n                totalUsers: '',\r\n                graphicData: [],\r\n                summaryInfo:{\r\n                    dayClicks: '',\r\n                    dayUsers: ''\r\n                }\r\n\r\n            }\r\n        }\r\n        case 'SET-SUMMARY-INFO':{\r\n            return {\r\n                ...state,\r\n                summaryInfo:{\r\n                    dayClicks: action.summaryInfo.clicks,\r\n                    dayUsers: action.summaryInfo.users\r\n                }\r\n            }\r\n        }\r\n        case 'SET-GRAPHIC-DATA':{\r\n            return {\r\n                ...state,\r\n                graphicData: action.graphicData\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nconst setSummaryInfo = (summaryInfo) =>({\r\n    type: 'SET-SUMMARY-INFO',\r\n    summaryInfo: summaryInfo\r\n})\r\n\r\n\r\nconst setGraphicData = (graphicData) => ({\r\n    type: 'SET-GRAPHIC-DATA',\r\n    graphicData: graphicData\r\n})\r\n\r\n\r\n\r\nconst setSummaryUsers = (summaryUsers) =>({\r\n    type: 'SET-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\nconst addSummaryUsers = (summaryUsers) =>({\r\n    type: 'ADD-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\n\r\n\r\n\r\nexport const clearSummaryData = () => ({\r\n    type: 'CLEAR-SUMMARY-SELECTOR'\r\n})\r\n\r\nexport const getSummaryData = () => (dispatch) =>{\r\n    Promise.all([usersAPI.getProfileUsers(1, store.getState().summaryPage.pageSize), summaryAPI.getSummary(), summaryAPI.getSummaryGraphic()]).then(response =>{\r\n        dispatch(setSummaryUsers(response[0]))\r\n        dispatch(setSummaryInfo(response[1]))\r\n        dispatch(setGraphicData(response[2]))\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n    let response = await usersAPI.getProfileUsers(page, store.getState().summaryPage.pageSize)\r\n    dispatch(addSummaryUsers(response))\r\n}\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileInfoById(userId){\r\n        return axiosInstance.get('/userid/'+userId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProposals(){\r\n        return axiosInstance.get('/your_proposals/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.proposals;\r\n                })\r\n\r\n    },\r\n\r\n    getProfilesList(page, limit){\r\n        return axiosInstance.get('/profileslist', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsList(page, limit){\r\n        return axiosInstance.get('/friends/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getAvatar(){\r\n        return axiosInstance.get('/avatar', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    }\r\n}\r\n\r\n\r\nexport const profileActionsAPI = {\r\n    postProposal(userId){\r\n        return axiosInstance.post('/proposal/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n\r\n    deleteProposal(userId){\r\n        return axiosInstance.delete('/proposal/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    acceptProposal(userId){\r\n        return axiosInstance.post('/proposals/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    denyProposal(userId){\r\n        return axiosInstance.delete('/proposals/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    deleteFriend(userId){\r\n        return axiosInstance.delete('/delete_friend/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI, profileActionsAPI} from '../api/profile-api'\r\nimport store from \"../redux/redux-store\";\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: '',\r\n    avatar: '',\r\n    pageSize: 5,\r\n    totalProfiles: undefined,\r\n    proposals: [],\r\n    profilesList: [],\r\n    friendsList: [],\r\n    totalFriends: undefined,\r\n    deletedFriend: undefined\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'profile/SET-PROFILE-INFO':\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        case 'profile/SET-PROFILES-LIST':\r\n            return {\r\n                ...state,\r\n                profilesList: action.data\r\n            }\r\n        case 'profile/SET-TOTAL-PROFILES':\r\n            return {\r\n                ...state,\r\n                totalProfiles: action.count\r\n\r\n            }\r\n        case 'profile/SET-PROPOSALS':\r\n            return {\r\n                ...state,\r\n                proposals: action.proposals\r\n            }\r\n        case 'profile/SET-FRIENDS-LIST':\r\n            return {\r\n                ...state,\r\n                friendsList: action.friends,\r\n                totalFriends: action.totalDocs\r\n            }\r\n        case 'profile/SET-DELETED-FRIEND':\r\n            return {\r\n                ...state,\r\n                deletedFriend: [action.friendId]\r\n            }\r\n        case 'profile/SET-AVATAR':\r\n            return {\r\n                ...state,\r\n                avatar: action.avatarData.avatar\r\n            }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'profile/SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'profile/RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'profile/SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\nexport const setProfilesList = (data) =>({\r\n    type: 'profile/SET-PROFILES-LIST',\r\n    data: data\r\n})\r\n\r\nexport const setTotalProfiles = (count) =>({\r\n    type: 'profile/SET-TOTAL-PROFILES',\r\n    count: count\r\n})\r\n\r\nexport const setProposals = (proposals) => ({\r\n    type: 'profile/SET-PROPOSALS',\r\n    proposals: proposals\r\n})\r\n\r\nexport const setFriendsList = (friends, totalDocs) =>({\r\n    type: 'profile/SET-FRIENDS-LIST',\r\n    friends: friends,\r\n    totalDocs: totalDocs\r\n})\r\n\r\nexport const setDeletedFriend = (friendId)=>({\r\n    type: 'profile/SET-DELETED-FRIEND',\r\n    friendId: friendId\r\n})\r\n\r\nexport const setAvatar = (avatarData) =>({\r\n    type: 'profile/SET-AVATAR',\r\n    avatarData: avatarData\r\n})\r\n\r\n\r\n\r\nexport const getAvatar = () => async (dispatch) =>{\r\n    let response = await profileAPI.getAvatar()\r\n    dispatch(setAvatar(response))\r\n\r\n}\r\n\r\nexport const getProposals = () => async (dispatch)=>{\r\n\r\n    let response = await profileAPI.getProposals()\r\n    dispatch(setProposals(response))\r\n}\r\n\r\nexport const getProfileInfo = () => async (dispatch) =>{\r\n    let response = await profileAPI.getProfileInfo()\r\n    dispatch(setProfileInfo(response))\r\n}\r\n\r\nexport const getProfilesList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getProfilesList(page,limit)\r\n    dispatch(setProfilesList(response.items))\r\n    dispatch(setTotalProfiles(response.totalPages))\r\n\r\n}\r\n\r\nexport const postProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.postProposal(userId)\r\n    if(response.message === 'proposal sended'){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const deleteProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteProposal(userId)\r\n    if(response.message === \"proposal deleted\"){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const acceptProposal = (userId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.acceptProposal(userId)\r\n    if(response.message === \"Friend added\"){\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const denyProposal = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileActionsAPI.denyProposal(userId)\r\n    if (response.message === \"Proposal denied\") {\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const putProfileInfo = (data) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.putProfileInfo(data)\r\n    dispatch(setProfileInfo(response.newInfo))\r\n}\r\n\r\nexport const getFriendsList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page,limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const addFriendsList = (page, limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page, limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const deleteFriend = (userId, buttonId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteFriend(userId)\r\n    if(response.message === \"friend deleted\"){\r\n        dispatch(setDeletedFriend(buttonId))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    }\r\n\r\n}","\r\nimport {authAPI, signUpAPI} from \"../api/auth-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    isFetching: false,\r\n    signUpState: 'signUpForm'\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"auth/SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"auth/SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"auth/DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'auth/TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case 'auth/TOGGLE_SIGNUP_STATE':\r\n            return {\r\n                ...state,\r\n                signUpState: action.signUpState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"auth/SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const setToken = (token) =>({\r\n    type: 'auth/SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'auth/DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'auth/SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'auth/TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\n\r\nexport const setSignUpState = (signUpState) =>{return {\r\n    type: 'auth/TOGGLE_SIGNUP_STATE',\r\n    signUpState: signUpState\r\n}}\r\n\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message === \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=360000'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=360000'\r\n                    authAPI.getAuthInfo()\r\n                            .then(response => {\r\n                                console.log(response)\r\n\r\n                                dispatch(setProfileData(response))\r\n                            })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(stopSubmit('login-form', {_error : \"Неверные данные\"}))\r\n                dispatch(toggleIsFetching(false))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            dispatch(toggleIsFetching(false))\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(setSignUpState('userInfoForm'))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message === \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                authAPI.getAuthInfo()\r\n                                        .then(response => {\r\n                                            dispatch(setProfileData(response))\r\n                                        })\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch(toggleIsFetching(false))\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(stopSubmit('signup-form', {email : 'Данная почта уже зарегистрирована'}))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(stopSubmit('signup-form', {login : 'Данный логин уже зарегистрирован'}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const AuthThunkCreator = () => async (dispatch)=>{\r\n    let getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    let getAuth  = async() =>{\r\n        let response  = await authAPI.getAuthInfo()\r\n        dispatch(setProfileData(response))\r\n\r\n    }\r\n\r\n\r\n    if (getCookie('email') && getCookie('password')){\r\n       let response = await authAPI.postLoginInfo(getCookie('email'), getCookie('password'))\r\n            dispatch(setToken(response.token))\r\n            await getAuth()\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {AuthThunkCreator} from './auth-reducer'\r\n\r\n\r\nlet initialState = {\r\n    isInitialized: false,\r\n    menuState: 'collapsed'\r\n}\r\n\r\n\r\nconst appReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"app/INITIALIZED_SUCCESS\":\r\n            return{\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        case \"app/TOGGLE-MENU-STATE\":\r\n            let menuState = ''\r\n            switch (state.menuState ){\r\n                case 'collapsed':\r\n                    menuState = 'closed';\r\n                    break;\r\n                case 'closed':\r\n                    menuState = 'collapsed';\r\n                    break\r\n                default: menuState = 'closed'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                menuState: menuState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: \"app/INITIALIZED_SUCCESS\"})\r\n\r\n\r\nexport const InitializingApp = () => (dispatch) =>{\r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n                dispatch(setInitializedSuccess())\r\n            })\r\n}\r\n\r\nexport const toggleMenuState = () => ({\r\n    type: \"app/TOGGLE-MENU-STATE\"\r\n})\r\n\r\n\r\nexport  default appReducer\r\n","\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    userInfo: ''\r\n}\r\n\r\nlet usersReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case 'users/SET-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        }\r\n        case 'users/CLEAR-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: ''\r\n            }\r\n        }\r\n        default :{\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst setUserInfo = (userInfo) =>({\r\n    type: 'users/SET-USER-INFO',\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const clearUserInfo = () => ({\r\n    type: 'users/CLEAR-USER-INFO'\r\n})\r\n\r\nexport const getUserInfo = (tysId) => async (dispatch) =>{\r\n    let response = await usersAPI.getUser(tysId)\r\n    dispatch(setUserInfo(response))\r\n\r\n}\r\n\r\nexport default usersReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport countersReducer from \"./counters-reducer\"\r\nimport audiencesReducer from \"./audiences-reducer\"\r\nimport summaryReducer from \"./summary-reducer\"\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\"\r\nimport appReducer from \"./app-reducer\"\r\nimport usersReducer from './users-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    users: usersReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.store = store\r\nexport default store","import React, {useEffect, useState} from 'react';\r\nimport s from './sidebar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport hamburgerIcon from '../../assets/icons/menu/hamburger.svg'\r\nimport summaryIcon from '../../assets/icons/menu/summary.svg'\r\nimport eyeIcon from '../../assets/icons/menu/eye.svg'\r\nimport auditoriesIcon from '../../assets/icons/menu/auditories.svg'\r\nimport friendsIcon from '../../assets/icons/menu/friend.svg'\r\nimport settingsIcon from '../../assets/icons/menu/settings.svg'\r\nimport shortMenuIcon from '../../assets/icons/menu/short-menu.svg'\r\nimport profileIcon from '../../assets/icons/menu/profile.svg'\r\nlet Sidebar = (props) =>{\r\n\r\n    /* let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    } */\r\n\r\n\r\n\r\n\r\n\r\n    let logout = () =>{\r\n        props.logout()\r\n    }\r\n\r\n    let selectSideBarClassName = () =>{\r\n        let className = ''\r\n        if(props.menuState === 'collapsed'){\r\n            className = s.sidebar\r\n        }\r\n        else{\r\n            className = s.sidebar + \" \" + s.sidebar_closed\r\n        }\r\n        return className\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={selectSideBarClassName()}>\r\n        <div className={s.sidebar_top}>\r\n            <div className={s.logo}>Трекер</div>\r\n            <div className={s.hamburger} onClick={()=>{props.toggleMenuState()}}>\r\n                <img src={hamburgerIcon} alt=\"\"/>\r\n            </div>\r\n             <nav className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <NavLink to={'/summary'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                    <div className={s.menu_icon}><img src={summaryIcon} alt=\"\"/></div>\r\n                    <p>Сводка</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/counters'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={eyeIcon} alt=\"\"/></div>\r\n                     <p>Счётчики</p>\r\n                 </NavLink>\r\n                 {/* <NavLink to={'/audiences'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={auditoriesIcon} alt=\"\"/></div>\r\n                     <p>Аудитории</p>\r\n                 </NavLink> */}\r\n                 <NavLink to={'/friends'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={friendsIcon} alt=\"\"/></div>\r\n                     <p>Друзья</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/profilesettings'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={settingsIcon} alt=\"\"/></div>\r\n                     <p>Настройки</p>\r\n                 </NavLink>\r\n             </nav>\r\n        </div>\r\n            <div className={props.menuState === 'collapsed' ? s.profile_cont : s.profile_cont + \" \" + s.sidebar_closed}>\r\n              <div className=\"dropdown-menu\">\r\n                  <div className='dropdown-menu-dots'><img  src={shortMenuIcon} alt=\"\"/></div>\r\n                  <div className=\"dropdown-menu-content\">\r\n                      {props.isAuth === true ?\r\n                              <div className=\"dropdown-menu-link\" onClick={logout}>Выйти</div> :\r\n                              <NavLink to=\"/login\" className='dropdown-menu-link' activeClassName='active'>Войти</NavLink>}\r\n                  </div>\r\n              </div>\r\n               <div className={s.avatar}>\r\n\r\n                   {props.fetching === 'fetching' ? <div className={s.avatar_loader} /> : <img className={props.avatar === 'none' ? s.none : s.uploaded}\r\n                                                                           src={props.avatar === 'none' ? profileIcon : props.avatar}\r\n                                                                           alt=\"\"/>}\r\n\r\n               </div>\r\n                <div className={s.user_login}>\r\n                    {props.fetching === 'fetching' ? <div className={s.login_loader} /> :  <div className={s.login_wr}><p>{props.profileLogin}</p></div>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","export const getMenuState = (state) =>{\r\n    return state.app.menuState\r\n}\r\n","export const selectProfilesList = (state) =>{\r\n    return state.profilePage.profilesList\r\n}\r\n\r\nexport const getTotalProfiles = (state) =>{\r\n    return state.profilePage.totalProfiles\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.profilePage.pageSize\r\n}\r\n\r\nexport const getProposalsList = (state) =>{\r\n    return state.profilePage.proposals\r\n}\r\n\r\nexport const getFriends = (state) =>{\r\n    return state.profilePage.friendsList\r\n}\r\n\r\nexport const getTotalFriends = (state) =>{\r\n    return state.profilePage.totalFriends\r\n}\r\n\r\nexport const getDeletedFriend = (state) =>{\r\n    return state.profilePage.deletedFriend\r\n}\r\n\r\nexport const getAvatarSelector = (state) =>{\r\n    return state.profilePage.avatar\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Sidebar from \"./sidebar\";\r\nimport {connect} from \"react-redux\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {deleteProfileData, setProfileData, setToken} from \"../../redux/auth-reducer\";\r\nimport {toggleMenuState} from '../../redux/app-reducer'\r\nimport {getMenuState} from \"../../redux/selectors/app-selectors\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {getAvatar} from \"../../redux/profile-reducer\";\r\nimport {getAvatarSelector} from \"../../redux/selectors/profileselectors\";\r\n\r\nlet SideBarContainer = (props) => {\r\n   const [cookies, setCookie, removeCookie] = useCookies([\"email\", \"password\"]);\r\n   const [sideBarVisibility, setSideBarVisibility ] = useState('visible')\r\n   const [profileBlockState, setProfileBlockState] = useState('fetching')\r\n   const pageName = useLocation()\r\n   useEffect(()=>{\r\n       if(pageName.pathname === '/login' || pageName.pathname === '/signup'){\r\n           setSideBarVisibility('hidden')\r\n       }\r\n       else{\r\n           setSideBarVisibility('')\r\n       }\r\n   },[pageName.pathname, sideBarVisibility])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getAvatar()\r\n        }\r\n        else{\r\n            setProfileBlockState('fetching')\r\n        }\r\n\r\n    }, [ props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if((props.avatar && props.avatar.length !== 0) && profileBlockState === 'fetching'){\r\n            setProfileBlockState(\"main\")\r\n        }\r\n\r\n    },[props.avatar])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n       props.getAvatar()\r\n   },[])\r\n   let logOut = () =>{\r\n       removeCookie(\"email\");\r\n       removeCookie(\"password\")\r\n        props.deleteProfileData()\r\n\r\n    }\r\n\r\n    return  sideBarVisibility === 'hidden' ? <></> : <Sidebar isAuth={props.isAuth}\r\n                       profileLogin={props.profileLogin}\r\n                       logout={logOut}\r\n                       menuState={props.menuState}\r\n                       toggleMenuState={props.toggleMenuState}\r\n                       avatar={props.avatar}\r\n                       fetching={profileBlockState}\r\n    />\r\n\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login,\r\n        menuState: getMenuState(state),\r\n        isInitialized: state.app.isInitialized,\r\n        avatar:  getAvatarSelector(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {setToken,setProfileData, deleteProfileData, toggleMenuState, getAvatar})(SideBarContainer)","const mongoDate = (inputDate) => {\r\n\r\n    let d = new Date(inputDate)\r\n    let dateNow = new Date()\r\n    let dateFormatter = new Intl.DateTimeFormat(\"ru\");\r\n    let timeFormatter = new Intl.DateTimeFormat(\"ru\",{hour: '2-digit', minute: '2-digit'});\r\n    let comparativeDate = ''\r\n    const millieSecondsCompare = (firstDate, secondDate) =>{\r\n        return (firstDate - secondDate)/(60*60*1000)\r\n    }\r\n    if(millieSecondsCompare(Date.now(), Date.parse(inputDate)) < (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)){\r\n       comparativeDate = 'Сегодня'\r\n    }\r\n    else if (millieSecondsCompare(Date.now(), Date.parse(inputDate)) > (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)\r\n            && millieSecondsCompare(Date.now(), Date.parse(inputDate)) < 24 + (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds() + dateNow.getMilliseconds())/(3600)){\r\n        comparativeDate = 'Вчера'\r\n    }\r\n    else {\r\n        comparativeDate = dateFormatter.format(d)\r\n    }\r\n\r\n\r\n    return{\r\n        comparativeDate: comparativeDate,\r\n        date: dateFormatter.format(d),\r\n        time: timeFormatter.format(d),\r\n        seconds: d.getSeconds()\r\n    }\r\n}\r\nexport default mongoDate","import React, { useEffect, useRef, useState} from \"react\";\r\n\r\nimport s from \"./common.module.scss\";\r\nimport styled from 'styled-components'\r\n\r\nexport const Input = ({input, meta,placeholder, ...props}) =>{\r\n    return (\r\n\r\n                <div className={s.input_wr}>\r\n                    <p className={s.placeholder}>{placeholder}</p>\r\n                    <input className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                    {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, placeholder, ...props}) =>{\r\n    const textareaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        textareaRef.current.style.height = \"50px\";\r\n        const scrollHeight = textareaRef.current.scrollHeight;\r\n        textareaRef.current.style.height = scrollHeight + \"px\";\r\n    }, [input.value]);\r\n\r\n    return (\r\n\r\n            <div className={s.textarea_wr}>\r\n                <p className={s.placeholder}>{placeholder}</p>\r\n                <textarea ref={textareaRef} cols=\"2\" rows=\"3\"  className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Select = () =>{\r\n    return(\r\n            <p>gj</p>\r\n    )\r\n}\r\n\r\n\r\nexport const PasswordScoreInput = ({input, meta, placeholder, ...props}) =>{\r\n        let strengthValue = 'none'\r\n        let strengthText = ''\r\n\r\n        if(input.value === ''){\r\n            strengthValue = 'none'\r\n            strengthText = ''\r\n\r\n        }\r\n        else if(input.value.length <= 4 && input.value.length >= 1){\r\n            strengthValue = 'tooWeak'\r\n            strengthText = 'Слишком слабый пароль'\r\n            meta.error = ' '\r\n        }\r\n        else if(input.value.length <= 6){\r\n            strengthValue = 'weak'\r\n            strengthText = 'Слабый пароль'\r\n        }\r\n        else if(input.value.length <= 8){\r\n            strengthValue = 'medium'\r\n            strengthText = 'Средний пароль'\r\n        }\r\n        else{\r\n            strengthValue = 'good'\r\n            strengthText = 'Хороший пароль'\r\n        }\r\n\r\n    return (\r\n\r\n            <div className={s.input_wr}>\r\n                <p className={s.placeholder}>{placeholder}</p>\r\n\r\n                <input className={meta.touched && meta.error && s.danger} {...input} {...props} />\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                {strengthValue !== 'none' ?  <div className={s.password_strength}><div className={s[strengthValue]}></div>\r\n                    <p>{strengthText}</p></div> : ''}\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ButtonStyled = styled.button`\r\n    background: ${props=> props.primary ? \"#0078d4\" : \"white\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    font: inherit;\r\n    padding: 8px 21px 9px 21px;\r\n    font-weight: 600;\r\n    letter-spacing: 0.4px;\r\n    border: 1px solid  ${props => props.primary ? \"#0078d4\" : \"#323130\"};\r\n    font-size: 13px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    display: block;\r\n    text-align: center;\r\n    border-radius: 2px;\r\n    margin-bottom: 10px;\r\n    line-height: 100%;\r\n    \r\n    &:hover{\r\n    background: ${props=> props.primary ? \"#106ebe\" : \"#f3f2f1\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    border: 1px solid  ${props => props.primary ? \"#106ebe\" : \"#323130\"};\r\n    }\r\n    &:active{\r\n    background: ${props=> props.primary ? \"#005a9e\" : \"#edebe9\" };\r\n    color: ${props=> props.primary ? \"#fff\" : \"#201f1e\"};\r\n    border: 1px solid  ${props => props.primary ? \"#005a9e\" : \"#323130\"};\r\n    }\r\n`\r\n\r\nconst DisabledStyled = styled.span`\r\n    padding: 9px 22px 10px 22px;\r\n    font-weight: 600;\r\n    letter-spacing: 0.4px;\r\n    font-size: 13px;\r\n    border-radius: 2px;\r\n    background-color: #f3f2f1;\r\n    color: #a19f9d;\r\n    line-height: 100%;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`\r\n\r\nexport const Button = (props) =>{\r\n    return (props.disabled  ?<DisabledStyled {...props} /> : <ButtonStyled {...props} />)\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport s from \"./common.module.scss\"\r\nimport {Button} from \"./formControls\";\r\nimport styled from \"styled-components\"\r\n\r\nconst LoadMoreButton = styled(Button)`\r\nmargin: auto;\r\nmargin-bottom: 15px;\r\nmax-width: 210px;\r\npadding: 11px 30px 12px 30px;\r\n`\r\n\r\n\r\nconst LoadMoreComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    const buttonSelector = () =>{\r\n        if(props.pages === 'empty' || props.inizialized === false || props.pages.length < props.pageSize){\r\n            return (<></>)\r\n        }\r\n        else if(pagesCount > props.currentPage){\r\n            return <LoadMoreButton onClick={()=>{props.changePage(props.currentPage+1)}}>Загрузить ещё</LoadMoreButton>\r\n        }\r\n        else{\r\n            return <LoadMoreButton disabled >Загружены все записи</LoadMoreButton>\r\n        }\r\n    }\r\n\r\n    return(\r\n            buttonSelector()\r\n\r\n    )\r\n}\r\n\r\n\r\nexport class LoadMore extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages,\r\n        initialized: false\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page, this.props.pageSize)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            this.setState({isFetching: false})\r\n            this.setState({initialized: true})\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n            this.loaders.push(this.props.loader)\r\n        }\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n        else{\r\n            this.setState({initialized: true})\r\n        }\r\n    }\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching && this.state.pages !== 'empty'){\r\n            return [this.props.pages, this.loaders]\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n            <LoadMoreComponent   currentPage={this.state.currentPage}\r\n                                 pageSize={this.props.pageSize}\r\n                                 totalPages={this.props.totalPages}\r\n                                 changePage={this.changePage}\r\n                                 pages={this.state.pages}\r\n                                 inizialized={this.state.initialized}\r\n            />\r\n        </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport mongoDate from \"../../../../../utils/mongoDate\";\r\nimport s from './usersList.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LoadMore} from \"../../../../common/loadMore\";\r\n\r\nimport styled from 'styled-components'\r\nimport AndroidIcon from '../../../../../assets/icons/os/android.svg'\r\nimport WindowsIcon from '../../../../../assets/icons/os/windows.svg'\r\nimport iOSIcon from '../../../../../assets/icons/os/apple.svg'\r\nimport MacOsIcon from '../../../../../assets/icons/os/macos.svg'\r\nimport LinuxIcon from '../../../../../assets/icons/os/linux.svg'\r\nimport UndefinedOsIcon from '../../../../../assets/icons/os/undefined.svg'\r\n\r\nimport NoUsersIcon from '../../../../../assets/icons/emptyUsers.svg'\r\nconst Time = styled.div`\r\n  width: 94px;\r\n  p{\r\n  padding-left: 12px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: 80px;\r\n  }\r\n  @media screen and (max-width: 500px){\r\n  width: 64px;\r\n  }\r\n`\r\n\r\nconst Sessions = styled.div`\r\n  width: 140px;\r\n  @media screen and (max-width: 1400px){\r\n  width: 47px;\r\n  }\r\n  @media screen and (max-width: 500px){\r\n  width: 30px;\r\n  }\r\n`\r\n\r\nconst Referrer = styled.div`\r\n  width: calc(60% - 404px);\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: calc(70% - 257px);\r\n  }\r\n  @media screen and (max-width: 750px){\r\n  width: calc(100% - 200px);\r\n  }\r\n  \r\n`\r\n\r\nconst City = styled.div`\r\n  width: 40%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  margin-left: 20px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n  @media screen and (max-width: 1400px){\r\n  width: 30%;\r\n  }\r\n  @media screen and (max-width: 750px){\r\n  display: none;\r\n  }\r\n`\r\n\r\nconst Country = styled.div`\r\n      width: 120px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    @media screen and (max-width: 750px){\r\n    width: 80px;\r\n    }\r\n    @media screen and (max-width: 500px){\r\n    width: 64px;\r\n    }\r\n`\r\n\r\nconst Os = styled.div`\r\n  width: 47px;\r\n  img{\r\n  width: 20px;\r\n    margin: auto;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ShortUserLine = styled(NavLink)`\r\n   display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #f7f7f7;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n  height: 47px;\r\n`\r\n\r\nconst LoadingUser = styled.div`\r\n    width: 100%;\r\n    background: #f7f7f7;\r\n    margin-bottom: 10px;\r\n    height: 47px;\r\n    display: block;\r\n    animation: loadingScheme 1s infinite ;\r\n  \r\n  @keyframes loadingScheme {\r\n    0%{background: #efefef}\r\n    50%{background: #dcdcdc}\r\n    100%{background: #efefef}\r\n  }\r\n`\r\n\r\nconst ListDivider = styled.div`\r\n    height: 46px;\r\n    border-bottom: 1px solid #dadada;\r\n    margin-bottom: 10px;\r\n        display: flex;\r\n    align-items: flex-end;\r\n    p{\r\n    margin-bottom: 5px;\r\n    }\r\n`\r\n\r\nconst Visits = styled.span`\r\n    background: #2980ea;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    width: 18px;\r\n    height: 18px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    overflow: hidden;\r\n    display: block;\r\n`\r\n\r\nconst NoUsersBlock = styled.div`\r\n    background: #f7f7f7;\r\n    padding: 15px;\r\n    width: calc(100% - 30px);\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    img{\r\n    width: 47px;\r\n   \r\n    }\r\n    div{\r\n    width: 70px;\r\n    }\r\n    p{\r\n    width: calc(100% - 70px);\r\n    }\r\n`\r\n\r\n\r\n\r\nconst NoUsers = () =>{\r\n    return(\r\n            <NoUsersBlock>\r\n                <div>\r\n                    <img src={NoUsersIcon} alt=\"\"/>\r\n                </div>\r\n                <p>У Вас ещё нет пользователей, подождите или добавьте новый счётчик</p>\r\n            </NoUsersBlock>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst ShortUser = (props) =>{\r\n    let selectOsIcon = (os) =>{\r\n        switch(os){\r\n            case 'Android':\r\n                return <img src={AndroidIcon} alt=\"Android\" />\r\n            case 'Windows':\r\n                return <img src={WindowsIcon} alt=\"Windows\" />\r\n            case 'iOS':\r\n                return <img src={iOSIcon} alt=\"iOS\" />\r\n            case 'Mac OS':\r\n                return <img src={MacOsIcon} alt=\"Mac OS\" />\r\n            case 'Linux':\r\n                return <img src={LinuxIcon} alt=\"Linux\" />\r\n            default:\r\n                return <img src={UndefinedOsIcon} alt=\"undefined\" />\r\n        }\r\n    }\r\nreturn(\r\n        <ShortUserLine to={'/users/'+props.tysId} className={s.shortUser}>\r\n            <Time>\r\n                <p>{props.time}</p>\r\n            </Time>\r\n            <Sessions>\r\n                <Visits>{props.sessions}</Visits>\r\n            </Sessions>\r\n            <Referrer>\r\n                <p>{props.referrer}</p>\r\n            </Referrer>\r\n            <Country>\r\n                <i className={s.flag+' '+s['flag-'+props.country]} > </i>\r\n                <p>{props.country}</p>\r\n            </Country>\r\n            <City>\r\n                <p>{props.city}</p>\r\n            </City>\r\n\r\n            <Os>\r\n                {selectOsIcon(props.os)}\r\n            </Os>\r\n        </ShortUserLine>\r\n)\r\n}\r\n\r\nconst UsersList = (props) => {\r\n    let users = []\r\n    if(props.usersList !== undefined){\r\n        if(props.usersList !== \"no users\"){\r\n            let lastDivider = ''\r\n            props.usersList.forEach((item, index)=>{\r\n                if(mongoDate(item.date).comparativeDate !== lastDivider){\r\n                    lastDivider = mongoDate(item.date).comparativeDate\r\n                    users.push({divider: mongoDate(item.date).comparativeDate}, item)\r\n\r\n                }\r\n                else{\r\n                    users.push(item)\r\n                }\r\n\r\n            })\r\n            users = users.map((user, index) => {\r\n                if(user.divider) {\r\n                    return <ListDivider key={index}><p>{user.divider}</p></ListDivider>\r\n                }\r\n                else{\r\n                return <ShortUser key={user.tysId} time={mongoDate(user.date).time} sessions={user.sessionsNumber}\r\n                                  city={user.city} country={user.country}\r\n                                  os={user.os} tysId={user.tysId}\r\n                                  referrer={user.referrer}/>}\r\n                })\r\n        }\r\n        else{\r\n            users =\"empty\"\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"container\">\r\n\r\n                <LoadMore pages={users} pageSize={props.pageSize} totalPages={props.totalUsers}\r\n                          pageChanger={props.getMoreUsers} loader={<LoadingUser />} emptyBlock={<NoUsers />} />\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default UsersList","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getTotalUsers} from \"../../../../redux/selectors/summary-selectors\";\r\nimport {getMoreUsers} from \"../../../../redux/summary-reducer\";\r\nimport UsersList from \"../../../../components/content/counters/counterPage/usersList/usersList\";\r\n\r\n\r\nconst DayUsersContainer = (props) => {\r\n\r\n    return <UsersList  usersList={props.summaryUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(DayUsersContainer);\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport mongoDate from \"../../../utils/mongoDate\";\r\nconst Col = styled.div`\r\n display: block;\r\n background: #0063b1;\r\n height: ${props => props.height};\r\n width: 10px;\r\n @media screen and (max-width: 1200px){\r\n  width: 6px;\r\n }\r\n @media screen and (max-width: 500px){\r\n  width: 4px;\r\n }\r\n \r\n`\r\n\r\n\r\nconst ColInfo = styled.div`\r\n  width: 120px;\r\n  height: 65px;\r\n  box-shadow: 0px 0px 5px #c3c3c3;\r\n  display: none;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 0px;\r\n  z-index: 2;\r\n  margin-top: 20px;\r\n  background: white;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  ${(props)=>{\r\n    switch (props.show) {\r\n        case 'showLeft':\r\n            return css`display: flex;\r\n                       right: 0px;\r\n                      `\r\n        case 'showRight':\r\n            return css`display: flex`\r\n        default:\r\n          return css`display: none`\r\n}\r\n}}\r\n`\r\n\r\nconst ColBlock = styled.div`\r\nheight: 100%;\r\nwidth: 2.0833%;\r\ndisplay: block;\r\nposition: relative;\r\n&:hover{\r\nbackground: #e0e0e0;\r\n}\r\n`\r\n\r\n\r\n\r\nconst ColWr = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: flex-end;\r\nposition: relative;\r\ncursor: pointer;\r\n\r\n`\r\n\r\nconst ColTime = styled.p`\r\n       font-size: 12px;\r\n    text-align: left;\r\n    padding-top: 3px;\r\n`\r\n\r\nconst ColNumber = styled.span`\r\n    color: #00A7CF;\r\n    font-size: 24px;\r\n    padding-left: 10px;\r\n    padding-top: 2px;\r\n`\r\n\r\nconst ColTimesRow = styled.div`\r\n    padding-left: 8px;\r\n    padding-top: 6px;\r\n`\r\n\r\nconst ColDay = styled.p`\r\nfont-size: 14px;\r\ncolor: gray;\r\n`\r\n\r\n\r\nconst Graphiccol = (props) => {\r\n    let colheight = props.colHeight*110+'px'\r\n    const [infoState, setInfoState] = useState('hidden')\r\n\r\n    let changeInfoState = (e) =>{\r\n        if(window.innerWidth - e.clientX < 200){\r\n            setInfoState('showLeft')\r\n        }\r\n        else{\r\n            setInfoState('showRight')\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n            <ColBlock onMouseOver={(e)=>{changeInfoState(e)}} onMouseOut={()=>{setInfoState('hidden')}}>\r\n                <ColInfo show={infoState}>\r\n                    <ColNumber>{props.colValue}</ColNumber>\r\n                    <ColTimesRow>\r\n                        <ColDay>{mongoDate(props.colData).comparativeDate}</ColDay>\r\n                        <ColTime>{mongoDate(Date.parse(props.colData)).time + \"-\" + mongoDate(Date.parse(props.colData)+ 60*60*1000).time}</ColTime>\r\n                    </ColTimesRow>\r\n\r\n                </ColInfo>\r\n                <ColWr>\r\n                    <Col height={colheight}/>\r\n                </ColWr>\r\n            </ColBlock>\r\n    )\r\n}\r\nexport default Graphiccol;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport styled from 'styled-components'\r\nimport ReactDOM from \"react-dom\";\r\n\r\nlet GraphicWr = styled.div`\r\nwidth: 100%;\r\nheight: 250px;\r\nbackground: #f4f4f4;\r\nposition: relative;\r\n`\r\n\r\nlet GraphicColsWR = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    height: 200px;\r\n    width: calc(100% - 24px);\r\n    margin: auto;\r\n    \r\n`\r\n\r\nlet GraphicBottom = styled.div`\r\n    position: relative;\r\n    width: calc(100% - 24px);\r\n    border-top: 1px solid gray;\r\n    margin: auto;\r\n    margin-top: 8px;\r\n    padding-top: 3px;\r\n    \r\n    p{\r\n     color: gray;\r\n     position: absolute;\r\n     font-size: 16px;\r\n     @media screen and (max-width: 500px){\r\n     font-size: 13px;\r\n     }\r\n    }\r\n    div{\r\n            width: 9px;\r\n            height: 9px;\r\n            border-radius: 50%;\r\n            display: block;\r\n            background: gray;\r\n            position: absolute;\r\n            top: -5px;\r\n    }\r\n`\r\n\r\nlet GraphicName = styled.h2`\r\n    display: block;\r\n    position: absolute;\r\n    left: 14px;\r\n    top: 8px;\r\n    font-size: 20px;\r\n    visibility: ${props => (props.hide ? `hidden` : `visible`)};;\r\n   \r\n`\r\n\r\nlet NowP = styled.p`\r\n  left: 0%;\r\n   &:before{\r\n   left: 1.04%;\r\n   }\r\n`\r\n\r\nlet Hours24P = styled.p`\r\nleft: 49%;\r\n&:before{\r\n   left: -4px;\r\n   }\r\n\r\n`\r\n\r\nlet Hours48P = styled.p`\r\nright: 0%;\r\n&:before{\r\n   right: 4px;\r\n   }\r\n`\r\n\r\nlet NowDot = styled.div`\r\n  left: calc(1.04% - 5px);\r\n`\r\n\r\nlet Hours24Dot = styled.div`\r\n  left: calc(49.04% - 5px);\r\n`\r\n\r\nlet Hours48Dot = styled.div`\r\n  right: calc(1.04% - 5px);\r\n`\r\n\r\n\r\nconst Graphic = (props) => {\r\n    const [hideH, setHideH] = useState(false)\r\n    const hideRef = useRef(false)\r\n    const hRef = useRef(null);\r\n\r\n    const changeHState = (e) =>{\r\n\r\n\r\n        if(hRef.current.getBoundingClientRect().x + hRef.current.getBoundingClientRect().width > e.clientX - 50){\r\n\r\n            //hideRef.current = true\r\n            setHideH(true)\r\n\r\n        }\r\n        else if( hRef.current.getBoundingClientRect().x + hRef.current.getBoundingClientRect().width < e.clientX - 50){\r\n            //hideRef.current = false\r\n            setHideH(false)\r\n        }\r\n        else{\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    let maxUsersCount = props.graphicData.map((coldata) => (coldata.usersCount))\r\n    maxUsersCount = Math.max.apply(null, maxUsersCount)\r\n\r\n    let graphicColElements = props.graphicData.map((coldata, index) => <Graphiccol key={coldata.hour} colData={coldata.hour} colHeight={coldata.usersCount / maxUsersCount}\r\n                                                                                   colValue={coldata.usersCount}/>)\r\n\r\n    return  (\r\n            <GraphicWr onMouseLeave={()=>{setHideH(false)}}>\r\n\r\n                <GraphicName ref={hRef} hide={hideH}>Пользователи в час</GraphicName>\r\n               <GraphicColsWR onMouseMove={(e)=>{changeHState(e)}}>\r\n                   {graphicColElements}\r\n               </GraphicColsWR>\r\n\r\n              <GraphicBottom>\r\n                  <NowDot />\r\n                  <Hours24Dot />\r\n                  <Hours48Dot />\r\n                  <NowP>48 часов назад</NowP>\r\n                  <Hours24P>24 часа назад</Hours24P>\r\n                  <Hours48P>Сейчас</Hours48P>\r\n              </GraphicBottom>\r\n            </GraphicWr>\r\n\r\n\r\n    )\r\n}\r\nexport default React.memo(Graphic);","import React from 'react';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nimport styled from 'styled-components'\r\n\r\nconst KeyNumbersWr  = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: center;\r\n@media screen and (max-width: 500px){\r\njustify-content: space-between;\r\nmargin-bottom: 1px;\r\n}\r\n`\r\n\r\nconst KeyNumberBlock = styled.div`\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 200px;\r\n    padding-bottom: 200px; // пропорции блока определяются здесь\r\n    margin-right: 11px;\r\n    @media screen and (max-width: 500px){\r\n    width: calc(50% - 6px);\r\n    padding-bottom: calc(50% - 6px);\r\n    margin-right: 0px;\r\n    }\r\n    \r\n`\r\nconst KeyNumberContent = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f4f4f4;\r\n    \r\n`\r\n\r\nconst KeyNumberName = styled.p`\r\n    font-size: 20px;\r\n    position: absolute;\r\n    right: 16px;\r\n    bottom: 10px;\r\n    @media screen and (max-width: 360px){\r\n    font-size: 16px;\r\n    }\r\n`\r\n\r\nconst KeyNumber = styled.p`\r\n    font-size: 40px;\r\n    position: absolute;\r\n    left: 16px;\r\n    top: 10px;\r\n`\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <>\r\n            <div className='container'>\r\n\r\n                        <KeyNumbersWr>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayClicks}</KeyNumber>\r\n                                    <KeyNumberName>Клики</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayUsers}</KeyNumber>\r\n                                    <KeyNumberName>Пользователи</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n\r\n                        </KeyNumbersWr>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <Graphic graphicData={props.graphicData}/>\r\n            </div>\r\n                </>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst DaystatContainer = (props) => {\r\n    return <Daystat graphicData={props.graphicInfo} summaryInfo={props.summaryInfo}/>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(DaystatContainer)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {Redirect} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\n\r\n\r\nconst WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isInitialized){\r\n            if(props.isAuth) return <Component {...props}/>\r\n            else return <Redirect to='/login' />\r\n        }\r\n        else{\r\n            return <Component {...props}/>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n\r\n}\r\nexport default WithAuthRedirect","import React from \"react\";\r\nimport s from \"./loadingschemes.module.scss\";\r\nexport const CountersListLoader = () =>{\r\n    return (\r\n            <div className=\"container\">\r\n              <div className={s.counters_h1}>\r\n                  <div className={s.h1 +\" \"+ s.elem} />\r\n                  <div className={s.add_counter +\" \"+ s.elem} />\r\n              </div>\r\n\r\n              <div className={s.counters_table_head +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.page_buttons}>\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n              </div>\r\n                <div className={s.margin_55px} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.list_ul +\" \"+ s.elem} />\r\n                <div className={s.page_buttons}>\r\n                    <div className={s.page_button + \" \" + s.elem} />\r\n                    <div className={s.page_button + \" \" + s.elem} />\r\n                    <div className={s.page_button + \" \" + s.elem} />\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport const CounterPageLoader = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <div className={s.h1 +\" \"+ s.elem} />\r\n            <div className={s.counterpage_row + \" row\"}>\r\n                <div className={s.counter_left}>\r\n                    <div className={s.counter_key_numbers}>\r\n                        <div className={s.counter_key_number +\" \"+ s.elem}/>\r\n                        <div className={s.counter_key_number +\" \"+ s.elem}/>\r\n                    </div>\r\n                    <div className={s.counter_desc +\" \"+ s.elem} />\r\n                    <div className={s.counter_desc +\" \"+ s.elem} />\r\n                    <div className={s.counter_desc +\" \"+ s.elem} />\r\n                </div>\r\n                <div className={s.code_block +\" \"+ s.elem} />\r\n            </div>\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.list_ul +\" \"+ s.elem} />\r\n            <div className={s.load_more_bottom + \" \" + s.elem} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const FriendsPageLoader = () =>{\r\n    return(\r\n            <div className={s.loading_scheme}>\r\n               <div className={s.text_line + \" \" + s.elem} />\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                </div>\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n\r\n                    <div className={s.page_buttons}>\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport const SummaryPageLoader = () =>{\r\n    return(\r\n            <div className=\"container\">\r\n                <div className={s.loading_scheme}>\r\n                    <div className={s.h1 +\" \"+ s.elem} />\r\n                    <div className={s.day_stat_row}>\r\n                        <div className={s.day_stat + ' ' + s.elem} />\r\n                        <div className={s.day_stat + ' ' + s.elem} />\r\n                    </div>\r\n                    <div className={s.graphic + ' ' + s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.list_ul +\" \"+ s.elem} />\r\n                    <div className={s.load_more_bottom + \" \" + s.elem}></div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport const UserPageLoader = () =>{\r\n    return (\r\n            <div className=\"container\">\r\n                <div className={s.loading_scheme}>\r\n                    <div className={s.h1 +\" \"+ s.elem} />\r\n                    <div className={s.user_stat_row}>\r\n                        <div className={s.user_main_block +\" \"+ s.elem} />\r\n                        <div className={s.user_main_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_blocks_row}>\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_blocks_row}>\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                        <div className={s.user_block +\" \"+ s.elem} />\r\n                    </div>\r\n\r\n                    <div className={s.user_h3 +\" \"+ s.elem} />\r\n                    <div className={s.user_block_col_12 +\" \"+ s.elem} />\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSummaryData, clearSummaryData} from \"../../../redux/summary-reducer\";\r\nimport {getSummaryInfo, getSummaryGraphic, getSummaryUsers} from \"../../../redux/selectors/summary-selectors\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {SummaryPageLoader} from \"../../common/loadingschemes/loadingSchemes\";\r\n\r\n\r\nconst SummaryContainer = (props) =>{\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        return( ()=>{\r\n            props.clearSummaryData()\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getSummaryData()\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [ props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if((props.summaryUsers && props.summaryUsers.length !== 0) && pageState === 'fetching'){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.summaryUsers])\r\n\r\n    return (\r\n            <>\r\n\r\n                {pageState === 'fetching' ?<SummaryPageLoader /> :\r\n                        <>\r\n                            <div className=\"container h1-block\"><h1 className=\"h1\">Статистика за сутки</h1></div>\r\n                            <DaystatContainer summaryInfo={props.summaryInfo} graphicInfo={props.graphicInfo} />\r\n                            <DayusersContainer summaryUsers={props.summaryUsers} />\r\n                        </> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        summaryInfo: getSummaryInfo(state),\r\n        graphicInfo: getSummaryGraphic(state),\r\n        summaryUsers: getSummaryUsers(state),\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{getSummaryData, clearSummaryData}),WithAuthRedirect)(SummaryContainer, SummaryPageLoader);","export const required = value => (value || typeof value === 'number' ? undefined : 'Обязательно')\r\n\r\nexport const checkLogin = value => (value && /^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(value) ? undefined : 'Некорректный логин')\r\n\r\nexport const checkEmail = value => (value && /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(value) ? undefined : 'Почта некорректная')\r\n\r\nexport const checkPassword = value => (value && /^[0-9a-z#!_-]/i.test(value) ? undefined : 'Пароль некорректный')\r\n\r\nexport const passwordsMatch = (value, allValues) =>\r\n        value !== allValues.password ? 'Пароли не совпадают' : undefined;\r\n","import React, {useRef, useState} from \"react\";\r\nimport s from \"./pixelCode.module.scss\";\r\nimport {Button} from \"../../../common/formControls\";\r\n\r\nconst PixelCodeBlock = (props) =>{\r\n\r\n    const [copySuccess, setCopySuccess] = useState('');\r\n    const textAreaRef = useRef(null);\r\n\r\n    let copyToClipboard = (e) =>{\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n        setCopySuccess('copied');\r\n        setTimeout(()=>{setCopySuccess('')}, 3000)\r\n    };\r\n\r\n\r\n\r\n    return(\r\n            <div className={s.codeBlock}>\r\n                <textarea onClick={(e)=>{e.target.select()}} ref={textAreaRef} value={props.pixelCode} name=\"\" id=\"\" cols=\"30\" rows=\"10\" className={s.codeTextarea}> </textarea>\r\n                <div className={s.copyButton_wr}>\r\n                    <Button primary onClick={copyToClipboard}>Скопировать код</Button>\r\n                    {copySuccess === 'copied' ? <div className={s.copied_label}>Скопировано</div> : ''}\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PixelCodeBlock","import React, {useState, useEffect, useRef} from 'react';\r\nimport s from '../addcounter.module.scss';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Button} from \"../../../../common/formControls\";\r\nimport {required} from \"../../../../../utils/validation\";\r\nimport loader_icon from \"../../../../../assets/icons/loading.svg\"\r\nimport styled from 'styled-components'\r\nimport PixelCodeBlock from \"../../pixelcode/pixelCode\";\r\nconst SendButton = styled(Button)`\r\n float: right;\r\n`\r\n\r\nconst AddCounterForm = (props) =>{\r\n    return (\r\n\r\n            <div className={s.addcounter_form}>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                    <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar} />\r\n                    <Field name=\"counterName\" type=\"text\"  component={Input} placeholder=\"Название счётчика\" validate={required}/>\r\n                    <Field name=\"counterDomen\" type=\"text\"  component={Input} placeholder=\"Домен\" validate={required}/>\r\n                    <SendButton primary disabled={props.submitting  || (props.invalid && props.anyTouched)} type=\"submit\">Отправить</SendButton >\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddCounterReduxForm = reduxForm({form: 'addcounter-form'})(AddCounterForm)\r\n\r\n\r\n\r\n\r\nconst FetchingForm = (props) => {\r\n    return(\r\n            <div className={s.form_fetching}>\r\n                <img src={loader_icon} alt=\"\"/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Addcounterblock = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.postCounter(values.counterName, values.counterDomen)\r\n    }\r\n\r\n\r\n    const blockSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <AddCounterReduxForm onSubmit={onSubmit}/>\r\n            case \"fetching\": return <FetchingForm />\r\n            case \"pixelCode\": return <PixelCodeBlock pixelCode={props.pixelCode}/>\r\n        }\r\n    }\r\n    const textSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <p className={s.text}>Добавьте ваш счётчик <br /><br /> Выбирите название для счётчика и укажите URL с которого хотите получать данные</p>\r\n            case \"fetching\": return ''\r\n            case \"pixelCode\": return <div className={s.last_text + \" \" + s.text}><p>Скопируйте код и вставьте его на ваш сайт через редактор кода.<br /><br />Сразу после этого в разделе данного счётчика\r\n                начнёт отображаться статистика о новых посетителях</p><button onClick={()=>{props.makeOneMore()}} className=\"attractive-button\">Создать другой счётчик</button></div>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Счётчики</h1>\r\n            </div>\r\n            <div className={`${s.row} row`}>\r\n                <div className=\"col-6\">\r\n                {textSelector()}\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {blockSelector()}\r\n            </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\nexport default Addcounterblock;","export const getPixelCode = (state) =>{\r\n    return state.countersPage.pixelCode\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.countersPage.pageSize\r\n}\r\nexport const getCurrentCounterInfo = (state) =>{\r\n    return state.countersPage.currentCounter.counterInfo\r\n}\r\nexport const getCurrentCounterUsers = (state) =>{\r\n    return state.countersPage.currentCounter.counterUsers\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.countersPage.currentCounter.totalUsers\r\n}\r\n\r\n\r\nexport const getYourCounters = (state) =>{\r\n    return state.countersPage.yourCounters.counterslistData\r\n}\r\n\r\nexport const getYourTotalCounters = (state) =>{\r\n    return state.countersPage.yourCounters.totalCounters\r\n}\r\n\r\nexport const getFriendsCounters = (state) =>{\r\n    return state.countersPage.friendsCounters.counterslistData\r\n}\r\n\r\nexport const getFriendsTotalCounters = (state) =>{\r\n    return state.countersPage.friendsCounters.totalCounters\r\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {postCounter} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {getPixelCode} from  \"../../../../../redux/selectors/counters-selectors\"\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst AddcounterblockContainer = (props) => {\r\n    let postCounter = (name, domen) =>{\r\n        props.postCounter({name: name, domen: domen})\r\n        setBlockState(\"fetching\")\r\n        console.log(props.pixelCode)\r\n    }\r\n\r\n    let makeOneMore = () =>{\r\n        setBlockState(\"form\")\r\n    }\r\n\r\n    const [blockState, setBlockState] = useState(\"form\")\r\n\r\n    useEffect(()=>{\r\n       if(props.pixelCode !== \"\"){\r\n           setBlockState(\"pixelCode\")\r\n       }\r\n    },[props.pixelCode])\r\n\r\n    return <Addcounterblock postCounter={postCounter}\r\n                            blockState={blockState}\r\n                            makeOneMore={makeOneMore}\r\n                            pixelCode={props.pixelCode}\r\n\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n      pixelCode: getPixelCode(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {postCounter}), WithAuthRedirect)(AddcounterblockContainer);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Счётчики</h1>\r\n\r\n                <div className=\"h1-buttons\">\r\n                    <NavLink to=\"/counters/addcounter\" className=\"h1-button\">\r\n                        <div className=\"h1-button-icon\">\r\n                            <img src={addIcon} alt=\"\"/>\r\n                        </div>\r\n                        <p className=\"h1-button-text\">Добавить счётчик</p>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route exact path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counter/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n                        <div className={s.owner}>\r\n                            <p>{props.login}</p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from \"react\";\r\nimport s from \"./pagination.module.scss\"\r\n\r\n\r\n\r\n\r\nconst PaginationComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    let pages =[]\r\n    for(let i=1; i<=pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n    let pagesButtonsElements = pages.map(page => <button key={page} className={props.currentPage === page ? s.page_button + \" \" + s.current_page : s.page_button}\r\n             onClick={() => {props.currentPage !== page && props.changePage(page)}}>{page}</button>)\r\n    let buttonsSelector = () =>{\r\n        if (props.pages === 'empty' || pagesCount === 1){\r\n            return (<></>)\r\n        }\r\n        else{\r\n            return   <nav className={s.pages_buttons}>{pagesButtonsElements}</nav>\r\n        }\r\n    }\r\n    return(\r\n            buttonsSelector()\r\n    )\r\n}\r\n\r\nconst Loader = (props) =>{\r\n    return(\r\n            props.elem\r\n    )\r\n}\r\n\r\nexport class Pagination extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            if(this.props.getCurrentPage === undefined){\r\n                this.setState({isFetching: false})\r\n            }\r\n        else{\r\n\r\n                if(this.state.pages !== prevState.pages){\r\n\r\n                    this.setState({isFetching: false})\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n\r\n            this.loaders.push(<Loader elem={this.props.loader} key={i} />)\r\n        }\r\n\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n        else{\r\n            this.setState({initialized: true})\r\n        }\r\n    }\r\n\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching){\r\n            return this.loaders\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n                <PaginationComponent currentPage={this.state.currentPage}\r\n                                     pageSize={this.props.pageSize}\r\n                                     totalPages={this.props.totalPages}\r\n                                     changePage={this.changePage}\r\n                                     pages={this.state.pages}\r\n                />\r\n               </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../counterslist.module.scss';\r\nimport Shortcounter from '../shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../../common/pagination/pagination\";\r\nimport plus from \"../../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У вас ещё нет счётчиков,<br /> добавьте свой первый счётчик</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst YourCountersList = (props) => {\r\n\r\n       let countersElement = []\r\n\r\n       if(props.countersListData.length !== 0){\r\n           countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}\r\n                                                                   login={counter.login}\r\n           /> )\r\n       }\r\n       else{\r\n           countersElement = 'empty'\r\n       }\r\n\r\n\r\n       let firstLoader = []\r\n            for(let i=0; i < props.pageSize; i++){\r\n            firstLoader.push(<LoadingCounter />)\r\n        }\r\n       return <><div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.owner}>\r\n                           <p>Владелец</p>\r\n                       </div>\r\n                   </div>\r\n                    <div className={s.list_head}><p>Ваши счётчики</p></div>\r\n                   <div className={s.list}>\r\n\r\n                     <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                           pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n                   </div>\r\n\r\n               </div>\r\n\r\n\r\n\r\n       </>\r\n\r\n\r\n}\r\nexport default YourCountersList;","import React from \"react\";\r\nimport YourCountersList from \"./yourCountersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeYourCounters} from \"../../../../../redux/counters-reducer\";\r\nimport {getYourCounters, getYourTotalCounters, getPageSize} from \"../../../../../redux/selectors/counters-selectors\";\r\n\r\nclass YourCountersListContainer extends React.Component{\r\n\r\n\r\n    changePage = (page) =>{\r\n        this.props.changeYourCounters(page)\r\n    }\r\n    render(){\r\n      return <YourCountersList\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n\r\n    return{\r\n        countersListData: getYourCounters(state),\r\n        pageSize: getPageSize(state),\r\n        totalCounters: getYourTotalCounters(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeYourCounters})(YourCountersListContainer)\r\n\r\n","import React from 'react';\r\nimport s from '../counterslist.module.scss';\r\nimport Shortcounter from '../shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../../common/pagination/pagination\";\r\nimport plus from \"../../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У ващих друзей ещё нет счётчиков</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nconst FriendsCountersList = (props) =>{\r\n    let countersElement = []\r\n\r\n    if(props.countersListData.length !== 0){\r\n        countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                              name={counter.name}\r\n                                                                              domen={counter.domen}\r\n                                                                              dayusers={counter.dayusers}\r\n                                                                              allusers={counter.allusers}\r\n                                                                              status={counter.status}\r\n                                                                              login={counter.login}\r\n        /> )\r\n    }\r\n    else{\r\n        countersElement = 'empty'\r\n    }\r\n    return(\r\n\r\n\r\n            <div className=\"container\">\r\n                <div className={s.list_head}><p>Счётчики ваших друзей</p></div>\r\n\r\n                <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                            pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FriendsCountersList;","import React from \"react\";\r\nimport FriendsCountersList from \"./friendsCountersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeFriendsCounters} from \"../../../../../redux/counters-reducer\";\r\nimport {getFriendsCounters, getFriendsTotalCounters, getPageSize} from \"../../../../../redux/selectors/counters-selectors\";\r\n\r\nclass FriendsCountersListContainer extends React.Component{\r\n    changePage = (page) =>{\r\n        this.props.changeFriendsCounters(page)\r\n    }\r\n    render(){\r\n      return <FriendsCountersList\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n\r\n    return{\r\n        countersListData: getFriendsCounters(state),\r\n        pageSize: getPageSize(state),\r\n        totalCounters: getFriendsTotalCounters(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeFriendsCounters})(FriendsCountersListContainer)\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport YourCounterslistContainer from \"./countersLists/yourCounters/yourCountersListContainer\";\r\nimport FriendsCountersListContainer from \"./countersLists/friendsCounters/friendsCountersListContainer\";\r\nimport {CountersListLoader} from \"../../common/loadingschemes/loadingSchemes\"\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {getCounters, clearCountersLists} from \"../../../redux/counters-reducer\";\r\nimport {getYourCounters} from \"../../../redux/selectors/counters-selectors\";\r\n\r\nconst Counters = (props) =>{\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        return( ()=>{\r\n            props.clearCountersLists()\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getCounters()\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if((props.countersListData && props.countersListData.length !== 0) && pageState === 'fetching'){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.countersListData])\r\n    return (\r\n\r\n            <>\r\n                {pageState === 'fetching' ?\r\n                        <CountersListLoader />: <>\r\n                    <Addcounter/>\r\n                    <YourCounterslistContainer pageState={pageState}/>\r\n                    <FriendsCountersListContainer /></>}\r\n                    </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countersListData: getYourCounters(state),\r\n        isInitialized: state.app.isInitialized,\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, {getCounters, clearCountersLists}), WithAuthRedirect)(Counters);","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Аудитории</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\nimport addIcon from \"../../../../assets/icons/h1-block/add.svg\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n            <div className=\"h1-block\">\r\n                <h1 className=\"h1\">Аудитории</h1>\r\n                <div className=\"h1-buttons\">\r\n                    <NavLink to='/audiences/addaudience' className=\"h1-button\">\r\n                        <div className=\"h1-button-icon\">\r\n                            <img src={addIcon} alt=\"\"/>\r\n                        </div>\r\n                        <p className=\"h1-button-text\">Добавить аудиторию</p>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <>\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from \"react\";\r\n\r\nexport const offsetText = (text) =>{\r\n    let textarr = text.split('\\n');\r\n    const isUrl = /^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/;\r\n    for (let i = 0; i < textarr.length; i=i+2){\r\n        textarr.splice(i+1,0,<br />)\r\n    }\r\n\r\n    for (let lineNumber = 0; lineNumber < textarr.length; lineNumber++){\r\n        if(typeof textarr[lineNumber] === 'string'){\r\n            let line = textarr[lineNumber].split(' ')\r\n            for (let wordNumber = 0; wordNumber < line.length; wordNumber++){\r\n                if(line[wordNumber] == '') {\r\n                    line[wordNumber] = <span>&nbsp;</span>\r\n                }\r\n                else{\r\n                    line[wordNumber] = line[wordNumber]+' ';\r\n                }\r\n\r\n                if(isUrl.test(line[wordNumber])){\r\n                    line[wordNumber] = <a target=\"blank\" href={'https://'+line[wordNumber]}>{line[wordNumber]}</a>\r\n                }\r\n            }\r\n            textarr[lineNumber] = line\r\n        }\r\n\r\n    }\r\n    return(\r\n            textarr\r\n    )\r\n}","import React from \"react\";\r\nimport loadingImg from \"../../assets/icons/small-loading.svg\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport s from \"./common.module.scss\"\r\nimport {offsetText} from \"../../utils/textTransformation\";\r\n\r\nexport class EditInput extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n                this.setState({isFetching: true})\r\n                this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n\r\n            if(prevState.isFetching === true){\r\n                this.setState({wasUpdated: true})\r\n                setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n                    {this.state.inputEditMode\r\n                            ?\r\n\r\n                                        <div>\r\n                                            <input onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                                   type=\"text\" className='plain_input' placeholder={this.props.placeholder}\r\n                                                   onBlur={() => {this.changeCondition(false)}} autoFocus={true}/>\r\n\r\n                                        </div>\r\n                            :\r\n                            <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.props.inputText}</div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class EditTextarea extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    changeCondition = (inputState,e) =>{\r\n        if(e){\r\n            console.log(e.target)\r\n        }\r\n\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n            this.setState({isFetching: true})\r\n            this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n            \r\n        }\r\n\r\n        if(prevState.isFetching === true && prevProps !== this.props){\r\n            this.setState({wasUpdated: true})\r\n            setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={(e) =>{this.changeCondition(true, e)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n            {this.state.inputEditMode\r\n                    ?\r\n\r\n                    <div>\r\n                        <textarea onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                  wrap=\"soft\" className='plain_textarea'\r\n                                  type=\"text\"  placeholder={this.props.placeholder}\r\n                                  cols=\"30\" rows=\"10\"\r\n                                  onBlur={() => {this.changeCondition(false)}} autoFocus={true}> </textarea>\r\n                    </div>\r\n                    :\r\n                    <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder :<p>{offsetText(this.props.inputText)}</p>}</div>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nimport {EditInput, EditTextarea} from \"../../../common/editinput\";\r\n\r\nclass YourProfile extends React.Component{\r\n    render (){\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <div className={s.photo_wr}>\r\n                                <p>Добавить фото</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <EditInput inputText={this.props.name} putInfo={this.props.putProfileInfo} name={\"name\"} placeholder={\"Введите ваше имя\"}/>\r\n                                <EditInput inputText={this.props.soName} putInfo={this.props.putProfileInfo} name={\"soName\"} placeholder={\"Введите вашу фамилию\"}/>\r\n                                <EditInput inputText={this.props.company} putInfo={this.props.putProfileInfo} name={\"company\"} placeholder={\"Введите вашу компанию\"}/>\r\n                                <EditTextarea inputText={this.props.description} putInfo={this.props.putProfileInfo} name={\"description\"} placeholder={\"Введите описание\"} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React from 'react';\r\nimport s2 from '../../friends/friends.module.scss';\r\nimport s from './yourFriends.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {LoadMore} from \"../../../common/loadMore\";\r\nimport friendIcon from '../../../../assets/icons/users.svg'\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\n\r\nconst NoFriends = () =>{\r\n    return <div className={s.noFriends}>\r\n        <img src={friendIcon} alt=\"\"/>\r\n        <p>У вас ещё нет друзей</p>\r\n    </div>\r\n}\r\n\r\nconst YourFriends = (props) => {\r\n    let friendsList = []\r\n    let deleteFriend = (userId, key) =>{\r\n     props.deleteFriend(userId, key)\r\n    }\r\n\r\n    let buttonSelector = (userId, buttonId) =>{\r\n        if(props.friends[buttonId].isFetching === false){\r\n            return <button className={s.delete_button} onClick={()=>{deleteFriend(userId, buttonId)}}>Удалить из друзей</button>\r\n        }\r\n        else{\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n    }\r\n    if(props.friends !== \"no friends\"){\r\n        let i = 0\r\n        friendsList = props.friends.map((friend)=> <div className={s2.line}>\r\n            <div className={s2.names_row}>\r\n                <p className=\"name\">{friend.name}</p>\r\n                <p className=\"soname\">{friend.soName}</p>\r\n            </div>\r\n            <div className={s2.company}>{friend.company}</div>\r\n            <div className={s2.description}><p className={s2.description_p}>{offsetText(friend.description)}</p></div>\r\n            {buttonSelector(friend.userId, i++)}\r\n\r\n        </div>)\r\n    }else{\r\n        friendsList = \"empty\"\r\n    }\r\n    return  (\r\n            <div className={s2.yourFriends}>\r\n                <h2>Ваши друзья:</h2>\r\n                <LoadMore pages={friendsList} pageSize={props.pageSize} totalPages={props.totalFriends}\r\n                          pageChanger={props.addToFriendsList} loader={<LoadingProfile />} emptyBlock={<NoFriends />}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default YourFriends;","import React from 'react';\r\nimport YourFriends from \"./yourFriends\";\r\nimport {getFriends, getPageSize, getTotalFriends, getDeletedFriend} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getFriendsList, deleteFriend, addFriendsList, setFriendsList} from \"../../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nclass YourFriendsContainer extends React.Component{\r\n    state ={\r\n        friends: []\r\n    }\r\n    componentDidMount() {\r\n        this.props.getFriendsList(1, this.props.pageSize)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            if(prevProps.deletedFriend !== this.props.deletedFriend){\r\n                this.deleteFriendLocal(this.props.deletedFriend[0])\r\n            }\r\n\r\n            if(prevProps.friends !== this.props.friends){\r\n                if(typeof this.props.friends === \"object\"){\r\n                    let friendsFetching = this.props.friends.map((friend)=> ({\r\n                        userId: friend.userId,\r\n                        name: friend.name,\r\n                        soName: friend.soName,\r\n                        company: friend.company,\r\n                        description: friend.description,\r\n                        isFetching: false\r\n                    }))\r\n                    this.setState({friends: [...this.state.friends, ...friendsFetching]})\r\n\r\n                }\r\n                else{\r\n                    if(typeof this.props.friends === 'object'){\r\n                        let friendsFetching = this.props.friends.map((friend)=> ({\r\n                            userId: friend.userId,\r\n                            name: friend.name,\r\n                            soName: friend.soName,\r\n                            company: friend.company,\r\n                            description: friend.description,\r\n                            isFetching: false\r\n                        }))\r\n                        this.setState({friends: friendsFetching})\r\n                    }\r\n                    else{\r\n                        this.setState({friends: this.props.friends})\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyFriends = {...this.state.friends}\r\n        copyFriends[buttonId].isFetching = true\r\n        this.setState({listButtons: copyFriends})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setFriendsList([],undefined)\r\n    }\r\n\r\n    deleteFriendLocal = (friendId) =>{\r\n        let friendsCopy = [...this.state.friends]\r\n        friendsCopy.splice(friendId, 1)\r\n        if(friendsCopy.length === 0){\r\n            this.setState({friends: \"no friends\"})\r\n        }\r\n        else{\r\n            this.setState({friends: friendsCopy})\r\n        }\r\n    }\r\n\r\n    deleteFriend = (userId, buttonId) =>{\r\n        this.changeButtonState(buttonId)\r\n        this.props.deleteFriend(userId, buttonId)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <div className=\"container\">\r\n                <YourFriends\r\n                        friends={this.state.friends}\r\n                        pageSize={this.props.pageSize}\r\n                        totalFriends={this.props.totalFriends}\r\n                        deleteFriend={this.deleteFriend}\r\n                        addToFriendsList={this.props.addFriendsList}\r\n\r\n\r\n                /></div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        friends: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalFriends: getTotalFriends(state),\r\n        deletedFriend: getDeletedFriend(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getFriendsList, deleteFriend, addFriendsList, setFriendsList})(YourFriendsContainer);","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport YourFriendsContainer from './yourFriends/yourFriendsContainer'\r\nconst ProfileSettings = () =>{\r\n    return(\r\n            <>\r\n                <div className=\"container h1-block\">\r\n                    <h1 className=\"h1\">Настройки</h1>\r\n                </div>\r\n               <YourProfileContainer />\r\n               <YourFriendsContainer />\r\n            </>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings);","import React from 'react';\r\n\r\nimport styled from \"styled-components\";\r\nimport background from \"../../assets/summary-bg.jpg\";\r\n\r\nexport const BackGround = styled.div`\r\nbackground: url(${background});\r\ndisplay: block;\r\nposition: fixed;\r\ntop:0;\r\nleft: 0;\r\nright: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: -1;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\n`","import React, {useEffect, useState} from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Button} from \"../../../components/common/formControls\"\r\nimport {required} from \"../../../utils/validation\";\r\nimport doneImg from \"../../../assets/icons/done.svg\";\r\nimport {BackGround} from \"../../../components/common/background\"\r\nimport styled from 'styled-components'\r\n\r\nconst SuccessForm = () =>{\r\n    const [redirect, setRedirect] = useState(false)\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setRedirect(true)},1500)\r\n    },[])\r\n    return(\r\n            <div className={s.success_auth}>\r\n                {redirect && <Redirect to='/summary' />}\r\n                <img src={doneImg} alt=\"\"/><p>Вы авторизованы</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst SendButton = styled(Button)`\r\n float: right;\r\n margin-top: 60px;\r\n`\r\n\r\n\r\nconst LoginForm = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <h1 className={s.h1}>Вход</h1>\r\n                <div className={s.form_danger_wr}>{props.error ? <span className={s.form_danger}>{props.error}</span> : ''}</div>\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar} />\r\n                <Field name=\"emailInput\" type=\"text\"  component={Input} placeholder=\"Почта\" validate={required}/>\r\n                <Field name=\"passwordInput\" type=\"password\"  component={Input} placeholder=\"Пароль\" validate={required}/>\r\n                <p className={s.dont_reg_yet}>Нет учётной записи? <NavLink to='signup'>Создайте её!</NavLink></p>\r\n                <SendButton primary disabled={props.submitting  || (props.invalid && props.anyTouched)} type=\"submit\">Войти</SendButton>\r\n\r\n\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login-form'})(LoginForm)\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendLoginRequest(values.emailInput, values.passwordInput)\r\n\r\n    }\r\n\r\n\r\n    return  (\r\n            <>\r\n           <BackGround />\r\n          <div className=\"fullpage_container\">\r\n              <div className={s.login_block}>\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <LoginReduxForm isFetching={props.isFetching} onSubmit={onSubmit}/>\r\n                          </div>\r\n                          :\r\n                          <SuccessForm />\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    sendLoginRequest = (email, password) => {\r\n        this.props.loginThunkCreator(email, password)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <LoginBlock\r\n                       isFetching={this.props.isFetching}\r\n                       isAuth={this.props.isAuth}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n            />\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, PasswordScoreInput, Textarea} from \"../../common/formControls\";\r\nimport {required, checkLogin, checkEmail, checkPassword, passwordsMatch} from \"../../../utils/validation\";\r\nimport {BackGround} from \"../../common/background\";\r\n\r\nconst SignUpForm = (props) =>{\r\n    return (\r\n\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <h1 className={s.h1}>Регистрация</h1>\r\n                 {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                    <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                    <Field name=\"login\" type=\"text\"  component={Input} placeholder=\"Придумайте логин\" validate={[required, checkLogin]}/>\r\n                    <Field name=\"email\" type=\"text\"  component={Input} placeholder=\"Ваша почта\" validate={[required, checkEmail]}/>\r\n                    <Field name=\"password\" type=\"password\"  component={PasswordScoreInput} placeholder=\"Придумайте пароль\" validate={[required, checkPassword]}/>\r\n                    <Field name=\"repeatPassword\" type=\"password\"  component={Input} placeholder=\"Повторите пароль\" validate={[required, passwordsMatch]}/>\r\n                    <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n                    <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n\r\n                </form>\r\n\r\n    )\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({form: 'signup-form'})(SignUpForm)\r\n\r\nconst SignUpFormBlock = (props) =>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendSignUpRequest( values.email, values.login, values.password)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.signup_form}>\r\n                <SignUpReduxForm onSubmit={onSubmit} isFetching={props.isFetching}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n\r\n                <form className={s.profile_form} onSubmit={props.handleSubmit}>\r\n                    <Field name=\"name\" type=\"text\"  component={Input} placeholder=\"Имя\" validate={[required]}/>\r\n                    <Field name=\"soName\" type=\"text\"  component={Input} placeholder=\"Фамилия\" validate={[required]}/>\r\n                    <Field name=\"company\" type=\"text\"  component={Input} placeholder=\"Компания\" />\r\n                    <Field name=\"about\" type='text' component={Textarea} placeholder=\"О вас\" validate={[required]} />\r\n                    <button className='control_button' disabled={props.submitting || props.error}>Отправить</button>\r\n                </form>\r\n\r\n    )\r\n}\r\nconst ProfileFormReduxForm = reduxForm({form: 'signupProfile-form'})(ProfileForm)\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileFormBlock = (props)=>{\r\n    return(\r\n\r\n                <div className={s.profile_form_wr}>\r\n\r\n\r\n                    <div className={s.add_photo_row}>\r\n                        <div className={s.photo_cont}></div>\r\n                        <p className={s.add_photo}>Добавить фото</p>\r\n                    </div>\r\n                    <ProfileFormReduxForm />\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <>\r\n            <BackGround />\r\n                <div className=\"fullpage_container\">\r\n                    <div className={s.signup_block}>\r\n                    {props.signUpState === 'signUpForm' ?\r\n                   <ProfileFormBlock profileId={props.profileId} email={props.email}\r\n                                  login={props.login} regDate={props.regDate}/> : <SignUpFormBlock\r\n                        isFetching={props.isFetching} sendSignUpRequest={props.sendSignUpRequest}\r\n                        />\r\n                    }\r\n                    </div>\r\n                </div>\r\n                </>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSignUpState, signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n    sendSignUpRequest = (email,login,password) =>{\r\n      this.props.signUpThunkCreator(email,login,password)\r\n    }\r\n    render() {\r\n        return <SignUpBlock\r\n\r\n                isFetching={this.props.isFetching}\r\n                signUpState={this.props.signUpState}\r\n                profileId={this.props.profileId}\r\n                email={this.props.email}\r\n                login={this.props.login}\r\n                regDate={this.props.regDate}\r\n                sendSignUpRequest={this.sendSignUpRequest}\r\n\r\n\r\n\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isFetching: state.auth.isFetching,\r\n        signUpState: state.auth.signUpState,\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {setSignUpState, signUpThunkCreator})(SignUpContainer)","import React from 'react';\r\nimport s from './newFriends.module.scss';\r\nimport s2 from './../friends.module.scss'\r\nimport openfolder from '../../../../assets/icons/mail-open.svg'\r\nconst Loader = () =>{\r\n    return (<>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n        </>\r\n)\r\n}\r\n\r\nconst NewFriends = (props) => {\r\n        let acceptProposal = (userId, buttonId) =>{\r\n            props.acceptProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n        let denyProposal = (userId, buttonId) =>{\r\n            props.denyProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n\r\n\r\n        let proposalsList = []\r\n        let buttonSelector = (userId, buttonId) =>{\r\n\r\n                if(props.buttonsState[buttonId] && props.buttonsState[buttonId].isFetching === false){\r\n                    return <div className={s.buttons_row}>\r\n                        <button className={s.deny} onClick={() =>{denyProposal(userId, buttonId)}}>Отказать</button>\r\n                        <button className={s.accept} onClick={()=>{acceptProposal(userId, buttonId)}}>Принять</button>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <p>Загрузка</p>\r\n                }\r\n\r\n\r\n        }\r\n\r\n        if(props.isFetching === false){\r\n            if(props.proposals !== \"no proposals\"){\r\n                let i = 0\r\n                proposalsList = props.proposals.map((proposal)=> <div key={proposal.userId} className={s.line}>\r\n                    <div className={s.names_row} >\r\n                        <p className=\"name\">{proposal.name}</p>\r\n                        <p className=\"soname\">{proposal.soName}</p>\r\n                    </div>\r\n                    {buttonSelector(proposal.userId, i++)}\r\n                </div>)\r\n            }else{\r\n                proposalsList = <div className={s.noProposals}>\r\n                    <img src={openfolder} alt=\"\"/>\r\n                    <p>У вас нет заявок</p>\r\n                </div>\r\n            }\r\n        }\r\n        else {\r\n            proposalsList = <Loader />\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.newFriends}>\r\n                <h2>Заявки в друзья:</h2>\r\n                {proposalsList}\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default NewFriends;","import React from 'react';\r\nimport NewFriends from \"./newFriends\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getProposalsList} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getProposals, acceptProposal, denyProposal} from \"../../../../redux/profile-reducer\";\r\n\r\nclass NewFriendsContainer extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        buttonsState: []\r\n    }\r\n    componentDidMount() {\r\n     this.setState({isFetching: true})\r\n     this.props.getProposals()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({isFetching: false})\r\n            if(typeof this.props.proposals == 'object'){\r\n                let listButtons = this.props.proposals.map((profile)=> ({isFetching: false}))\r\n                this.setState({buttonsState: listButtons})\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyButtonsState = {...this.state.buttonsState}\r\n        copyButtonsState[buttonId].isFetching = true\r\n        this.setState({buttonsState: copyButtonsState})\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <NewFriends proposals={this.props.proposals}\r\n                            acceptProposal={this.props.acceptProposal}\r\n                            denyProposal={this.props.denyProposal}\r\n                            isFetching={this.state.isFetching}\r\n                            buttonsState={this.state.buttonsState}\r\n                            chanhgeButtonsState={this.changeButtonState}\r\n\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n       proposals: getProposalsList(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProposals, acceptProposal, denyProposal})(NewFriendsContainer);","import React from 'react';\r\nimport s2 from '../friends.module.scss';\r\nimport s from './usersList.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {Pagination} from \"../../../common/pagination/pagination\";\r\n\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\nconst UsersList = (props) => {\r\n    let postProposal = (id, buttonId) =>{\r\n       props.postProposal(id, props.currentPage)\r\n       props.changeButtonState(buttonId)\r\n\r\n    }\r\n\r\n    let deleteProposal = (id, buttonId) =>{\r\n       props.deleteProposal(id, props.currentPage)\r\n        props.changeButtonState(buttonId)\r\n    }\r\n\r\n\r\n    let buttonSelector = (status,id, buttonId) =>{\r\n        if(props.buttonsStates[buttonId] && props.buttonsStates[buttonId].isFetching === false){\r\n            switch (status){\r\n                case 'It is you': return\r\n                case 'proposal sent': return <p onClick={()=>{deleteProposal(id, buttonId)}}>Заявка отправлена</p>\r\n                case 'Your friend': return <p>Ваш друг</p>\r\n                case 'plain user':return <button onClick={()=>{postProposal(id, buttonId)}} className={s.add_button}>Добавить в друзья</button>\r\n                default: return\r\n            }\r\n        }\r\n        else {\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n\r\n    }\r\n    let i = 0\r\n    let profilesArr = props.profilesList.map((profile) =>\r\n            <div className={s2.line} key={profile._id.toString()}>\r\n                <div className={s2.names_row}>\r\n                   <p className=\"name\">{profile.name}</p>\r\n                   <p className=\"soname\">{profile.soName}</p>\r\n                </div>\r\n                <div className={s2.company}>{profile.company}</div>\r\n                <div className={s2.description}><p className={s2.description_p}>{offsetText(profile.description)}</p></div>\r\n                {buttonSelector(profile.friendStatus, profile._id, i++)}\r\n            </div>\r\n    )\r\n\r\n    return  (\r\n            <div className={s.usersList}>\r\n                <h2>Список пользователей:</h2>\r\n                 <Pagination pages={profilesArr} pageSize={props.pageSize} totalPages={props.totalProfiles}\r\n                             pageChanger={props.getProfilesList} loader={<LoadingProfile />} getCurrentPage={props.getCurrentPage}/>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default UsersList;","import React from 'react';\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilesList, postProposal, deleteProposal, setProposals} from \"../../../../redux/profile-reducer\";\r\nimport {selectProfilesList, getTotalProfiles, getPageSize} from \"../../../../redux/selectors/profileselectors\"\r\nclass UsersListContainer extends React.Component{\r\n\r\n    state ={\r\n        listButtons: [],\r\n        profilesList: [],\r\n        currentPage: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProfilesList(1, this.props.pageSize)\r\n\r\n    }\r\n\r\n    getCurrentPage = (currentPage) =>{\r\n        this.setState({currentPage: currentPage})\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyListButtons = {...this.state.listButtons}\r\n        copyListButtons[buttonId].isFetching = true\r\n        this.setState({listButtons: copyListButtons})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props !== prevProps){\r\n            this.setState({profilesList: this.props.profilesList})\r\n            for(let i = 0; i < this.state.profilesList.length; i++){\r\n\r\n                if(this.state.profilesList[i] && this.props.profilesList[i]){\r\n\r\n                    if( this.state.profilesList[i].friendStatus !== this.props.profilesList[i].friendStatus){\r\n                        let copyListButtons = {...this.state.listButtons}\r\n                        copyListButtons[i].isFetching = false\r\n                        this.setState({listButtons: copyListButtons})\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            if(this.state.listButtons.length === 0){\r\n                let listButtons = this.props.profilesList.map((profile)=> ({isFetching: false}))\r\n                this.setState({listButtons: listButtons})\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setProposals([])\r\n    }\r\n\r\n    getProfilesList = (page) =>{\r\n        this.props.getProfilesList(page,this.props.pageSize)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <UsersList profilesList={this.props.profilesList}\r\n                           totalProfiles={this.props.totalProfiles}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.state.currentPage}\r\n                           getProfilesList={this.getProfilesList}\r\n                           postProposal={this.props.postProposal}\r\n                           deleteProposal={this.props.deleteProposal}\r\n                           changeButtonState={this.changeButtonState}\r\n                           buttonsStates={this.state.listButtons}\r\n                           getCurrentPage={this.getCurrentPage}\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n      profilesList: selectProfilesList(state),\r\n      totalProfiles: getTotalProfiles(state),\r\n      pageSize: getPageSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProfilesList, postProposal, deleteProposal, setProposals})(UsersListContainer);","import React from 'react';\r\nimport NewFriendsContainer from \"./newFriends/newFriendsContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {FriendsPageLoader} from \"../../common/loadingschemes/loadingSchemes\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst FriendsPage = (props) => {\r\n    return  (\r\n            <>\r\n                {props.isInitialized ?\r\n\r\n\r\n                        <div className=\"container\">\r\n                            <div className=\"h1-block\">\r\n                            <h1 className=\"h1\">Друзья</h1>\r\n                        </div>\r\n                             <p>Добавляйте другие аккаунты в друзья, для совместной работы.</p>\r\n                            <NewFriendsContainer />\r\n                            <UsersListContainer />\r\n                         </div>\r\n\r\n                    : <FriendsPageLoader />}\r\n            </>\r\n\r\n\r\n\r\n                    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(FriendsPage)","import React from \"react\";\r\nimport s from './counterInfo.module.scss'\r\nimport PixelCodeBlock from \"../../pixelcode/pixelCode\";\r\nimport styled from \"styled-components\"\r\n\r\nconst KeyNumbersWr = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nwidth: 100%;\r\nmargin-bottom: 12px;\r\n@media screen and (max-width: 600px) {\r\n  flex-wrap: wrap;\r\n  margin-bottom: 0px;\r\n}\r\n`\r\n\r\nconst KeyNumberBlock = styled.div`\r\nwidth: calc(50% - 6px);\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nheight: 94px;\r\nbackground: #f4f4f4;\r\n@media screen and (max-width: 600px) {\r\n  width: 100%;\r\n  margin-bottom: 12px;\r\n}\r\n`\r\n\r\nconst KeyNumber = styled.div`\r\nwidth: 94px;\r\nheight: 100%;\r\ntext-align: center;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\np{\r\nfont-size: 30px;\r\n\r\n}\r\n\r\n`\r\n\r\nconst KeyNumberName = styled.div`\r\nwidth: calc(100% - 94px);\r\nheight: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: flex-start;\r\n\r\np{\r\npadding-right: 10px;\r\n}\r\n`\r\nconst CounterDesc = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: center;\r\nheight: 52px;\r\nbackground: #f4f4f4;\r\nmargin-bottom: 12px;\r\n`\r\nconst CounterDescLabel = styled.div`\r\nwidth: 160px;\r\np{\r\n    font-size: 16px;\r\n    padding-left: 12px;\r\n    color: #616161;\r\n}\r\n@media screen and (max-width: 500px){\r\n  width: 120px;\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n}\r\n`\r\nconst CounterDescText = styled.div`\r\nwidth: calc(100% - 160px);\r\n@media screen and (max-width: 500px){\r\n  width: calc(100% - 120px);\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst CounterInfo = (props) => {\r\n\r\n    return (\r\n            <>\r\n            <div className=\"container h1-block\"><h1 className=\"h1\">{props.counterInfo.name}</h1></div>\r\n\r\n            <div className=\"container\">\r\n                <div className={`${s.row}  row`}>\r\n\r\n\r\n\r\n                    <div className={`${s.counterInfo} col-6`}>\r\n                        <KeyNumbersWr>\r\n                            <KeyNumberBlock>\r\n                                    <KeyNumber><p>{props.counterInfo.dayusers}</p></KeyNumber>\r\n                                    <KeyNumberName><p>Пользователи за день</p></KeyNumberName>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                    <KeyNumber><p>{props.counterInfo.allusers}</p></KeyNumber>\r\n                                    <KeyNumberName><p>Пользователей всего</p></KeyNumberName>\r\n                            </KeyNumberBlock>\r\n                        </KeyNumbersWr>\r\n\r\n                        <CounterDesc>\r\n                            <CounterDescLabel><p>Id счётчика</p></CounterDescLabel>\r\n                            <CounterDescText><p>{props.counterInfo._id}</p></CounterDescText>\r\n                        </CounterDesc>\r\n\r\n                        <CounterDesc>\r\n                            <CounterDescLabel><p>Адрес счётчика</p></CounterDescLabel>\r\n                            <CounterDescText><p>{props.counterInfo.domen}</p></CounterDescText>\r\n                        </CounterDesc>\r\n\r\n                        <CounterDesc>\r\n                            <CounterDescLabel><p>Владелец</p></CounterDescLabel>\r\n                            <CounterDescText><p>{props.counterInfo.login}</p></CounterDescText>\r\n                        </CounterDesc>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <PixelCodeBlock pixelCode={props.counterInfo.pixelCode} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CounterInfo","import React, {useEffect, useState} from \"react\";\r\nimport CounterInfo from \"./counterInfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst CounterInfoContainer = (props) => {\r\n\r\n\r\n    return <CounterInfo counterId={props.counterId}\r\n                        counterInfo={props.counterInfo}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {})(CounterInfoContainer);","import React from \"react\";\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getTotalUsers} from '../../../../../redux/selectors/counters-selectors'\r\nimport {getMoreUsers} from \"../../../../../redux/counters-reducer\";\r\n\r\n\r\nconst UsersListContainer = (props) => {\r\n\r\n\r\n    return <UsersList  usersList={props.counterUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(UsersListContainer);","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport CounterInfoContainer from \"./counterInfo/counterInfoContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {clearCurrentCounter, getCurrentCounter} from \"../../../../redux/counters-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentCounterUsers, getCurrentCounterInfo} from \"../../../../redux/selectors/counters-selectors\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {CounterPageLoader} from \"../../../../components/common/loadingschemes/loadingSchemes\";\r\nimport {compose} from \"redux\";\r\n\r\nconst CounterPage = (props) =>{\r\n    let {counterId} = useParams()\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n\r\n    useEffect(()=>{\r\n\r\n        return () =>{\r\n            props.clearCurrentCounter()\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.isInitialized){\r\n            props.getCurrentCounter(counterId)\r\n        }\r\n        else{\r\n            setPageState('fetching')\r\n        }\r\n\r\n    }, [props.isInitialized])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if((props.counterInfo && props.counterInfo.length !== 0) && pageState === 'fetching'){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n    },[props.counterInfo])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<CounterPageLoader /> :<><CounterInfoContainer counterInfo={props.counterInfo}\r\n                    counterId={counterId} />\r\n                    <UsersListContainer counterUsers={props.counterUsers}\r\n                    counterId={counterId}/></> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n       counterInfo: getCurrentCounterInfo(state),\r\n       counterUsers: getCurrentCounterUsers(state),\r\n       isInitialized: state.app.isInitialized,\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{getCurrentCounter, clearCurrentCounter}), WithAuthRedirect)(CounterPage);","import React from \"react\";\r\nimport s from './userPage.module.scss'\r\nimport mongoDate from \"../../utils/mongoDate\";\r\nconst UserPage = (props) => {\r\n    let userInfo = props.userInfo\r\n\r\n\r\n\r\n\r\n    let users = []\r\n    let lastDivider = ''\r\n    props.userSessions.forEach((item, index)=>{\r\n        if(item.awayTime && mongoDate(item.awayTime).comparativeDate !== lastDivider){\r\n            lastDivider = mongoDate(item.awayTime).comparativeDate\r\n            users.push({divider: mongoDate(item.awayTime).comparativeDate}, item)\r\n\r\n        }\r\n        else{\r\n            users.push(item)\r\n        }\r\n\r\n    })\r\n    let sessionCount = 0\r\n    users = users.map((user) => {\r\n        if(user.divider) {\r\n            return <div className={s.date_divider}>{user.divider}</div>\r\n        }\r\n        else{\r\n            return <div className={s.session}>\r\n                <span className={s.sessionNumber}>{++sessionCount}</span>\r\n                <div className={s.session_line}>\r\n                    {user.entryTime ? <p className={s.time}>{mongoDate(user.entryTime).time}</p> : <p className={s.notdefined}>Не определено</p>}\r\n                    <div className={s.time_line}></div>\r\n                    {user.awayTime ? <p className={s.time}>{mongoDate(user.awayTime).time}</p> : <p className={s.notdefined}>Не определено</p>}\r\n                </div>\r\n\r\n            </div>}\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n                <>\r\n                <div className=\"container h1-block\">\r\n                    <h1 className='h1'>Пользователь <span className={s.tysId}>{userInfo._id}</span></h1>\r\n                </div>\r\n                <div className='container'>\r\n\r\n\r\n                    <div className={s.row}>\r\n                        <div className={s.block + \" \" + s.col_6}>\r\n\r\n                                <h3 className={s.h3}>Основное:</h3>\r\n\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">URL</label>\r\n                                    <p>{userInfo.referer}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Ip</label>\r\n                                    <p>{userInfo.data.ipInfo.query}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Страна</label>\r\n                                    <p>{userInfo.data.ipInfo.country}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Город</label>\r\n                                    <p>{userInfo.data.ipInfo.city}</p>\r\n                                </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.block + \" \" + s.col_6}>\r\n\r\n                                <h3 className={s.h3}>Посещения:</h3>\r\n                            <div className={s.sessions_cont}>\r\n                                {users}\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.device_info}>\r\n                        <h4 className={s.h4}>Устройство:</h4>\r\n                        <div className={s.row}>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>Браузер</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Имя</label>\r\n                                    <p>{userInfo.data.device.browser.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.browser.version}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Осн. версия</label>\r\n                                    <p>{userInfo.data.device.browser.majorVersion}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>ОС</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Название</label>\r\n                                    <p>{userInfo.data.device.os.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.os.version}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.block + \" \" + s.col_4}>\r\n                                <h5 className={s.col_head}>Об утстройстве</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Производитель</label>\r\n                                    <p>{userInfo.data.device.device.vendor}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Модель</label>\r\n                                    <p>{userInfo.data.device.device.model}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Тип</label>\r\n                                    <p>{userInfo.data.device.device.type}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Процессор</label>\r\n                                    <p>{userInfo.data.device.cpu.architecture}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <section>\r\n                        <h4 className={s.h4}>Расшифровка IP:</h4>\r\n                            <div className={s.row}>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>География</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Код страны</label>\r\n                                        <p>{userInfo.data.ipInfo.countryCode}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Регион</label>\r\n                                        <p>{userInfo.data.ipInfo.regionName}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. широта</label>\r\n                                        <p>{userInfo.data.ipInfo.lat}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. долгота</label>\r\n                                        <p>{userInfo.data.ipInfo.lon}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>Оператор</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Провайдер</label>\r\n                                        <p>{userInfo.data.ipInfo.isp}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Организация</label>\r\n                                        <p>{userInfo.data.ipInfo.org}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">AS</label>\r\n                                        <p>{userInfo.data.ipInfo.as}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className={s.block + \" \" + s.col_4}>\r\n                                    <h5 className={s.col_head}>Остальное</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Индекс</label>\r\n                                        <p>{userInfo.data.ipInfo.zip}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Часовой пояс</label>\r\n                                        <p>{userInfo.data.ipInfo.timezone}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                    </section>\r\n                    <section>\r\n                        <h4 className={s.h4}>Заголовки:</h4>\r\n\r\n                        <div className={s.block + \" \" + s.col_12}>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">user_agent</label>\r\n                                <p>{userInfo.data.headers.user_agent}</p>\r\n                            </div>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">accept</label>\r\n                                <p>{userInfo.data.headers.accept}</p>\r\n                            </div>\r\n                            <div className={s.label_row}>\r\n                                <label htmlFor=\"\">languages</label>\r\n                                <p>{userInfo.data.headers.languages}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </section>\r\n                </div>\r\n                    </>\r\n        )\r\n\r\n}\r\n\r\nexport default UserPage","import {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUserInfoFromState = (state) =>{\r\n    return state.users.userInfo\r\n}\r\n\r\nexport const getSessions = (state) =>{\r\n    return state.users.userInfo.sessions\r\n}\r\n\r\nexport const getUserSessionsList = createSelector(getSessions, (sessions) => {\r\n    let getSessions = (sessions) => {\r\n        let sessionsArray = []\r\n        for (let i = 0; sessions.length  > i ; i = i + 2) {\r\n            let nextIndex = i + 1\r\n            let session = ''\r\n\r\n            const makeSessionPare = (enterTime, awayTime) =>{\r\n                return  {\r\n                    entryTime : enterTime,\r\n                    awayTime : awayTime\r\n                }\r\n            }\r\n\r\n            if(sessions[i] && sessions[nextIndex]){\r\n                if(Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"goAwayTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, sessions[nextIndex].goAwayTime)\r\n                }\r\n                else if (Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"entryTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, undefined)\r\n                    i--\r\n                }\r\n            }\r\n            else if (sessions[i]){\r\n                session = makeSessionPare(sessions[i].entryTime,  undefined)\r\n            }\r\n            else {\r\n                session = makeSessionPare(undefined, undefined)\r\n            }\r\n\r\n            sessionsArray.unshift(session)\r\n        }\r\n\r\n\r\n        return sessionsArray\r\n\r\n    }\r\n       if(sessions !== undefined){\r\n           return getSessions(sessions)\r\n       }\r\n       else{\r\n           return ''\r\n       }\r\n\r\n\r\n\r\n})\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport UserPage from \"./userPage\";\r\nimport {clearUserInfo, getUserInfo} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserInfoFromState, getUserSessionsList} from '../../redux/selectors/users-selectors'\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {UserPageLoader} from \"../common/loadingschemes/loadingSchemes\";\r\n\r\nconst UserPageContainer = (props) =>{\r\n    let {tysId} = useParams()\r\n\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        props.getUserInfo(tysId)\r\n        return () =>{\r\n            props.clearUserInfo()\r\n        }\r\n    },[])\r\n\r\n     useEffect(()=>{\r\n        if(props.userInfo !== \"\"){\r\n            setPageState(\"main\")\r\n        }\r\n    },[props.userInfo])\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<UserPageLoader /> :<UserPage userInfo={props.userInfo}\r\n                                                                      userSessions={props.userSessions}\r\n                                                                      tysId={props.tysId}\r\n                /> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        userInfo: getUserInfoFromState(state),\r\n        userSessions: getUserSessionsList(state)\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps,{clearUserInfo, getUserInfo}), WithAuthRedirect)(UserPageContainer);","import React from 'react';\r\nimport s from './notFoundPage.module.scss';\r\nimport notFoundGif from '../../../assets/notFound.gif'\r\nimport  {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NotFoundPage = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.container}>\r\n                <div className={s.row}>\r\n                    <div className={s.gif_cont}>\r\n                        <img src={notFoundGif} alt=\"\"/>\r\n                    </div>\r\n                    <div className={s.text}>\r\n                        <h1>Упс! Что-то пошло не так</h1>\r\n                        <NavLink to={'/'} >Вернуться на главную страницу</NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default NotFoundPage;","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\n\nimport SideBarContainer from \"./components/sidebar/sidebarContainer\";\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport  {Route, Switch} from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nimport FriendsPage from \"./components/profile/friends/friends\";\nimport CounterPage from \"./components/content/counters/counterPage/counterPage\";\nimport {InitializingApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nimport UserPageContainer from \"./components/userPage/userPageContainer\";\nimport NotFoundPage from \"./components/content/NotFoundPage/notFoundPage\";\nimport {getMenuState} from \"./redux/selectors/app-selectors\";\nimport {compose} from \"redux\";\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.InitializingApp()\n    }\n\n\n    render (){\n        return <div className=\"app-wrapper\">\n\n            <div className=\"row\">\n\n                <SideBarContainer />\n                <div className={this.props.menuState === \"collapsed\" ? \"content\" : \"content sidebar_closed\"}>\n                    <Switch>\n                    <Route exact path='/'  render={ () => <Summary  /> } />\n                    <Route  path='/summary'  render={ () => <Summary  /> } />\n                    <Route  path='/counter/:counterId' render={()=> <CounterPage />} />\n                    <Route  path='/counters/' render={() => <Counters />}/>\n                    <Route  path='/audiences' render={() => <Audiences />} />\n                    <Route  path='/profile' render={() => <ProfileContainer />} />\n                    <Route  path='/profilesettings' render={() => <ProfileSettings />} />\n                    <Route  path='/login'  render={()=> <LoginContainer />} />\n                    <Route  path='/signup' render={()=> <SignUpContainer />} />\n                    <Route  path='/friends' render={()=> <FriendsPage />} />\n                    <Route  path='/users/:tysId' render={()=><UserPageContainer />} />\n                    <Route path='*' render={()=><NotFoundPage />} />\n                    </Switch>\n            </div>\n\n\n\n            </div>\n        </div>\n    }\n}\n\n\nlet mapStateToProps = (state) =>{\n    return{\n        menuState: getMenuState(state)\n    }\n}\n\n\nexport default compose(connect(mapStateToProps, {InitializingApp}))(App)\n\n\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {CookiesProvider} from \"react-cookie\";\n\n\n\n    ReactDOM.render(\n            <CookiesProvider>\n                <BrowserRouter>\n                    <Provider store={store}>\n                        <App  />\n                    </Provider>\n                </BrowserRouter>\n            </CookiesProvider> ,\n            document.getElementById('root')\n            );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"h1\":\"login_h1__XRWpf\",\"login_block\":\"login_login_block__14dA7\",\"form_danger_wr\":\"login_form_danger_wr__Z8K09\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\",\"form_danger\":\"login_form_danger__2x0dg\",\"success_auth\":\"login_success_auth__1Bv0W\",\"login_container\":\"login_login_container__rIdfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_row\":\"userPage_label_row__2k2Vo\",\"sessions_cont\":\"userPage_sessions_cont__KgoZv\",\"h4\":\"userPage_h4__1uA9A\",\"h3\":\"userPage_h3__19Kt-\",\"main_info\":\"userPage_main_info__G48F6\",\"visits\":\"userPage_visits__32s7Y\",\"session_line\":\"userPage_session_line__1H_I5\",\"session\":\"userPage_session__2cKEr\",\"time\":\"userPage_time__1uscj\",\"notdefined\":\"userPage_notdefined__9FmxH\",\"time_line\":\"userPage_time_line__20dSP\",\"date_divider\":\"userPage_date_divider__x2Thq\",\"col_head\":\"userPage_col_head__2HiGw\",\"block\":\"userPage_block__1Liia\",\"col_4\":\"userPage_col_4__2FpHk\",\"col_6\":\"userPage_col_6__rdc5i\",\"col_12\":\"userPage_col_12__1_pxn\",\"row\":\"userPage_row__2I3SL\",\"tysId\":\"userPage_tysId__3Sf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"newFriends_line__QT2su\",\"names_row\":\"newFriends_names_row__2avSk\",\"buttons_row\":\"newFriends_buttons_row__23C0v\",\"deny\":\"newFriends_deny__2F1X5\",\"accept\":\"newFriends_accept__3r7sm\",\"newFriends\":\"newFriends_newFriends__1JkmK\",\"noProposals\":\"newFriends_noProposals__2uuG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__1Nria\",\"name\":\"shortcounter_name__Xmzxi\",\"domen\":\"shortcounter_domen__2aB4J\",\"dayusers\":\"shortcounter_dayusers__RFuyn\",\"totalusers\":\"shortcounter_totalusers__CL71_\",\"owner\":\"shortcounter_owner__8oobN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","module.exports = __webpack_public_path__ + \"static/media/add.9962b909.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.5cdbb761.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeTextarea\":\"pixelCode_codeTextarea__1GDi0\",\"codeBlock\":\"pixelCode_codeBlock__sU4e9\",\"copyButton_wr\":\"pixelCode_copyButton_wr__1tPxw\",\"copied_label\":\"pixelCode_copied_label__32fvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_button\":\"pagination_page_button__32Qa8\",\"current_page\":\"pagination_current_page__2apnm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"notFoundPage_container__3Ox4T\",\"row\":\"notFoundPage_row__2sG7W\",\"gif_cont\":\"notFoundPage_gif_cont__3cjlX\",\"text\":\"notFoundPage_text__3lEes\"};","module.exports = __webpack_public_path__ + \"static/media/plus.78208480.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flag\":\"usersList_flag__2GSHq\",\"flag-AD\":\"usersList_flag-AD__28-Ld\",\"flag-AE\":\"usersList_flag-AE__-Tvo4\",\"flag-AG\":\"usersList_flag-AG__3hY5f\",\"flag-AM\":\"usersList_flag-AM__w92z3\",\"flag-AR\":\"usersList_flag-AR__iDlvg\",\"flag-AT\":\"usersList_flag-AT__1F4KS\",\"flag-AU\":\"usersList_flag-AU__2BQBr\",\"flag-BE\":\"usersList_flag-BE__u-KjT\",\"flag-BF\":\"usersList_flag-BF__30Pnv\",\"flag-BG\":\"usersList_flag-BG__3E-M9\",\"flag-BO\":\"usersList_flag-BO__3oA8e\",\"flag-BR\":\"usersList_flag-BR__1rqh-\",\"flag-CA\":\"usersList_flag-CA__AckMB\",\"flag-CD\":\"usersList_flag-CD__3aUbU\",\"flag-CG\":\"usersList_flag-CG__13pgd\",\"flag-CH\":\"usersList_flag-CH__2L8EY\",\"flag-CL\":\"usersList_flag-CL__ECGkc\",\"flag-CM\":\"usersList_flag-CM__1ZjFS\",\"flag-CN\":\"usersList_flag-CN__28Kt9\",\"flag-CO\":\"usersList_flag-CO__kszHI\",\"flag-CZ\":\"usersList_flag-CZ__3s1gU\",\"flag-DE\":\"usersList_flag-DE__HWnJh\",\"flag-DJ\":\"usersList_flag-DJ__3IFAb\",\"flag-DK\":\"usersList_flag-DK__20-GX\",\"flag-DZ\":\"usersList_flag-DZ__2guVT\",\"flag-EE\":\"usersList_flag-EE__3SD-O\",\"flag-EG\":\"usersList_flag-EG__Zw2gT\",\"flag-ES\":\"usersList_flag-ES__3Mvgx\",\"flag-FL\":\"usersList_flag-FL__3UviB\",\"flag-FR\":\"usersList_flag-FR__Sc6R8\",\"flag-GA\":\"usersList_flag-GA__3N5wF\",\"flag-GB\":\"usersList_flag-GB__QDFE0\",\"flag-GM\":\"usersList_flag-GM__2ZYP_\",\"flag-GT\":\"usersList_flag-GT__R20cv\",\"flag-HN\":\"usersList_flag-HN__SG8HZ\",\"flag-HT\":\"usersList_flag-HT__2gLUp\",\"flag-HU\":\"usersList_flag-HU__1np09\",\"flag-ID\":\"usersList_flag-ID__3sv_I\",\"flag-IE\":\"usersList_flag-IE__6D5k6\",\"flag-IL\":\"usersList_flag-IL__3j7eI\",\"flag-IN\":\"usersList_flag-IN__2lSnm\",\"flag-IQ\":\"usersList_flag-IQ__3sBmG\",\"flag-IR\":\"usersList_flag-IR__f7dHv\",\"flag-IT\":\"usersList_flag-IT__1W8ex\",\"flag-JM\":\"usersList_flag-JM__3j6Pm\",\"flag-JO\":\"usersList_flag-JO__3AezU\",\"flag-JP\":\"usersList_flag-JP__r5fM4\",\"flag-KG\":\"usersList_flag-KG__SY17J\",\"flag-KN\":\"usersList_flag-KN__1SC6n\",\"flag-KP\":\"usersList_flag-KP__36V4l\",\"flag-KR\":\"usersList_flag-KR__HxNFj\",\"flag-KW\":\"usersList_flag-KW__1s10H\",\"flag-KZ\":\"usersList_flag-KZ__3deke\",\"flag-LA\":\"usersList_flag-LA__kcv1W\",\"flag-LB\":\"usersList_flag-LB__3E8KO\",\"flag-LC\":\"usersList_flag-LC__1d3_w\",\"flag-LS\":\"usersList_flag-LS__117IC\",\"flag-LU\":\"usersList_flag-LU__1qrf8\",\"flag-LV\":\"usersList_flag-LV__3zU9I\",\"flag-MG\":\"usersList_flag-MG__t-CXg\",\"flag-MK\":\"usersList_flag-MK__vPOkL\",\"flag-ML\":\"usersList_flag-ML__36g1u\",\"flag-MM\":\"usersList_flag-MM__28dSo\",\"flag-MT\":\"usersList_flag-MT__2-Yrc\",\"flag-MX\":\"usersList_flag-MX__wzUa1\",\"flag-NA\":\"usersList_flag-NA__3kCAp\",\"flag-NE\":\"usersList_flag-NE__27h7N\",\"flag-NG\":\"usersList_flag-NG__3db0b\",\"flag-NI\":\"usersList_flag-NI__35LU0\",\"flag-NL\":\"usersList_flag-NL__SCdSk\",\"flag-NO\":\"usersList_flag-NO__3Uy0z\",\"flag-OM\":\"usersList_flag-OM__1bqbs\",\"flag-PA\":\"usersList_flag-PA__1vtN-\",\"flag-PE\":\"usersList_flag-PE__1WaE3\",\"flag-PG\":\"usersList_flag-PG__1Rn6z\",\"flag-PK\":\"usersList_flag-PK__3hHpS\",\"flag-PL\":\"usersList_flag-PL__2SJC2\",\"flag-PT\":\"usersList_flag-PT__4j0by\",\"flag-PY\":\"usersList_flag-PY__1I_VY\",\"flag-QA\":\"usersList_flag-QA__3k-bO\",\"flag-RO\":\"usersList_flag-RO__2LJX3\",\"flag-RU\":\"usersList_flag-RU__2UisT\",\"flag-RW\":\"usersList_flag-RW__3ucM_\",\"flag-SA\":\"usersList_flag-SA__RBhxn\",\"flag-SE\":\"usersList_flag-SE__2NYyw\",\"flag-SG\":\"usersList_flag-SG__38Sbp\",\"flag-SL\":\"usersList_flag-SL__1ql1t\",\"flag-SN\":\"usersList_flag-SN__3xhNv\",\"flag-SO\":\"usersList_flag-SO__3OvPT\",\"flag-SV\":\"usersList_flag-SV__sc9e8\",\"flag-TD\":\"usersList_flag-TD__PJirO\",\"flag-TJ\":\"usersList_flag-TJ__32Ew_\",\"flag-TL\":\"usersList_flag-TL__svnVy\",\"flag-TR\":\"usersList_flag-TR__2xcu_\",\"flag-TZ\":\"usersList_flag-TZ__11_a1\",\"flag-UA\":\"usersList_flag-UA__2W8Z3\",\"flag-US\":\"usersList_flag-US__3rCFU\",\"flag-VE\":\"usersList_flag-VE__9EUPl\",\"flag-VN\":\"usersList_flag-VN__NOtmd\",\"flag-YE\":\"usersList_flag-YE__2d5wR\"};"],"sourceRoot":""}