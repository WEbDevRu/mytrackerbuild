{"version":3,"sources":["assets/icons/small-loading.svg","components/profile/profilesettings/yourFriends/yourFriends.module.scss","components/profile/friends/usersList/usersList.module.scss","components/sidebar/sidebar.module.scss","assets/icons/menu/hamburger.svg","assets/icons/menu/summary.svg","assets/icons/menu/eye.svg","assets/icons/menu/auditories.svg","assets/icons/menu/friend.svg","assets/icons/menu/settings.svg","assets/icons/menu/short-menu.svg","assets/icons/menu/profile.svg","assets/icons/os/android.svg","assets/icons/os/windows.svg","assets/icons/os/apple.svg","assets/icons/os/macos.svg","assets/icons/os/linux.svg","assets/icons/os/undefined.svg","assets/icons/loading.svg","assets/icons/plus.svg","components/content/audiences/audienceslist/audienceslist.module.scss","assets/icons/users.svg","assets/summary-bg.jpg","assets/icons/mail-open.svg","components/profile/friends/friends.module.scss","components/profile/signup/signup.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/content/summary/daystat/daystat.module.scss","components/common/common.module.scss","serviceWorker.js","api/counters-api.js","api/users-api.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/app-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","redux/selectors/app-selectors.js","components/sidebar/sidebarContainer.jsx","redux/selectors/summary-selectors.js","utils/mongoDate.js","components/common/loadMore.jsx","components/content/counters/counterPage/usersList/usersList.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/common/formControls.jsx","utils/validation.js","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","redux/selectors/counters-selectors.js","hoc/withAuthRedirect.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/common/pagination.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/common/loadingSchemes.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","utils/textTransformation.js","components/common/editinput.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/yourFriends/yourFriends.jsx","redux/selectors/profileselectors.js","components/profile/profilesettings/yourFriends/yourFriendsContainer.jsx","components/profile/profilesettings/profilesettings.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","components/profile/friends/newFriends/newFriends.jsx","components/profile/friends/newFriends/newFriendsContainer.jsx","components/profile/friends/usersList/usersList.jsx","components/profile/friends/usersList/usersListContainer.jsx","components/profile/friends/friends.jsx","components/content/counters/counterPage/counterInfo/counterInfo.jsx","components/content/counters/counterPage/counterInfo/counterInfoContainer.jsx","components/content/counters/counterPage/usersList/usersListContainer.jsx","components/content/counters/counterPage/counterPage.jsx","components/userPage/userPage.jsx","redux/selectors/users-selectors.js","components/userPage/userPageContainer.jsx","App.js","index.js","components/profile/login/login.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/content/counters/counterslist/counterslist.module.scss","components/content/counters/counterPage/counterInfo/counterInfo.module.scss","components/profile/friends/newFriends/newFriends.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","components/userPage/userPage.module.scss","assets/icons/done.svg","components/content/counters/counterPage/usersList/usersList.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","baseURL","countersAPI","data","post","headers","store","getState","auth","token","then","response","catch","error","console","warn","page","limit","get","params","counterId","usersAPI","tysId","initialState","counterslistData","pageSize","totalCounters","pixelCode","currentCounter","counterInfo","counterUsers","totalUsers","setCounters","countersData","type","setTotalCounters","countersReducer","state","action","newCounter","id","counterData","_id","name","domen","dayusers","allusers","status","items","totalPages","usersPage","totalDocs","users","audiencelistData","description","counters","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","inputName","value","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","summaryInfo","dayUsers","dayClicks","summaryUsers","graphicData","day","summaryReducer","profileAPI","put","proposals","profileActionsAPI","userId","delete","soName","company","totalProfiles","undefined","profilesList","friendsList","totalFriends","deletedFriend","setProfileInfo","setProposals","setFriendsList","friends","getProposals","dispatch","a","getProfilesList","count","profileReducer","friendId","authedInstance","authAPI","email","password","signUpAPI","login","profileId","regDate","isAuth","isFetching","signUpState","setProfileData","authProfileData","setToken","toggleIsFetching","setSignUpState","authReducer","isInitialized","menuState","appReducer","userInfo","usersReducer","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","app","form","formReducer","createStore","applyMiddleware","thunk","Sidebar","props","className","s","sidebar","sidebar_closed","backgoundType","backdrop_filter","selectSideBarClassName","sidebar_top","logo","hamburger","onClick","toggleMenuState","src","hamburgerIcon","alt","sidebar_menu","onMouseOver","onmouseover","onMouseOut","onmouseout","to","activeClassName","active","link_item","menu_icon","summaryIcon","eyeIcon","auditoriesIcon","friendsIcon","settingsIcon","profile_cont","shortMenuIcon","logout","empty_img","profileIcon","user_login","profileLogin","getMenuState","connect","deleteProfileData","useCookies","removeCookie","useState","sideBarBackGround","setSideBarBackGround","pageName","useLocation","useEffect","pathname","getSummaryInfo","getSummaryGraphic","getSummaryUsers","getPageSize","getTotalUsers","mongoDate","d","Date","formatter","Intl","DateTimeFormat","formatter2","hour","minute","date","format","time","seconds","getSeconds","LoadMoreComponent","pagesCount","Math","ceil","pages","inizialized","currentPage","load_more","changePage","disabled","all_loaded","LoadMore","initialized","setState","pageChanger","getCurrentPage","loaders","pagesSelector","emptyBlock","prevProps","prevState","snapshot","push","loader","React","Component","Time","styled","div","Sessions","Referrer","City","Country","Os","ShortUserLine","NavLink","LoadingUser","NoUsers","ShortUser","shortUser","sessions","referrer","flag","country","city","os","AndroidIcon","WindowsIcon","iOSIcon","MacOsIcon","LinuxIcon","UndefinedOsIcon","selectOsIcon","UsersList","usersList","map","user","sessionsNumber","getMoreUsers","Col","height","ColInfo","show","css","ColBlock","ColWr","ColTime","ColNumber","Graphiccol","colheight","graphicvalue","infoState","setInfoState","e","log","innerWidth","clientX","changeInfoState","graphicday","GraphicWr","GraphicColsWR","GraphicBottom","Graphic","graphicColElements","coldata","KeyNumbersWr","KeyNumberBlock","KeyNumberContent","KeyNumberName","p","KeyNumber","Daystat","graphicInfo","getSummaryData","Promise","all","clearSummaryData","pageState","setPageState","Input","input","meta","placeholder","input_wr","touched","danger","input_danger","PasswordScoreInput","strengthValue","strengthText","password_strength","required","checkLogin","test","checkEmail","checkPassword","passwordsMatch","allValues","AddCounterReduxForm","reduxForm","addcounter_form","onSubmit","handleSubmit","form_danger","loading_bar","Field","component","validate","submitting","PixelCodeBlock","copySuccess","setCopySuccess","textAreaRef","useRef","codeBlock","target","select","ref","cols","rows","codeTextarea","copyButton_wr","current","document","execCommand","focus","setTimeout","copied_label","FetchingForm","form_fetching","loader_icon","Addcounterblock","values","postCounter","counterDomen","blockState","last_text","makeOneMore","textSelector","blockSelector","getPixelCode","getCurrentCounterInfo","getCurrentCounterUsers","getCurrentCounterPageSize","mapStateToProps","AccountNotExist","WithAuthRedirect","compose","reset","setBlockState","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","Shortcounter","short_counter","work","notwork","checking","PaginationComponent","pagesButtonsElements","key","Loader","elem","Pagination","LoadingCounter","loading_counter","EmptyBlock","noCounters","plus","Counterslist","countersElement","countersListData","firstLoader","table_head","list","CounterslistContainer","getCounters","CountersListLoading","loading_scheme","add_button","counters_table_head","list_ul","page_buttons","page_button","FriendsPageLoader","text_line","h2","big_ul","Addaudienceblock","clicked","event","deleteCounter","getAttribute","countersOptionsElements","countersSelect","countersElements","audience_badge","counterid","version","viewBox","width","xmlns","fill","name_input","createRef","description_input","counters_select","add_form","onChange","reloadInput","nameInput","descriptionName","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addCounter","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","offsetText","text","textarr","split","isUrl","lineNumber","line","wordNumber","href","EditInput","inputText","inputEditMode","wasUpdated","changeCondition","inputState","putInfo","reloadNameInput","currentTarget","withedit_block","loadingImg","done_check","doneImg","onBlur","autoFocus","withedit_current","EditTextarea","wrap","YourProfile","photo_col","photo_wr","info_col","info_inputs","putProfileInfo","YourProfileContainer","getProfileInfo","newInfo","LoadingProfile","s2","loading_profile","NoFriends","noFriends","friendIcon","YourFriends","buttonSelector","buttonId","delete_button","deleteFriend","friend","names_row","description_p","yourFriends","addToFriendsList","selectProfilesList","getTotalProfiles","getProposalsList","getFriends","getTotalFriends","getDeletedFriend","YourFriendsContainer","changeButtonState","copyFriends","listButtons","deleteFriendLocal","friendsCopy","getFriendsList","friendsFetching","addFriendsList","friendsPage","message","BackGround","background","SuccessForm","redirect","setRedirect","success_auth","LoginReduxForm","h1","form_danger_wr","dont_reg_yet","LoginBlock","login_container","login_block","sendLoginRequest","emailInput","passwordInput","LoginContainer","loginThunkCreator","cookie","stopSubmit","_error","Profile","ProfileContainer","SignUpReduxForm","SignUpFormBlock","signup_form","sendSignUpRequest","ProfileForm","profile_form_wr","auth_info","profile_form","add_photo_row","photo_cont","add_photo","SignUpBlock","SignUpContainer","signUpThunkCreator","NewFriends","proposalsList","buttonsState","buttons_row","deny","denyProposal","chanhgeButtonsState","accept","acceptProposal","proposal","noProposals","openfolder","newFriends","NewFriendsContainer","copyButtonsState","profile","buttonsStates","deleteProposal","postProposal","profilesArr","toString","friendStatus","UsersListContainer","copyListButtons","CounterInfo","names","results","getCurrentCounter","setCurrentCounter","clearCurrentCounter","useParams","UserPage","sessionCount","userSessions","session","sessionNumber","entryTime","awayTime","DatesMapper","datesMap","millieSecondsCompare","firstDate","secondDate","now","parse","getHours","getMinutes","index","cleanDatesMap","prevDate","main_info","h4","label_row","referer","ipInfo","query","visits","sessionsCopy","datesMapCopy","ii","date_divider","getSessionsWithDates","device_info","col_head","device","browser","majorVersion","vendor","model","cpu","architecture","geo_info","countryCode","regionName","lat","lon","isp","org","as","zip","timezone","headers_info","user_agent","languages","getUserInfoFromState","getUserSessionsList","createSelector","sessionsArray","nextIndex","makeSessionPare","enterTime","Object","keys","goAwayTime","unshift","getSessions","clearUserInfo","getUserInfo","App","InitializingApp","promise","getCookie","matches","RegExp","replace","decodeURIComponent","getAuth","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.616cd8dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/small-loading.320ffa1d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"yourFriends_delete_button__1bT4Z\",\"yourFriends\":\"yourFriends_yourFriends__3yW1r\",\"noFriends\":\"yourFriends_noFriends__13UPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"usersList_add_button__2fVWQ\",\"usersList\":\"usersList_usersList__2v1uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"backdrop_filter\":\"sidebar_backdrop_filter__1Z49B\",\"sidebar_closed\":\"sidebar_sidebar_closed__1ZL1V\",\"logo\":\"sidebar_logo__2Z-nV\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\",\"link_item\":\"sidebar_link_item__KDcsE\",\"active\":\"sidebar_active__3Sfny\",\"menu_icon\":\"sidebar_menu_icon__k-nvb\",\"empty_img\":\"sidebar_empty_img__PrQev\",\"profile_cont\":\"sidebar_profile_cont__LnmQi\",\"user_login\":\"sidebar_user_login__3oBZN\",\"sidebar_top\":\"sidebar_sidebar_top__2t6gY\",\"hamburger\":\"sidebar_hamburger__3ytg7\"};","module.exports = __webpack_public_path__ + \"static/media/hamburger.8a529ed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary.ea33d762.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.a165d003.svg\";","module.exports = __webpack_public_path__ + \"static/media/auditories.09d367fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/friend.d29028be.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.b376bf7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/short-menu.e1c4065d.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.7918bc4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/android.36571833.svg\";","module.exports = __webpack_public_path__ + \"static/media/windows.9ca90a4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple.0c0e528a.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.6ac68ad4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.a000e4fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/undefined.66a30df1.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.973560ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.78208480.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","module.exports = __webpack_public_path__ + \"static/media/users.7ba66cd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/summary-bg.e717e35f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mail-open.6a43bbb7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"friends_line__CTaIr\",\"names_row\":\"friends_names_row__I9xPa\",\"company\":\"friends_company__3IPjv\",\"description\":\"friends_description__HUJS-\",\"description_p\":\"friends_description_p__j17_s\",\"load_more\":\"friends_load_more__26ODF\",\"loading_profile\":\"friends_loading_profile__Us8VP\",\"loading\":\"friends_loading__3VScv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"signup_signup_form__7HJVd\",\"dont_reg_yet\":\"signup_dont_reg_yet__239zS\",\"input_wr\":\"signup_input_wr__WIkn0\",\"input_danger\":\"signup_input_danger__2AIPg\",\"password_strength\":\"signup_password_strength__peCEw\",\"smoothappearance\":\"signup_smoothappearance__4VAwc\",\"tooWeak\":\"signup_tooWeak__Vo_W9\",\"weak\":\"signup_weak__bx5Hx\",\"medium\":\"signup_medium__1OxDa\",\"good\":\"signup_good__2KcH1\",\"loading_bar\":\"signup_loading_bar__3cVFs\",\"loading\":\"signup_loading__1IMnh\",\"active\":\"signup_active__3mlkR\",\"auth_info\":\"signup_auth_info__eHPph\",\"profile_form_wr\":\"signup_profile_form_wr__3zHGM\",\"profile_form\":\"signup_profile_form__hgX0S\",\"photo_cont\":\"signup_photo_cont__-6OF5\",\"add_photo_row\":\"signup_add_photo_row__AGbTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\",\"form_fetching\":\"addcounter_form_fetching__2ejXt\",\"loading\":\"addcounter_loading__2P9GN\",\"codeTextarea\":\"addcounter_codeTextarea__7mqoV\",\"codeBlock\":\"addcounter_codeBlock__9xNrS\",\"copyButton_wr\":\"addcounter_copyButton_wr__wnIbR\",\"copied_label\":\"addcounter_copied_label__lz_ik\",\"last_text\":\"addcounter_last_text__3txDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withedit_current\":\"common_withedit_current__3mFwP\",\"withedit_block\":\"common_withedit_block__11_W2\",\"plain_input\":\"common_plain_input__3zzxU\",\"plain_textarea\":\"common_plain_textarea__237u6\",\"loading_bar\":\"common_loading_bar__TjjZG\",\"loading\":\"common_loading__2aPGq\",\"done_check\":\"common_done_check__3kKij\",\"input_wr\":\"common_input_wr__1j_qc\",\"form_danger\":\"common_form_danger__2ZFlS\",\"load_more\":\"common_load_more__mlkAq\",\"all_loaded\":\"common_all_loaded__11aHE\",\"loading_scheme\":\"common_loading_scheme__tcTaS\",\"elem\":\"common_elem__2I5_7\",\"loadingScheme\":\"common_loadingScheme__1FfKI\",\"add_button\":\"common_add_button__7A7b-\",\"counters_table_head\":\"common_counters_table_head__2MHPb\",\"list_ul\":\"common_list_ul__3hmvF\",\"page_buttons\":\"common_page_buttons__eOPiv\",\"page_button\":\"common_page_button__m6fX0\",\"text_line\":\"common_text_line__2xBBE\",\"big_ul\":\"common_big_ul__1WsLo\",\"list\":\"common_list__uNHVH\",\"h2\":\"common_h2__21ZCw\",\"danger\":\"common_danger__3DTtg\",\"placeholder\":\"common_placeholder__1Y8B_\",\"input_danger\":\"common_input_danger__2Mgji\",\"password_strength\":\"common_password_strength__1v8as\",\"smoothappearance\":\"common_smoothappearance__2t_Cv\",\"tooWeak\":\"common_tooWeak__24q-F\",\"weak\":\"common_weak__ekDY8\",\"medium\":\"common_medium__2cCV6\",\"good\":\"common_good__3C1A3\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/counters'\r\n})\r\n\r\nexport const countersAPI = {\r\n    postCounter(data){\r\n        return axiosInstance.post('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getCounters(page, limit){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getCounterById(counterId){\r\n        return axiosInstance.get('/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","\r\nimport * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/users/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getCounterUsers(counterId, page, limit){\r\n        return axiosInstance.get('/counter/'+counterId, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileUsers(page,limit){\r\n        return axiosInstance.get('/profile', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data\r\n                })\r\n    },\r\n    getUser(tysId){\r\n        return  axiosInstance.get('/user/'+tysId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {countersAPI} from \"../api/counters-api\";\r\nimport store from \"./redux-store\"\r\nimport {reset} from 'redux-form';\r\nimport {usersAPI} from \"../api/users-api\";\r\nlet initialState = {\r\n        counterslistData: [],\r\n        pageSize: 10,\r\n        totalCounters: '',\r\n        pixelCode: '',\r\n        currentCounter:{\r\n            counterInfo: '',\r\n            counterUsers: '',\r\n            totalUsers: ''\r\n        }\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"counters/ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: action.counterData._id,\r\n                name: action.counterData.name,\r\n                domen: action.counterData.domen,\r\n                dayusers: action.counterData.dayusers,\r\n                allusers: action.counterData.allusers,\r\n                status: action.counterData.status\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [newCounter, ...state.counterslistData],\r\n                pixelCode: action.pixelCode\r\n            }\r\n        }\r\n        case \"counters/CLEAR-PIXEL-CODE\":{\r\n            return {\r\n                ...state,\r\n                pixelCode: ''\r\n            }\r\n        }\r\n        case \"counters/SET-COUNTERS\":{\r\n            return {\r\n                ...state,\r\n                counterslistData: action.countersData.items\r\n            }\r\n        }\r\n        case 'counters/SET-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                totalCounters: action.totalCounters.totalPages\r\n            }\r\n        }\r\n        case 'counters/SET-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: action.counterInfo,\r\n                    counterUsers: action.counterUsers.usersPage,\r\n                    totalUsers: action.counterUsers.totalDocs\r\n                }\r\n            }\r\n        }\r\n        case 'counters/CLEAR-CURRENT-COUNTER':{\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterInfo: '',\r\n                    counterUsers: '',\r\n                    totalUsers: ''\r\n                }\r\n            }\r\n        }\r\n        case 'counters/ADD-COUNTER-USERS':{\r\n\r\n            return {\r\n                ...state,\r\n                currentCounter: {\r\n                    ...state.currentCounter,\r\n                    counterUsers: [...state.currentCounter.counterUsers, ...action.users]\r\n                }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = (counterData, pixelCode) =>({\r\n    type: 'counters/ADD-COUNTER',\r\n    counterData: counterData,\r\n    pixelCode: pixelCode\r\n})\r\nexport const setCounters = (countersData) =>({\r\n    type: 'counters/SET-COUNTERS',\r\n    countersData: countersData\r\n\r\n})\r\nexport const setTotalCounters = (totalCounters) =>({\r\n    type: 'counters/SET-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\nexport const clearPixelCode = () =>({\r\n    type: 'counters/CLEAR-PIXEL-CODE'\r\n})\r\n\r\nexport const setCurrentCounter = (counterInfo, counterUsers) =>({\r\n    type: 'counters/SET-CURRENT-COUNTER',\r\n    counterInfo: counterInfo,\r\n    counterUsers: counterUsers\r\n})\r\n\r\nexport const clearCurrentCounter = () => ({\r\n    type: 'counters/CLEAR-CURRENT-COUNTER'\r\n})\r\n\r\nexport const addCounterUsers = (users) =>({\r\n    type: 'counters/ADD-COUNTER-USERS',\r\n    users: users\r\n})\r\n\r\nexport const getCounters = (page) => async (dispatch) =>{\r\n\r\n    let response = await countersAPI.getCounters(page, store.getState().countersPage.pageSize)\r\n    dispatch(setCounters(response))\r\n    dispatch(setTotalCounters(response))\r\n}\r\n\r\nexport const postCounter = (data) => async (dispatch) => {\r\n\r\n    let response = await countersAPI.postCounter(data)\r\n    dispatch(addCounter(response.newCounter, response.pixelCode))\r\n    dispatch(reset('addcounter-form'))\r\n}\r\n\r\nexport const getCurrentCounter = (counterId) => (dispatch) =>{\r\n    Promise.all([countersAPI.getCounterById(counterId),\r\n        usersAPI.getCounterUsers(counterId, 1, store.getState().countersPage.pageSize)]).then(response =>{\r\n        dispatch(setCurrentCounter(response[0], response[1]) )\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n\r\n    let response = await usersAPI.getCounterUsers(store.getState().countersPage.currentCounter.counterInfo._id, page, store.getState().countersPage.pageSize)\r\n    dispatch(addCounterUsers(response.usersPage))\r\n}\r\n\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","import {usersAPI} from \"../api/users-api\";\r\nimport store from \"./redux-store\"\r\n\r\nlet initialState = {\r\n    summaryInfo:{\r\n       totalUsers: 123,\r\n       dayUsers: 12,\r\n       dayClicks: 24\r\n    },\r\n    summaryUsers: [],\r\n    pageSize: 7,\r\n    totalUsers: '',\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n\r\n        case 'SET-SUMMARY-USERS':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: action.summaryUsers.usersPage,\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'ADD-SUMMARY-USERS':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [...state.summaryUsers, ...action.summaryUsers.usersPage],\r\n                totalUsers: action.summaryUsers.totalDocs\r\n            }\r\n        }\r\n        case 'CLEAR-SUMMARY-SELECTOR':{\r\n            return {\r\n                ...state,\r\n                summaryUsers: [],\r\n                totalUsers: ''\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nconst setSummaryInfo = (summaryInfo) =>({\r\n    type: 'SET-SUMMARY-INFO',\r\n    summaryInfo: summaryInfo\r\n})\r\n\r\n\r\nconst setGraphicData = (graphicData) => ({\r\n    type: 'SET-GRAPHIC-DATA',\r\n    graphicData: graphicData\r\n})\r\n\r\n\r\n\r\nconst setSummaryUsers = (summaryUsers) =>({\r\n    type: 'SET-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\nconst addSummaryUsers = (summaryUsers) =>({\r\n    type: 'ADD-SUMMARY-USERS',\r\n    summaryUsers: summaryUsers\r\n})\r\n\r\n\r\n\r\n\r\nexport const clearSummaryData = () => ({\r\n    type: 'CLEAR-SUMMARY-SELECTOR'\r\n})\r\n\r\nexport const getSummaryData = () => (dispatch) =>{\r\n    Promise.all([usersAPI.getProfileUsers(1, store.getState().summaryPage.pageSize)]).then(response =>{\r\n        dispatch(setSummaryUsers(response[0]))\r\n    })\r\n}\r\n\r\nexport const getMoreUsers = (page) => async (dispatch) =>{\r\n    let response = await usersAPI.getProfileUsers(page, store.getState().summaryPage.pageSize)\r\n    dispatch(addSummaryUsers(response))\r\n}\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileInfoById(userId){\r\n        return axiosInstance.get('/userid/'+userId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProposals(){\r\n        return axiosInstance.get('/your_proposals/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.proposals;\r\n                })\r\n\r\n    },\r\n\r\n    getProfilesList(page, limit){\r\n        return axiosInstance.get('/friendslist', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsList(page, limit){\r\n        return axiosInstance.get('/friends/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n\r\n\r\nexport const profileActionsAPI = {\r\n    postProposal(userId){\r\n        return axiosInstance.post('/proposal/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n\r\n    deleteProposal(userId){\r\n        return axiosInstance.delete('/proposal/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    acceptProposal(userId){\r\n        return axiosInstance.post('/proposals/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    denyProposal(userId){\r\n        return axiosInstance.delete('/proposals/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    deleteFriend(userId){\r\n        return axiosInstance.delete('/delete_friend/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI, profileActionsAPI} from '../api/profile-api'\r\nimport store from \"../redux/redux-store\";\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: '',\r\n    pageSize: 5,\r\n    totalProfiles: undefined,\r\n    proposals: [],\r\n    profilesList: [],\r\n    friendsList: [],\r\n    totalFriends: undefined,\r\n    deletedFriend: undefined\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'profile/SET-PROFILE-INFO':\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        case 'profile/SET-PROFILES-LIST':\r\n            return {\r\n                ...state,\r\n                profilesList: action.data\r\n            }\r\n        case 'profile/SET-TOTAL-PROFILES':\r\n            return {\r\n                ...state,\r\n                totalProfiles: action.count\r\n\r\n            }\r\n        case 'profile/SET-PROPOSALS':\r\n            return {\r\n                ...state,\r\n                proposals: action.proposals\r\n            }\r\n        case 'profile/SET-FRIENDS-LIST':\r\n            return {\r\n                ...state,\r\n                friendsList: action.friends,\r\n                totalFriends: action.totalDocs\r\n            }\r\n        case 'profile/SET-DELETED-FRIEND':\r\n            return {\r\n                ...state,\r\n                deletedFriend: [action.friendId]\r\n            }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'profile/SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'profile/RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'profile/SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\nexport const setProfilesList = (data) =>({\r\n    type: 'profile/SET-PROFILES-LIST',\r\n    data: data\r\n})\r\n\r\nexport const setTotalProfiles = (count) =>({\r\n    type: 'profile/SET-TOTAL-PROFILES',\r\n    count: count\r\n})\r\n\r\nexport const setProposals = (proposals) => ({\r\n    type: 'profile/SET-PROPOSALS',\r\n    proposals: proposals\r\n})\r\n\r\nexport const setFriendsList = (friends, totalDocs) =>({\r\n    type: 'profile/SET-FRIENDS-LIST',\r\n    friends: friends,\r\n    totalDocs: totalDocs\r\n})\r\n\r\nexport const setDeletedFriend = (friendId)=>({\r\n    type: 'profile/SET-DELETED-FRIEND',\r\n    friendId: friendId\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getProposals = () => async (dispatch)=>{\r\n\r\n    let response = await profileAPI.getProposals()\r\n    dispatch(setProposals(response))\r\n}\r\n\r\nexport const getProfileInfo = () => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getProfileInfo()\r\n    dispatch(setProfileInfo(response))\r\n}\r\n\r\nexport const getProfilesList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getProfilesList(page,limit)\r\n    dispatch(setProfilesList(response.items))\r\n    dispatch(setTotalProfiles(response.totalPages))\r\n\r\n}\r\n\r\nexport const postProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.postProposal(userId)\r\n    if(response.message === 'proposal sended'){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const deleteProposal = (userId, currentPage) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteProposal(userId)\r\n    if(response.message === \"proposal deleted\"){\r\n        dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n    }\r\n}\r\n\r\nexport const acceptProposal = (userId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.acceptProposal(userId)\r\n    if(response.message === \"Friend added\"){\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const denyProposal = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileActionsAPI.denyProposal(userId)\r\n    if (response.message === \"Proposal denied\") {\r\n        dispatch(getProposals())\r\n    }\r\n}\r\n\r\nexport const putProfileInfo = (data) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.putProfileInfo(data)\r\n    dispatch(setProfileInfo(response.newInfo))\r\n}\r\n\r\nexport const getFriendsList = (page,limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page,limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const addFriendsList = (page, limit) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getFriendsList(page, limit)\r\n    dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n}\r\n\r\nexport const deleteFriend = (userId, buttonId) => async (dispatch) =>{\r\n\r\n    let response = await profileActionsAPI.deleteFriend(userId)\r\n    if(response.message === \"friend deleted\"){\r\n        dispatch(setDeletedFriend(buttonId))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'https://trackyour.site:3443/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    }\r\n\r\n}","\r\nimport {authAPI, signUpAPI} from \"../api/auth-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    isFetching: false,\r\n    signUpState: 'signUpForm'\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"auth/SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"auth/SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"auth/DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'auth/TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case 'auth/TOGGLE_SIGNUP_STATE':\r\n            return {\r\n                ...state,\r\n                signUpState: action.signUpState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"auth/SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const setToken = (token) =>({\r\n    type: 'auth/SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'auth/DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'auth/SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'auth/TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\n\r\nexport const setSignUpState = (signUpState) =>{return {\r\n    type: 'auth/TOGGLE_SIGNUP_STATE',\r\n    signUpState: signUpState\r\n}}\r\n\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message == \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=360000'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=360000'\r\n                    authAPI.getAuthInfo()\r\n                            .then(response => {\r\n                                console.log(response)\r\n\r\n                                dispatch(setProfileData(response))\r\n                            })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(stopSubmit('login-form', {_error : \"Неверные данные\"}))\r\n                dispatch(toggleIsFetching(false))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            dispatch(toggleIsFetching(false))\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(setSignUpState('userInfoForm'))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message == \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                authAPI.getAuthInfo()\r\n                                        .then(response => {\r\n                                            dispatch(setProfileData(response))\r\n                                        })\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch(toggleIsFetching(false))\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(stopSubmit('signup-form', {email : 'Данная почта уже зарегистрирована'}))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(stopSubmit('signup-form', {login : 'Данный логин уже зарегистрирован'}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const AuthThunkCreator = () => async (dispatch)=>{\r\n    let getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    let getAuth  = async() =>{\r\n        let response  = await authAPI.getAuthInfo()\r\n        dispatch(setProfileData(response))\r\n\r\n    }\r\n\r\n\r\n    if (getCookie('email') && getCookie('password')){\r\n       let response = await authAPI.postLoginInfo(getCookie('email'), getCookie('password'))\r\n            dispatch(setToken(response.token))\r\n            await getAuth()\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {AuthThunkCreator} from './auth-reducer'\r\n\r\n\r\nlet initialState = {\r\n    isInitialized: false,\r\n    menuState: 'collapsed'\r\n}\r\n\r\n\r\nconst appReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"app/INITIALIZED_SUCCESS\":\r\n            return{\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        case \"app/TOGGLE-MENU-STATE\":\r\n            let menuState = ''\r\n            switch (state.menuState ){\r\n                case 'collapsed':\r\n                    menuState = 'closed';\r\n                    break;\r\n                case 'closed':\r\n                    menuState = 'collapsed';\r\n                    break\r\n                default: menuState = 'closed'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                menuState: menuState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: \"app/INITIALIZED_SUCCESS\"})\r\n\r\n\r\nexport const InitializingApp = () => (dispatch) =>{\r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n                dispatch(setInitializedSuccess())\r\n            })\r\n}\r\n\r\nexport const toggleMenuState = () => ({\r\n    type: \"app/TOGGLE-MENU-STATE\"\r\n})\r\n\r\n\r\nexport  default appReducer\r\n","\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    userInfo: ''\r\n}\r\n\r\nlet usersReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case 'users/SET-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        }\r\n        case 'users/CLEAR-USER-INFO' : {\r\n            return {\r\n                ...state,\r\n                userInfo: ''\r\n            }\r\n        }\r\n        default :{\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst setUserInfo = (userInfo) =>({\r\n    type: 'users/SET-USER-INFO',\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const clearUserInfo = () => ({\r\n    type: 'users/CLEAR-USER-INFO'\r\n})\r\n\r\nexport const getUserInfo = (tysId) => async (dispatch) =>{\r\n    let response = await usersAPI.getUser(tysId)\r\n    dispatch(setUserInfo(response))\r\n\r\n}\r\n\r\nexport default usersReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport countersReducer from \"./counters-reducer\"\r\nimport audiencesReducer from \"./audiences-reducer\"\r\nimport summaryReducer from \"./summary-reducer\"\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\"\r\nimport appReducer from \"./app-reducer\"\r\nimport usersReducer from './users-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    users: usersReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store\r\nexport default store","import React, {useEffect, useState} from 'react';\r\nimport s from './sidebar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport hamburgerIcon from '../../assets/icons/menu/hamburger.svg'\r\nimport summaryIcon from '../../assets/icons/menu/summary.svg'\r\nimport eyeIcon from '../../assets/icons/menu/eye.svg'\r\nimport auditoriesIcon from '../../assets/icons/menu/auditories.svg'\r\nimport friendsIcon from '../../assets/icons/menu/friend.svg'\r\nimport settingsIcon from '../../assets/icons/menu/settings.svg'\r\nimport shortMenuIcon from '../../assets/icons/menu/short-menu.svg'\r\nimport profileIcon from '../../assets/icons/menu/profile.svg'\r\nlet Sidebar = (props) =>{\r\n\r\n    /* let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    } */\r\n\r\n    let logout = () =>{\r\n        props.logout()\r\n    }\r\n\r\n    let selectSideBarClassName = () =>{\r\n        let className = ''\r\n        if(props.menuState === 'collapsed'){\r\n            className = s.sidebar\r\n        }\r\n        else{\r\n            className = s.sidebar + \" \" + s.sidebar_closed\r\n        }\r\n\r\n        if(props.backgoundType === 'backdrop_filter'){\r\n            className = className + \" \" + s.backdrop_filter\r\n        }\r\n\r\n        return className\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={selectSideBarClassName()}>\r\n        <div className={s.sidebar_top}>\r\n            <div className={s.logo}>Трекер</div>\r\n            <div className={s.hamburger} onClick={()=>{props.toggleMenuState()}}>\r\n                <img src={hamburgerIcon} alt=\"\"/>\r\n            </div>\r\n             <div className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <NavLink to={'/summary'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                    <div className={s.menu_icon}><img src={summaryIcon} alt=\"\"/></div>\r\n                    <p>Сводка</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/counters'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={eyeIcon} alt=\"\"/></div>\r\n                     <p>Счётчики</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/audiences'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={auditoriesIcon} alt=\"\"/></div>\r\n                     <p>Аудитории</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/friends'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={friendsIcon} alt=\"\"/></div>\r\n                     <p>Друзья</p>\r\n                 </NavLink>\r\n                 <NavLink to={'/profilesettings'} activeClassName={s.active} className={s.link_item + \" fluent-line\"}>\r\n                     <div className={s.menu_icon}><img src={settingsIcon} alt=\"\"/></div>\r\n                     <p>Настройки</p>\r\n                 </NavLink>\r\n             </div>\r\n        </div>\r\n            <div className={props.menuState === 'collapsed' ? s.profile_cont : s.profile_cont + \" \" + s.sidebar_closed}>\r\n              <div className=\"dropdown-menu\">\r\n                  <div className='dropdown-menu-dots'><img  src={shortMenuIcon} alt=\"\"/></div>\r\n                  <div className=\"dropdown-menu-content\">\r\n                      {props.isAuth === true ?\r\n                              <div className=\"dropdown-menu-link\" onClick={logout}>Выйти</div> :\r\n                              <NavLink to=\"/login\" className='dropdown-menu-link' activeClassName='active'>Войти</NavLink>}\r\n                  </div>\r\n              </div>\r\n               <div className={s.empty_img}>\r\n                   <img src={profileIcon} alt=\"\"/>\r\n               </div>\r\n                <div className={s.user_login}>\r\n                    {props.isAuth === true ? <NavLink to=\"/profile\" >{props.profileLogin}</NavLink> : \"Профиль\" }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","export const getMenuState = (state) =>{\r\n    return state.app.menuState\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Sidebar from \"./sidebar\";\r\nimport {connect} from \"react-redux\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {deleteProfileData, setProfileData, setToken} from \"../../redux/auth-reducer\";\r\nimport {toggleMenuState} from '../../redux/app-reducer'\r\nimport {getMenuState} from \"../../redux/selectors/app-selectors\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\n\r\nlet SideBarContainer = (props) => {\r\n   const [cookies, setCookie, removeCookie] = useCookies([\"email\", \"password\"]);\r\n   const [sideBarBackGround, setSideBarBackGround ] = useState('')\r\n   const pageName = useLocation()\r\n   useEffect(()=>{\r\n       if(pageName.pathname === '/login' || pageName.pathname === '/signup'){\r\n           setSideBarBackGround('backdrop_filter')\r\n       }\r\n       else{\r\n           setSideBarBackGround('')\r\n       }\r\n   },[pageName.pathname, sideBarBackGround])\r\n   let logOut = () =>{\r\n       removeCookie(\"email\");\r\n       removeCookie(\"password\")\r\n        props.deleteProfileData()\r\n\r\n    }\r\n        return <Sidebar isAuth={props.isAuth}\r\n                       profileLogin={props.profileLogin}\r\n                       logout={logOut}\r\n                       menuState={props.menuState}\r\n                       toggleMenuState={props.toggleMenuState}\r\n                       backgoundType={sideBarBackGround}\r\n        />\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login,\r\n        menuState: getMenuState(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {setToken,setProfileData, deleteProfileData, toggleMenuState})(SideBarContainer)","export const getSummaryInfo = (state) =>{\r\n    return state.summaryPage.summaryInfo\r\n}\r\n\r\nexport const getSummaryGraphic = (state) =>{\r\n    return state.summaryPage.graphicData\r\n\r\n}\r\n\r\nexport const getSummaryUsers = (state) =>{\r\n    return state.summaryPage.summaryUsers\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.summaryPage.pageSize\r\n}\r\nexport const getTotalUsers = (state) =>{\r\n    return state.summaryPage.totalUsers\r\n}","const mongoDate = (mongoDate) => {\r\n    let d = new Date(mongoDate)\r\n    let formatter = new Intl.DateTimeFormat(\"ru\");\r\n    let formatter2 = new Intl.DateTimeFormat(\"ru\",{hour: '2-digit', minute: '2-digit'});\r\n\r\n    return{\r\n        date: formatter.format(d),\r\n        time: formatter2.format(d),\r\n        seconds: d.getSeconds()\r\n    }\r\n}\r\nexport default mongoDate","import React from \"react\";\r\nimport s from \"./common.module.scss\"\r\nconst LoadMoreComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    const buttonSelector = () =>{\r\n        if(props.pages === 'empty' || props.inizialized === false || props.pages.length < props.pageSize){\r\n            return (<></>)\r\n        }\r\n        else if(pagesCount > props.currentPage){\r\n            return <button className={s.load_more +\" attractive-button\"} onClick={()=>{props.changePage(props.currentPage+1)}}>Загрузить ещё</button>\r\n        }\r\n        else{\r\n            return <button disabled className={s.all_loaded}>Загружены все записи</button>\r\n        }\r\n    }\r\n\r\n    return(\r\n            buttonSelector()\r\n\r\n    )\r\n}\r\n\r\n\r\nexport class LoadMore extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages,\r\n        initialized: false\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page, this.props.pageSize)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            this.setState({isFetching: false})\r\n            this.setState({initialized: true})\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n            this.loaders.push(this.props.loader)\r\n        }\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n        else{\r\n            this.setState({initialized: true})\r\n        }\r\n    }\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching && this.state.pages !== 'empty'){\r\n            return [this.props.pages, this.loaders]\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n            <LoadMoreComponent   currentPage={this.state.currentPage}\r\n                                 pageSize={this.props.pageSize}\r\n                                 totalPages={this.props.totalPages}\r\n                                 changePage={this.changePage}\r\n                                 pages={this.state.pages}\r\n                                 inizialized={this.state.initialized}\r\n            />\r\n        </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport mongoDate from \"../../../../../utils/mongoDate\";\r\nimport s from './usersList.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LoadMore} from \"../../../../common/loadMore\";\r\n\r\nimport styled from 'styled-components'\r\nimport AndroidIcon from '../../../../../assets/icons/os/android.svg'\r\nimport WindowsIcon from '../../../../../assets/icons/os/windows.svg'\r\nimport iOSIcon from '../../../../../assets/icons/os/apple.svg'\r\nimport MacOsIcon from '../../../../../assets/icons/os/macos.svg'\r\nimport LinuxIcon from '../../../../../assets/icons/os/linux.svg'\r\nimport UndefinedOsIcon from '../../../../../assets/icons/os/undefined.svg'\r\nconst Time = styled.div`\r\n  width: 94px;\r\n  p{\r\n  padding-left: 12px;\r\n  }\r\n  \r\n`\r\n\r\nconst Sessions = styled.div`\r\n  width: 140px;\r\n`\r\n\r\nconst Referrer = styled.div`\r\n  width: calc(60% - 404px);\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n`\r\n\r\nconst City = styled.div`\r\n  width: 40%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  p{\r\n  width: 1000px;\r\n  margin-left: 20px;\r\n  }\r\n  &:after{\r\n     content: '';\r\n    height: 100%;\r\n    display: block;\r\n    width: 40px;\r\n    background: linear-gradient(to left, #f7f7f7,transparent);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n`\r\n\r\nconst Country = styled.div`\r\n      width: 120px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`\r\n\r\nconst Os = styled.div`\r\n  width: 47px;\r\n  img{\r\n  width: 20px;\r\n    margin: auto;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ShortUserLine = styled(NavLink)`\r\n   display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #f7f7f7;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n  height: 47px;\r\n`\r\n\r\nconst LoadingUser = () =>{\r\n    return(\r\n            <p>Загрузка</p>\r\n    )\r\n}\r\n\r\nconst NoUsers = () =>{\r\n    return(\r\n            <p>Нет пользователей</p>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst ShortUser = (props) =>{\r\n    let selectOsIcon = (os) =>{\r\n        switch(os){\r\n            case 'Android':\r\n                return <img src={AndroidIcon} alt=\"Android\" />\r\n            case 'Windows':\r\n                return <img src={WindowsIcon} alt=\"Windows\" />\r\n            case 'iOS':\r\n                return <img src={iOSIcon} alt=\"iOS\" />\r\n            case 'Mac OS':\r\n                return <img src={MacOsIcon} alt=\"Mac OS\" />\r\n            case 'Linux':\r\n                return <img src={LinuxIcon} alt=\"Linux\" />\r\n            default:\r\n                return <img src={UndefinedOsIcon} alt=\"undefined\" />\r\n        }\r\n    }\r\nreturn(\r\n        <ShortUserLine to={'/users/'+props.tysId} className={s.shortUser}>\r\n            <Time>\r\n                <p>{props.time}</p>\r\n            </Time>\r\n            <Sessions>\r\n                <p>{props.sessions}</p>\r\n            </Sessions>\r\n            <Referrer>\r\n                <p>{props.referrer}</p>\r\n            </Referrer>\r\n            <Country>\r\n                <i className={s.flag+' '+s['flag-'+props.country]} > </i>\r\n                <p>{props.country}</p>\r\n            </Country>\r\n            <City>\r\n                <p>{props.city}</p>\r\n            </City>\r\n\r\n            <Os>\r\n                {selectOsIcon(props.os)}\r\n            </Os>\r\n        </ShortUserLine>\r\n)\r\n}\r\n\r\nconst UsersList = (props) => {\r\n    let users = []\r\n    if(props.usersList !== undefined){\r\n        if(props.usersList !== \"no users\"){\r\n            users = props.usersList.map((user) => <ShortUser time={mongoDate(user.date).time} sessions={user.sessionsNumber}\r\n                                                             city={user.city} country={user.country}\r\n                                                             os={user.os} tysId={user.tysId}\r\n                                                             referrer={user.referrer}/>)\r\n        }\r\n        else{\r\n            users =\"empty\"\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"container\">\r\n\r\n                <LoadMore pages={users} pageSize={props.pageSize} totalPages={props.totalUsers}\r\n                          pageChanger={props.getMoreUsers} loader={<LoadingUser />} emptyBlock={<NoUsers />} />\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default UsersList","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPageSize, getTotalUsers} from \"../../../../redux/selectors/summary-selectors\";\r\nimport {getMoreUsers} from \"../../../../redux/summary-reducer\";\r\nimport UsersList from \"../../../../components/content/counters/counterPage/usersList/usersList\";\r\n\r\n\r\nconst DayUsersContainer = (props) => {\r\n\r\n    return <UsersList  usersList={props.summaryUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(DayUsersContainer);\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled, {css} from 'styled-components'\r\n\r\nconst Col = styled.div`\r\n display: block;\r\n background: #0063b1;\r\n height: ${props => props.height};\r\n width: 10px;\r\n @media screen and (max-width: 1200px){\r\n  width: 6px;\r\n }\r\n \r\n`\r\n\r\n\r\nconst ColInfo = styled.div`\r\n  width: 120px;\r\n  height: 65px;\r\n  box-shadow: 0px 0px 5px #c3c3c3;\r\n  display: none;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 0px;\r\n  z-index: 2;\r\n  margin-top: 20px;\r\n  background: white;\r\n  ${(props)=>{\r\n    switch (props.show) {\r\n        case 'showLeft':\r\n            return css`display: block;\r\n                       left: -110px`\r\n        case 'showRight':\r\n            return css`display: block`\r\n        default:\r\n          return css`display: none`\r\n}\r\n}}\r\n`\r\n\r\nconst ColBlock = styled.div`\r\nheight: 100%;\r\nwidth: 2.0833%;\r\ndisplay: block;\r\nposition: relative;\r\n`\r\n\r\n\r\n\r\nconst ColWr = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: flex-end;\r\nposition: relative;\r\ncursor: pointer;\r\n&:hover{\r\nbackground: #e0e0e0;\r\n}\r\n`\r\n\r\nconst ColTime = styled.div`\r\n    font-size: 11px;\r\n    text-align: center;\r\n    padding-top: 9px;\r\n`\r\n\r\nconst ColNumber = styled.div`\r\n    color: #00A7CF;\r\n    font-size: 24px;\r\n    padding-left: 10px;\r\n    padding-top: 2px;\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Graphiccol = (props) => {\r\n    let colheight = props.graphicvalue+'px'\r\n    const [infoState, setInfoState] = useState('hidden')\r\n    let changeInfoState = (e) =>{\r\n        console.log(window.innerWidth - e.clientX)\r\n        if(window.innerWidth - e.clientX < 200){\r\n            setInfoState('showLeft')\r\n        }\r\n        else{\r\n            setInfoState('showRight')\r\n        }\r\n\r\n    }\r\n    return(\r\n            <ColBlock onMouseOver={(e)=>{changeInfoState(e)}} onMouseOut={()=>{setInfoState('hidden')}}>\r\n                <ColInfo show={infoState}>\r\n                    <ColTime>{props.graphicday}</ColTime>\r\n                    <ColNumber>{props.graphicvalue}</ColNumber>\r\n                </ColInfo>\r\n                <ColWr>\r\n                    <Col height={colheight}/>\r\n                </ColWr>\r\n            </ColBlock>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport styled from 'styled-components'\r\n\r\nlet GraphicWr = styled.div`\r\nwidth: 100%;\r\nheight: 250px;\r\nbackground: #f4f4f4;\r\n`\r\n\r\nlet GraphicColsWR = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    height: 200px;\r\n    width: calc(100% - 24px);\r\n    margin: auto;\r\n`\r\n\r\nlet GraphicBottom = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: calc(100% - 24px);\r\n    align-items: flex-start;\r\n    border-top: 1px solid gray;\r\n    margin: auto;\r\n    margin-top: 8px;\r\n    padding-top: 3px;\r\n    p{\r\n     color: gray;\r\n    }\r\n`\r\n\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <GraphicWr>\r\n               <GraphicColsWR>\r\n                   {graphicColElements}\r\n               </GraphicColsWR>\r\n\r\n              <GraphicBottom>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </GraphicBottom>\r\n            </GraphicWr>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nimport styled from 'styled-components'\r\n\r\nconst KeyNumbersWr  = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: center;\r\n`\r\n\r\nconst KeyNumberBlock = styled.div`\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 200px;\r\n    padding-bottom: 200px; // пропорции блока определяются здесь\r\n    margin-right: 11px;\r\n`\r\nconst KeyNumberContent = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f4f4f4;\r\n    \r\n`\r\n\r\nconst KeyNumberName = styled.p`\r\n    font-size: 20px;\r\n    position: absolute;\r\n    right: 16px;\r\n    bottom: 10px;\r\n`\r\n\r\nconst KeyNumber = styled.p`\r\n    font-size: 40px;\r\n    position: absolute;\r\n    left: 16px;\r\n    top: 10px;\r\n`\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <>\r\n            <div className='container'>\r\n\r\n                        <KeyNumbersWr>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayClicks}</KeyNumber>\r\n                                    <KeyNumberName>Клики</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.totalUsers}</KeyNumber>\r\n                                    <KeyNumberName>Пользователи</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n                            <KeyNumberBlock>\r\n                                <KeyNumberContent>\r\n                                    <KeyNumber>{props.summaryInfo.dayClicks}</KeyNumber>\r\n                                    <KeyNumberName>Конверсии</KeyNumberName>\r\n                                </KeyNumberContent>\r\n                            </KeyNumberBlock>\r\n                        </KeyNumbersWr>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <Graphic graphicData={props.graphicData}/>\r\n            </div>\r\n                </>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst DaystatContainer = (props) => {\r\n    return <Daystat graphicData={props.graphicInfo} summaryInfo={props.summaryInfo}/>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(DaystatContainer)","import React, {useEffect, useState} from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSummaryData, clearSummaryData} from \"../../../redux/summary-reducer\";\r\nimport {getSummaryInfo, getSummaryGraphic, getSummaryUsers} from \"../../../redux/selectors/summary-selectors\";\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SummaryContainer = (props) =>{\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        props.getSummaryData()\r\n        return( ()=>{\r\n            props.clearSummaryData()\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.summaryUsers.length !== 0){\r\n            setPageState(\"main\")\r\n        }\r\n\r\n\r\n    },[props.summaryUsers])\r\n\r\n    return (\r\n            <>\r\n\r\n                {pageState === 'fetching' ?<p>Загрузка</p> :<><DaystatContainer summaryInfo={props.summaryInfo}\r\n                                                                                graphicInfo={props.graphicInfo} />\r\n                                                                                <DayusersContainer summaryUsers={props.summaryUsers} /></> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        summaryInfo: getSummaryInfo(state),\r\n        graphicInfo: getSummaryGraphic(state),\r\n        summaryUsers: getSummaryUsers(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getSummaryData, clearSummaryData})(SummaryContainer);","import React from \"react\";\r\nimport s from \"./common.module.scss\";\r\nimport styled from \"styled-components\"\r\nexport const Input = ({input, meta,placeholder, ...props}) =>{\r\n    return (\r\n\r\n                <div className={s.input_wr}>\r\n                    <p className={s.placeholder}>{placeholder}</p>\r\n                    <input className={meta.touched && meta.error && s.danger} {...input} { ...props} />\r\n                    {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Select = () =>{\r\n    return(\r\n            <p>gj</p>\r\n    )\r\n}\r\n\r\n\r\nexport const PasswordScoreInput = ({input, meta, ...props}) =>{\r\n        let strengthValue = 'none'\r\n        let strengthText = ''\r\n\r\n        if(input.value === ''){\r\n            strengthValue = 'none'\r\n            strengthText = ''\r\n        }\r\n        else if(input.value.length <= 4 && input.value.length >= 1){\r\n            strengthValue = 'tooWeak'\r\n            strengthText = 'Слишком слабый пароль'\r\n        }\r\n        else if(input.value.length <= 6){\r\n            strengthValue = 'weak'\r\n            strengthText = 'Слабый пароль'\r\n        }\r\n        else if(input.value.length <= 8){\r\n            strengthValue = 'medium'\r\n            strengthText = 'Средний пароль'\r\n        }\r\n        else{\r\n            strengthValue = 'good'\r\n            strengthText = 'Хороший пароль'\r\n        }\r\n\r\n    return (\r\n\r\n            <div className={s.input_wr}>\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                <input className={meta.touched && meta.error && s.danger} {...input} {...props} />\r\n                {strengthValue !== 'none' ?  <div className={s.password_strength}><div className={s[strengthValue]}></div>\r\n                    <p>{strengthText}</p></div> : ''}\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport const Button = () =>{\r\n\r\n}","export const required = value => (value || typeof value === 'number' ? undefined : 'Обязательно')\r\n\r\nexport const checkLogin = value => (value && /^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(value) ? undefined : 'Некорректный логин')\r\n\r\nexport const checkEmail = value => (value && /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(value) ? undefined : 'Почта некорректная')\r\n\r\nexport const checkPassword = value => (value && /^[0-9a-z#!_-]/i.test(value) ? undefined : 'Пароль некорректный')\r\n\r\nexport const passwordsMatch = (value, allValues) =>\r\n        value !== allValues.password ? 'Пароли не совпадают' : undefined;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport s from '../addcounter.module.scss';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../../common/formControls\";\r\nimport {required} from \"../../../../../utils/validation\";\r\nimport loader_icon from \"../../../../../assets/icons/loading.svg\"\r\nconst AddCounterForm = (props) =>{\r\n\r\n    return (\r\n\r\n            <div className={s.addcounter_form}>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                    <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                    <Field name=\"counterName\" type=\"text\"  component={Input} placeholder=\"Название счётчика\" validate={required}/>\r\n                    <Field name=\"counterDomen\" type=\"text\"  component={Input} placeholder=\"Домен\" validate={required}/>\r\n                    <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddCounterReduxForm = reduxForm({form: 'addcounter-form'})(AddCounterForm)\r\n\r\n\r\nconst PixelCodeBlock = (props) =>{\r\n\r\n    const [copySuccess, setCopySuccess] = useState('');\r\n    const textAreaRef = useRef(null);\r\n\r\n    let copyToClipboard = (e) =>{\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n        setCopySuccess('copied');\r\n        setTimeout(()=>{setCopySuccess('')}, 3000)\r\n    };\r\n\r\n\r\n\r\n    return(\r\n            <div className={s.codeBlock}>\r\n                <textarea onClick={(e)=>{e.target.select()}} ref={textAreaRef} value={props.pixelCode} name=\"\" id=\"\" cols=\"30\" rows=\"10\" className={s.codeTextarea}> </textarea>\r\n                    <div className={s.copyButton_wr}>\r\n                        <button className=\"control_button\" onClick={copyToClipboard}>Скопировать код</button>\r\n                        {copySuccess === 'copied' ? <div className={s.copied_label}>Скопировано</div> : ''}\r\n                    </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nconst FetchingForm = (props) => {\r\n    return(\r\n            <div className={s.form_fetching}>\r\n                <img src={loader_icon} alt=\"\"/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Addcounterblock = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.postCounter(values.counterName, values.counterDomen)\r\n    }\r\n\r\n\r\n    const blockSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <AddCounterReduxForm onSubmit={onSubmit}/>\r\n            case \"fetching\": return <FetchingForm />\r\n            case \"pixelCode\": return <PixelCodeBlock pixelCode={props.pixelCode}/>\r\n        }\r\n    }\r\n    const textSelector = () =>{\r\n        switch (props.blockState) {\r\n            case \"form\": return <p>Добавьте ваш счётчик <br /><br /> Выбирите название для счётчика и укажите URL с которого хотите получать данные</p>\r\n            case \"fetching\": return ''\r\n            case \"pixelCode\": return <div className={s.last_text}><p>Скопируйте код и вставьте его на ваш сайт через редактор кода.<br /><br />Сразу после этого в разделе данного счётчика\r\n                начнёт отображаться статистика о новых посетителях</p><button onClick={()=>{props.makeOneMore()}} className=\"attractive-button\">Создать другой счётчик</button></div>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\">\r\n              {textSelector()}\r\n\r\n\r\n          </div>\r\n          <div className=\"col-6\">\r\n              {blockSelector()}\r\n\r\n\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\nexport default Addcounterblock;\r\nexport {PixelCodeBlock}","export const getPixelCode = (state) =>{\r\n    return state.countersPage.pixelCode\r\n}\r\nexport const getCurrentCounterInfo = (state) =>{\r\n    return state.countersPage.currentCounter.counterInfo\r\n}\r\nexport const getCurrentCounterUsers = (state) =>{\r\n    return state.countersPage.currentCounter.counterUsers\r\n}\r\n\r\nexport const getCurrentCounterPageSize = (state) =>{\r\n    return state.countersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsers = (state) =>{\r\n    return state.countersPage.currentCounter.totalUsers\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {NavLink, Route, withRouter, Link} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AccountNotExist = (props) =>{\r\n    return <div className=\"gotologinblock\">\r\n\r\n        <h1>Войдите в аккаунт</h1>\r\n        <Link className=\"control_button\" to='/login'>Войти</Link>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nconst WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isAuth) return <Component {...props}/>\r\n        else return <AccountNotExist/>\r\n    }\r\n\r\n    let ConnectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedWithAuthRedirect\r\n\r\n}\r\nexport default WithAuthRedirect","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {postCounter} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {getPixelCode} from  \"../../../../../redux/selectors/counters-selectors\"\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst AddcounterblockContainer = (props) => {\r\n    let postCounter = (name, domen) =>{\r\n        props.postCounter({name: name, domen: domen})\r\n        setBlockState(\"fetching\")\r\n        console.log(props.pixelCode)\r\n    }\r\n\r\n    let makeOneMore = () =>{\r\n        setBlockState(\"form\")\r\n    }\r\n\r\n    const [blockState, setBlockState] = useState(\"form\")\r\n\r\n    useEffect(()=>{\r\n       if(props.pixelCode !== \"\"){\r\n           setBlockState(\"pixelCode\")\r\n       }\r\n    },[props.pixelCode])\r\n\r\n    return <Addcounterblock postCounter={postCounter}\r\n                            blockState={blockState}\r\n                            makeOneMore={makeOneMore}\r\n                            pixelCode={props.pixelCode}\r\n\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n      pixelCode: getPixelCode(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {postCounter}), WithAuthRedirect)(AddcounterblockContainer);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route exact path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counter/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span>\r\n                               <span className={s.checking}>Проверяется</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from \"react\";\r\n\r\nconst PaginationComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    let pages =[]\r\n    for(let i=1; i<=pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n    let pagesButtonsElements = pages.map(page => <span key={page} className={props.currentPage === page && \"current-page\"}\r\n                                                       onClick={() => {props.changePage(page)}}>{page}</span>)\r\n    let buttonsSelector = () =>{\r\n        if (props.pages === 'empty' || pagesCount === 1){\r\n            return (<></>)\r\n        }\r\n        else{\r\n            return   <div className=\"pages-buttons\">{pagesButtonsElements}</div>\r\n        }\r\n    }\r\n    return(\r\n            buttonsSelector()\r\n    )\r\n}\r\n\r\nconst Loader = (props) =>{\r\n    return(\r\n            props.elem\r\n    )\r\n}\r\n\r\nexport class Pagination extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            if(this.props.getCurrentPage === undefined){\r\n                this.setState({isFetching: false})\r\n            }\r\n        else{\r\n\r\n                if(this.state.pages !== prevState.pages){\r\n\r\n                    this.setState({isFetching: false})\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n\r\n            this.loaders.push(<Loader elem={this.props.loader} key={i} />)\r\n        }\r\n\r\n        this.setState({isFetching: true})\r\n\r\n    }\r\n\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching){\r\n            return this.loaders\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n                <PaginationComponent currentPage={this.state.currentPage}\r\n                                     pageSize={this.props.pageSize}\r\n                                     totalPages={this.props.totalPages}\r\n                                     changePage={this.changePage}\r\n                                     pages={this.state.pages}\r\n                />\r\n               </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../common/pagination\";\r\nimport plus from \"../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У вас ещё нет счётчиков,<br /> добавьте свой первый счётчик</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst Counterslist = (props) => {\r\n\r\n       let countersElement = []\r\n\r\n       if(props.countersListData.length !== 0){\r\n           countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}/> )\r\n       }\r\n       else{\r\n           countersElement = 'empty'\r\n       }\r\n\r\n\r\n       let firstLoader = []\r\n            for(let i=0; i < props.pageSize; i++){\r\n            firstLoader.push(<LoadingCounter />)\r\n        }\r\n       return <div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Статус</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.list}>\r\n\r\n                     <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                           pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n                   </div>\r\n\r\n               </div>\r\n\r\n\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCounters, setTotalCounters, getCounters} from \"../../../../redux/counters-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from   \"redux\"\r\nclass CounterslistContainer extends React.Component{\r\n    componentDidMount() {\r\n           this.props.getCounters(1)\r\n    }\r\n\r\n    changePage = (page) =>{\r\n        this.props.getCounters(page)\r\n    }\r\n    render(){\r\n      return <Counterslist\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              currentPage={this.props.currentPage}\r\n              isFetching={this.props.isFetching}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n        pageSize: state.countersPage.pageSize,\r\n        totalCounters: state.countersPage.totalCounters,\r\n        currentPage: state.countersPage.currentPage,\r\n        isFetching: state.countersPage.isFetching\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default CounterslistContainer = compose(connect(mapStateToProps, {setCounters, setTotalCounters,\r\n    getCounters}), WithAuthRedirect)(CounterslistContainer)\r\n\r\n","import React from \"react\";\r\nimport s from \"./common.module.scss\";\r\nexport const CountersListLoading = () =>{\r\n    return (\r\n\r\n           <div className={s.loading_scheme}>\r\n              <div className={s.add_button +\" \"+ s.elem} />\r\n              <div className={s.counters_table_head +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.page_buttons}>\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n              </div>\r\n           </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport const FriendsPageLoader = () =>{\r\n    return(\r\n            <div className={s.loading_scheme}>\r\n               <div className={s.text_line + \" \" + s.elem} />\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                </div>\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n\r\n                    <div className={s.page_buttons}>\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\nimport {CountersListLoading} from \"../../common/loadingSchemes\"\r\nimport {connect} from \"react-redux\";\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <>\r\n                {props.isInitialized ? <><Addcounter/><CounterslistContainer /> </>: <CountersListLoading />}\r\n           </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Counters);","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <>\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from \"react\";\r\n\r\nexport const offsetText = (text) =>{\r\n    let textarr = text.split('\\n');\r\n    const isUrl = /^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/;\r\n    for (let i = 0; i < textarr.length; i=i+2){\r\n        textarr.splice(i+1,0,<br />)\r\n    }\r\n\r\n    for (let lineNumber = 0; lineNumber < textarr.length; lineNumber++){\r\n        if(typeof textarr[lineNumber] === 'string'){\r\n            let line = textarr[lineNumber].split(' ')\r\n            for (let wordNumber = 0; wordNumber < line.length; wordNumber++){\r\n                if(line[wordNumber] == '') {\r\n                    line[wordNumber] = <span>&nbsp;</span>\r\n                }\r\n                else{\r\n                    line[wordNumber] = line[wordNumber]+' ';\r\n                }\r\n\r\n                if(isUrl.test(line[wordNumber])){\r\n                    line[wordNumber] = <a target=\"blank\" href={'https://'+line[wordNumber]}>{line[wordNumber]}</a>\r\n                }\r\n            }\r\n            textarr[lineNumber] = line\r\n        }\r\n\r\n    }\r\n    return(\r\n            textarr\r\n    )\r\n}","import React from \"react\";\r\nimport loadingImg from \"../../assets/icons/small-loading.svg\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport s from \"./common.module.scss\"\r\nimport {offsetText} from \"../../utils/textTransformation\";\r\n\r\nexport class EditInput extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n                this.setState({isFetching: true})\r\n                this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n\r\n            if(prevState.isFetching === true){\r\n                this.setState({wasUpdated: true})\r\n                setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n                    {this.state.inputEditMode\r\n                            ?\r\n\r\n                                        <div>\r\n                                            <input onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                                   type=\"text\" className='plain_input' placeholder={this.props.placeholder}\r\n                                                   onBlur={() => {this.changeCondition(false)}} autoFocus={true}/>\r\n\r\n                                        </div>\r\n                            :\r\n                            <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.props.inputText}</div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class EditTextarea extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    changeCondition = (inputState,e) =>{\r\n        if(e){\r\n            console.log(e.target)\r\n        }\r\n\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n            this.setState({isFetching: true})\r\n            this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n            \r\n        }\r\n\r\n        if(prevState.isFetching === true && prevProps !== this.props){\r\n            this.setState({wasUpdated: true})\r\n            setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={(e) =>{this.changeCondition(true, e)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n            {this.state.inputEditMode\r\n                    ?\r\n\r\n                    <div>\r\n                        <textarea onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                  wrap=\"soft\" className='plain_textarea'\r\n                                  type=\"text\"  placeholder={this.props.placeholder}\r\n                                  cols=\"30\" rows=\"10\"\r\n                                  onBlur={() => {this.changeCondition(false)}} autoFocus={true}> </textarea>\r\n                    </div>\r\n                    :\r\n                    <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder :<p>{offsetText(this.props.inputText)}</p>}</div>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nimport {EditInput, EditTextarea} from \"../../../common/editinput\";\r\n\r\nclass YourProfile extends React.Component{\r\n    render (){\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <div className={s.photo_wr}>\r\n                                <p>Добавить фото</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <EditInput inputText={this.props.name} putInfo={this.props.putProfileInfo} name={\"name\"} placeholder={\"Введите ваше имя\"}/>\r\n                                <EditInput inputText={this.props.soName} putInfo={this.props.putProfileInfo} name={\"soName\"} placeholder={\"Введите вашу фамилию\"}/>\r\n                                <EditInput inputText={this.props.company} putInfo={this.props.putProfileInfo} name={\"company\"} placeholder={\"Введите вашу компанию\"}/>\r\n                                <EditTextarea inputText={this.props.description} putInfo={this.props.putProfileInfo} name={\"description\"} placeholder={\"Введите описание\"} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React from 'react';\r\nimport s2 from '../../friends/friends.module.scss';\r\nimport s from './yourFriends.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {LoadMore} from \"../../../common/loadMore\";\r\nimport friendIcon from '../../../../assets/icons/users.svg'\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\n\r\nconst NoFriends = () =>{\r\n    return <div className={s.noFriends}>\r\n        <img src={friendIcon} alt=\"\"/>\r\n        <p>У вас ещё нет друзей</p>\r\n    </div>\r\n}\r\n\r\nconst YourFriends = (props) => {\r\n    let friendsList = []\r\n    let deleteFriend = (userId, key) =>{\r\n     props.deleteFriend(userId, key)\r\n    }\r\n\r\n    let buttonSelector = (userId, buttonId) =>{\r\n        if(props.friends[buttonId].isFetching === false){\r\n            return <button className={s.delete_button} onClick={()=>{deleteFriend(userId, buttonId)}}>Удалить из друзей</button>\r\n        }\r\n        else{\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n    }\r\n    if(props.friends !== \"no friends\"){\r\n        let i = 0\r\n        friendsList = props.friends.map((friend)=> <div className={s2.line}>\r\n            <div className={s2.names_row}>\r\n                <p className=\"name\">{friend.name}</p>\r\n                <p className=\"soname\">{friend.soName}</p>\r\n            </div>\r\n            <div className={s2.company}>{friend.company}</div>\r\n            <div className={s2.description}><p className={s2.description_p}>{offsetText(friend.description)}</p></div>\r\n            {buttonSelector(friend.userId, i++)}\r\n\r\n        </div>)\r\n    }else{\r\n        friendsList = \"empty\"\r\n    }\r\n    return  (\r\n            <div className={s2.yourFriends}>\r\n                <h2>Ваши друзья:</h2>\r\n                <LoadMore pages={friendsList} pageSize={props.pageSize} totalPages={props.totalFriends}\r\n                          pageChanger={props.addToFriendsList} loader={<LoadingProfile />} emptyBlock={<NoFriends />}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default YourFriends;","export const selectProfilesList = (state) =>{\r\n    return state.profilePage.profilesList\r\n}\r\n\r\nexport const getTotalProfiles = (state) =>{\r\n    return state.profilePage.totalProfiles\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.profilePage.pageSize\r\n}\r\n\r\nexport const getProposalsList = (state) =>{\r\n    return state.profilePage.proposals\r\n}\r\n\r\nexport const getFriends = (state) =>{\r\n    return state.profilePage.friendsList\r\n}\r\n\r\nexport const getTotalFriends = (state) =>{\r\n    return state.profilePage.totalFriends\r\n}\r\n\r\nexport const getDeletedFriend = (state) =>{\r\n    return state.profilePage.deletedFriend\r\n}","import React from 'react';\r\nimport YourFriends from \"./yourFriends\";\r\nimport {getFriends, getPageSize, getTotalFriends, getDeletedFriend} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getFriendsList, deleteFriend, addFriendsList, setFriendsList} from \"../../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nclass YourFriendsContainer extends React.Component{\r\n    state ={\r\n        friends: []\r\n    }\r\n    componentDidMount() {\r\n        this.props.getFriendsList(1, this.props.pageSize)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            if(prevProps.deletedFriend !== this.props.deletedFriend){\r\n                this.deleteFriendLocal(this.props.deletedFriend[0])\r\n            }\r\n\r\n            if(prevProps.friends !== this.props.friends){\r\n                if(typeof this.props.friends === \"object\"){\r\n                    let friendsFetching = this.props.friends.map((friend)=> ({\r\n                        userId: friend.userId,\r\n                        name: friend.name,\r\n                        soName: friend.soName,\r\n                        company: friend.company,\r\n                        description: friend.description,\r\n                        isFetching: false\r\n                    }))\r\n                    this.setState({friends: [...this.state.friends, ...friendsFetching]})\r\n\r\n                }\r\n                else{\r\n                    if(typeof this.props.friends === 'object'){\r\n                        let friendsFetching = this.props.friends.map((friend)=> ({\r\n                            userId: friend.userId,\r\n                            name: friend.name,\r\n                            soName: friend.soName,\r\n                            company: friend.company,\r\n                            description: friend.description,\r\n                            isFetching: false\r\n                        }))\r\n                        this.setState({friends: friendsFetching})\r\n                    }\r\n                    else{\r\n                        this.setState({friends: this.props.friends})\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyFriends = {...this.state.friends}\r\n        copyFriends[buttonId].isFetching = true\r\n        this.setState({listButtons: copyFriends})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setFriendsList([],undefined)\r\n    }\r\n\r\n    deleteFriendLocal = (friendId) =>{\r\n        let friendsCopy = [...this.state.friends]\r\n        friendsCopy.splice(friendId, 1)\r\n        if(friendsCopy.length === 0){\r\n            this.setState({friends: \"no friends\"})\r\n        }\r\n        else{\r\n            this.setState({friends: friendsCopy})\r\n        }\r\n    }\r\n\r\n    deleteFriend = (userId, buttonId) =>{\r\n        this.changeButtonState(buttonId)\r\n        this.props.deleteFriend(userId, buttonId)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <div className=\"container\">\r\n                <YourFriends\r\n                        friends={this.state.friends}\r\n                        pageSize={this.props.pageSize}\r\n                        totalFriends={this.props.totalFriends}\r\n                        deleteFriend={this.deleteFriend}\r\n                        addToFriendsList={this.props.addFriendsList}\r\n\r\n\r\n                /></div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        friends: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalFriends: getTotalFriends(state),\r\n        deletedFriend: getDeletedFriend(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getFriendsList, deleteFriend, addFriendsList, setFriendsList})(YourFriendsContainer);","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport YourFriendsContainer from './yourFriends/yourFriendsContainer'\r\nconst ProfileSettings = () =>{\r\n    return(\r\n            <>\r\n               <YourProfileContainer />\r\n               <YourFriendsContainer />\r\n            </>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings);","import React, {useEffect, useState} from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../components/common/formControls\"\r\nimport {required} from \"../../../utils/validation\";\r\nimport doneImg from \"../../../assets/icons/done.svg\";\r\nimport styled from \"styled-components\";\r\nimport background from \"../../../assets/summary-bg.jpg\";\r\n\r\nconst BackGround = styled.div`\r\nbackground: url(${background});\r\ndisplay: block;\r\nposition: fixed;\r\ntop:0;\r\nleft: 0;\r\nright: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: -1;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\n`\r\n\r\nconst SuccessForm = () =>{\r\n    const [redirect, setRedirect] = useState(false)\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setRedirect(true)},1500)\r\n    },[])\r\n    return(\r\n            <div className={s.success_auth}>\r\n                {redirect && <Redirect to='/summary' />}\r\n                <img src={doneImg} alt=\"\"/><p>Вы авторизованы</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <h1 className={s.h1}>Вход</h1>\r\n                <div className={s.form_danger_wr}>{props.error ? <span className={s.form_danger}>{props.error}</span> : ''}</div>\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"emailInput\" type=\"text\"  component={Input} placeholder=\"Почта\" validate={required}/>\r\n                <Field name=\"passwordInput\" type=\"password\"  component={Input} placeholder=\"Пароль\" validate={required}/>\r\n                <p className={s.dont_reg_yet}>Нет учётной записи? <NavLink to='signup'>Создайте её!</NavLink></p>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Войти</button>\r\n\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login-form'})(LoginForm)\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendLoginRequest(values.emailInput, values.passwordInput)\r\n\r\n    }\r\n\r\n\r\n    return  (\r\n            <>\r\n           <BackGround />\r\n          <div className={`container ${s.login_container}`}>\r\n              <div className={s.login_block}>\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <LoginReduxForm isFetching={props.isFetching} onSubmit={onSubmit}/>\r\n                          </div>\r\n                          :\r\n                          <SuccessForm />\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n                </>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    sendLoginRequest = (email, password) => {\r\n        this.props.loginThunkCreator(email, password)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <LoginBlock\r\n                       isFetching={this.props.isFetching}\r\n                       isAuth={this.props.isAuth}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n            />\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, PasswordScoreInput} from \"../../common/formControls\";\r\nimport {required, checkLogin, checkEmail, checkPassword, passwordsMatch} from \"../../../utils/validation\";\r\n\r\n\r\nconst SignUpForm = (props) =>{\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"login\" type=\"text\"  component={Input} placeholder=\"Придумайте логин\" validate={[required, checkLogin]}/>\r\n                <Field name=\"email\" type=\"text\"  component={Input} placeholder=\"Ваша почта\" validate={[required, checkEmail]}/>\r\n                <Field name=\"password\" type=\"password\"  component={PasswordScoreInput} placeholder=\"Придумайте пароль\" validate={[required, checkPassword]}/>\r\n                <Field name=\"repeatPassword\" type=\"password\"  component={Input} placeholder=\"Повторите пароль\" validate={[required, passwordsMatch]}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({form: 'signup-form'})(SignUpForm)\r\n\r\n\r\nconst SignUpFormBlock = (props) =>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendSignUpRequest( values.email, values.login, values.password)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.signup_form}>\r\n                <SignUpReduxForm onSubmit={onSubmit} isFetching={props.isFetching}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className={s.profile_form_wr}>\r\n            <div className={s.auth_info}>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Почта:</p><p className=\"line-text\">{props.email}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Логин:</p><p className=\"line-text\">{props.login}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Дата регистрации:</p><p className=\"line-text\">{props.regDate}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">ID</p><p className=\"line-text\">{props.profileId}</p></div>\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                    <div className={s.add_photo_row}>\r\n                         <div className={s.photo_cont}></div>\r\n                         <p className={s.add_photo}>Добавить фото</p>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Имя' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Фамилия' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <textarea className=\"plain_textarea\" placeholder='Информация о вас' name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <button>Отправить</button>\r\n                    <NavLink to='/summary'>Пропустить</NavLink>\r\n                </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n\r\n                <div className=\"container\">\r\n                    {props.signUpState == 'signUpForm' ?\r\n                   <SignUpFormBlock\r\n                             isFetching={props.isFetching} sendSignUpRequest={props.sendSignUpRequest}\r\n                   /> : <ProfileForm profileId={props.profileId} email={props.email}\r\n                                     login={props.login} regDate={props.regDate}/>\r\n                    }\r\n                </div>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSignUpState, signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n    sendSignUpRequest = (email,login,password) =>{\r\n      this.props.signUpThunkCreator(email,login,password)\r\n    }\r\n    render() {\r\n        return <SignUpBlock\r\n\r\n                isFetching={this.props.isFetching}\r\n                signUpState={this.props.signUpState}\r\n                profileId={this.props.profileId}\r\n                email={this.props.email}\r\n                login={this.props.login}\r\n                regDate={this.props.regDate}\r\n                sendSignUpRequest={this.sendSignUpRequest}\r\n\r\n\r\n\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isFetching: state.auth.isFetching,\r\n        signUpState: state.auth.signUpState,\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {setSignUpState, signUpThunkCreator})(SignUpContainer)","import React from 'react';\r\nimport s from './newFriends.module.scss';\r\nimport s2 from './../friends.module.scss'\r\nimport openfolder from '../../../../assets/icons/mail-open.svg'\r\nconst Loader = () =>{\r\n    return (<>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n        </>\r\n)\r\n}\r\n\r\nconst NewFriends = (props) => {\r\n        let acceptProposal = (userId, buttonId) =>{\r\n            props.acceptProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n        let denyProposal = (userId, buttonId) =>{\r\n            props.denyProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n\r\n\r\n        let proposalsList = []\r\n        let buttonSelector = (userId, buttonId) =>{\r\n\r\n                if(props.buttonsState[buttonId] && props.buttonsState[buttonId].isFetching === false){\r\n                    return <div className={s.buttons_row}>\r\n                        <button className={s.deny} onClick={() =>{denyProposal(userId, buttonId)}}>Отказать</button>\r\n                        <button className={s.accept} onClick={()=>{acceptProposal(userId, buttonId)}}>Принять</button>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <p>Загрузка</p>\r\n                }\r\n\r\n\r\n        }\r\n\r\n        if(props.isFetching === false){\r\n            if(props.proposals !== \"no proposals\"){\r\n                let i = 0\r\n                proposalsList = props.proposals.map((proposal)=> <div key={proposal.userId} className={s.line}>\r\n                    <div className={s.names_row} >\r\n                        <p className=\"name\">{proposal.name}</p>\r\n                        <p className=\"soname\">{proposal.soName}</p>\r\n                    </div>\r\n                    {buttonSelector(proposal.userId, i++)}\r\n                </div>)\r\n            }else{\r\n                proposalsList = <div className={s.noProposals}>\r\n                    <img src={openfolder} alt=\"\"/>\r\n                    <p>У вас нет заявок</p>\r\n                </div>\r\n            }\r\n        }\r\n        else {\r\n            proposalsList = <Loader />\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.newFriends}>\r\n                <h2>Заявки в друзья:</h2>\r\n                {proposalsList}\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default NewFriends;","import React from 'react';\r\nimport NewFriends from \"./newFriends\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getProposalsList} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getProposals, acceptProposal, denyProposal} from \"../../../../redux/profile-reducer\";\r\n\r\nclass NewFriendsContainer extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        buttonsState: []\r\n    }\r\n    componentDidMount() {\r\n     this.setState({isFetching: true})\r\n     this.props.getProposals()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({isFetching: false})\r\n            if(typeof this.props.proposals == 'object'){\r\n                let listButtons = this.props.proposals.map((profile)=> ({isFetching: false}))\r\n                this.setState({buttonsState: listButtons})\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyButtonsState = {...this.state.buttonsState}\r\n        copyButtonsState[buttonId].isFetching = true\r\n        this.setState({buttonsState: copyButtonsState})\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <NewFriends proposals={this.props.proposals}\r\n                            acceptProposal={this.props.acceptProposal}\r\n                            denyProposal={this.props.denyProposal}\r\n                            isFetching={this.state.isFetching}\r\n                            buttonsState={this.state.buttonsState}\r\n                            chanhgeButtonsState={this.changeButtonState}\r\n\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n       proposals: getProposalsList(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProposals, acceptProposal, denyProposal})(NewFriendsContainer);","import React from 'react';\r\nimport s2 from '../friends.module.scss';\r\nimport s from './usersList.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {Pagination} from \"../../../common/pagination\";\r\n\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\nconst UsersList = (props) => {\r\n    let postProposal = (id, buttonId) =>{\r\n       props.postProposal(id, props.currentPage)\r\n       props.changeButtonState(buttonId)\r\n\r\n    }\r\n\r\n    let deleteProposal = (id, buttonId) =>{\r\n       props.deleteProposal(id, props.currentPage)\r\n        props.changeButtonState(buttonId)\r\n    }\r\n\r\n\r\n    let buttonSelector = (status,id, buttonId) =>{\r\n        if(props.buttonsStates[buttonId] && props.buttonsStates[buttonId].isFetching === false){\r\n            switch (status){\r\n                case 'It is you': return\r\n                case 'proposal sent': return <p onClick={()=>{deleteProposal(id, buttonId)}}>Заявка отправлена</p>\r\n                case 'Your friend': return <p>Ваш друг</p>\r\n                case 'plain user':return <button onClick={()=>{postProposal(id, buttonId)}} className={s.add_button}>Добавить в друзья</button>\r\n                default: return\r\n            }\r\n        }\r\n        else {\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n\r\n    }\r\n    let i = 0\r\n    let profilesArr = props.profilesList.map((profile) =>\r\n            <div className={s2.line} key={profile._id.toString()}>\r\n                <div className={s2.names_row}>\r\n                   <p className=\"name\">{profile.name}</p>\r\n                   <p className=\"soname\">{profile.soName}</p>\r\n                </div>\r\n                <div className={s2.company}>{profile.company}</div>\r\n                <div className={s2.description}><p className={s2.description_p}>{offsetText(profile.description)}</p></div>\r\n                {buttonSelector(profile.friendStatus, profile._id, i++)}\r\n            </div>\r\n    )\r\n\r\n    return  (\r\n            <div className={s.usersList}>\r\n                <h2>Список пользователей:</h2>\r\n                 <Pagination pages={profilesArr} pageSize={props.pageSize} totalPages={props.totalProfiles}\r\n                             pageChanger={props.getProfilesList} loader={<LoadingProfile />} getCurrentPage={props.getCurrentPage}/>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default UsersList;","import React from 'react';\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilesList, postProposal, deleteProposal, setProposals} from \"../../../../redux/profile-reducer\";\r\nimport {selectProfilesList, getTotalProfiles, getPageSize} from \"../../../../redux/selectors/profileselectors\"\r\nclass UsersListContainer extends React.Component{\r\n\r\n    state ={\r\n        listButtons: [],\r\n        profilesList: [],\r\n        currentPage: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProfilesList(1, this.props.pageSize)\r\n\r\n    }\r\n\r\n    getCurrentPage = (currentPage) =>{\r\n        this.setState({currentPage: currentPage})\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyListButtons = {...this.state.listButtons}\r\n        copyListButtons[buttonId].isFetching = true\r\n        this.setState({listButtons: copyListButtons})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props !== prevProps){\r\n            this.setState({profilesList: this.props.profilesList})\r\n            for(let i = 0; i < this.state.profilesList.length; i++){\r\n\r\n                if(this.state.profilesList[i] && this.props.profilesList[i]){\r\n\r\n                    if( this.state.profilesList[i].friendStatus !== this.props.profilesList[i].friendStatus){\r\n                        let copyListButtons = {...this.state.listButtons}\r\n                        copyListButtons[i].isFetching = false\r\n                        this.setState({listButtons: copyListButtons})\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            if(this.state.listButtons.length === 0){\r\n                let listButtons = this.props.profilesList.map((profile)=> ({isFetching: false}))\r\n                this.setState({listButtons: listButtons})\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setProposals([])\r\n    }\r\n\r\n    getProfilesList = (page) =>{\r\n        this.props.getProfilesList(page,this.props.pageSize)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <UsersList profilesList={this.props.profilesList}\r\n                           totalProfiles={this.props.totalProfiles}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.state.currentPage}\r\n                           getProfilesList={this.getProfilesList}\r\n                           postProposal={this.props.postProposal}\r\n                           deleteProposal={this.props.deleteProposal}\r\n                           changeButtonState={this.changeButtonState}\r\n                           buttonsStates={this.state.listButtons}\r\n                           getCurrentPage={this.getCurrentPage}\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n      profilesList: selectProfilesList(state),\r\n      totalProfiles: getTotalProfiles(state),\r\n      pageSize: getPageSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProfilesList, postProposal, deleteProposal, setProposals})(UsersListContainer);","import React from 'react';\r\nimport s from './friends.module.scss';\r\nimport NewFriendsContainer from \"./newFriends/newFriendsContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {FriendsPageLoader} from \"../../common/loadingSchemes\";\r\nconst FriendsPage = (props) => {\r\n    return  (\r\n            <>\r\n                {props.isInitialized ?\r\n\r\n                        <div className=\"container\">\r\n                             <p>Добавляйте другие аккаунты в друзья, для совместной работы.</p>\r\n                            <NewFriendsContainer />\r\n                            <UsersListContainer />\r\n                         </div>\r\n\r\n                    : <FriendsPageLoader />}\r\n            </>\r\n\r\n\r\n\r\n                    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(FriendsPage)","import React, {useEffect, useState} from \"react\";\r\nimport s from './counterInfo.module.scss'\r\nimport {PixelCodeBlock} from \"../../addcounter/addcounterblock/addcounterblock\";\r\n\r\nconst CounterInfo = (props) => {\r\n\r\n    return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className={`${s.counterInfo} col-6`}>\r\n                        <div className={s.names}>\r\n                            <div className={s.name}>\r\n                                <p>\r\n                                    {props.counterInfo.name}\r\n                                </p>\r\n                                <span>\r\n                                    Имя счётчика\r\n                                </span>\r\n                            </div>\r\n                            <div className={s.id}>\r\n                                <p>{props.counterInfo._id}</p>\r\n                                <span>tysId</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.counterInfo.domen}</p>\r\n                            <span>URL счётчика</span>\r\n                        </div>\r\n                        <div className={s.results}>\r\n                            <div className={s.dayusers}>\r\n                                <p>{props.counterInfo.dayusers}</p>\r\n                                <span>Пользователи за день</span>\r\n                            </div>\r\n                            <div className={s.allusers}>\r\n                                <p>{props.counterInfo.allusers}</p>\r\n                                <span>Пользователей всего</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <PixelCodeBlock pixelCode={props.counterInfo.pixelCode} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CounterInfo","import React, {useEffect, useState} from \"react\";\r\nimport CounterInfo from \"./counterInfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst CounterInfoContainer = (props) => {\r\n\r\n\r\n    return <CounterInfo counterId={props.counterId}\r\n                        counterInfo={props.counterInfo}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {})(CounterInfoContainer);","import React from \"react\";\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentCounterPageSize, getTotalUsers} from '../../../../../redux/selectors/counters-selectors'\r\nimport {getMoreUsers} from \"../../../../../redux/counters-reducer\";\r\n\r\n\r\nconst UsersListContainer = (props) => {\r\n\r\n\r\n    return <UsersList  usersList={props.counterUsers}\r\n                       pageSize={props.pageSize}\r\n                       totalUsers={props.totalUsers}\r\n                       getMoreUsers={props.getMoreUsers}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        pageSize: getCurrentCounterPageSize(state),\r\n        totalUsers: getTotalUsers(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getMoreUsers})(UsersListContainer);","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport CounterInfoContainer from \"./counterInfo/counterInfoContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {clearCurrentCounter, getCurrentCounter} from \"../../../../redux/counters-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentCounterUsers, getCurrentCounterInfo} from \"../../../../redux/selectors/counters-selectors\";\r\n\r\nconst CounterPage = (props) =>{\r\n    let {counterId} = useParams()\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        props.getCurrentCounter(counterId)\r\n        return () =>{\r\n            props.clearCurrentCounter()\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.counterInfo !== \"\"){\r\n            setPageState(\"main\")\r\n        }\r\n    },[props.counterInfo])\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<p>Загрузка</p> :<><CounterInfoContainer counterInfo={props.counterInfo}\r\n                    counterId={counterId} />\r\n                    <UsersListContainer counterUsers={props.counterUsers}\r\n                    counterId={counterId}/></> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n       counterInfo: getCurrentCounterInfo(state),\r\n       counterUsers: getCurrentCounterUsers(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getCurrentCounter, clearCurrentCounter})(CounterPage);","import React from \"react\";\r\nimport s from './userPage.module.scss'\r\nimport mongoDate from \"../../utils/mongoDate\";\r\nconst UserPage = (props) => {\r\n    let userInfo = props.userInfo\r\n       let sessionCount = 1\r\n       let userSessions = props.userSessions.map((session)=>\r\n               <div className={s.session}>\r\n                <span className={s.sessionNumber}>{sessionCount++}</span>\r\n                <p className={s.entryTime}>{mongoDate(session.entryTime).time}</p>\r\n                <p className={s.awayTime}>{mongoDate(session.awayTime).time}</p>\r\n               </div>)\r\n\r\n\r\n       let DatesMapper = (sessions) =>{\r\n        let datesMap = []\r\n         const millieSecondsCompare = (firstDate, secondDate) =>{\r\n            return (firstDate - secondDate)/(60*60*1000)\r\n         }\r\n         for(let i = 0; sessions.length > i; i++){\r\n             let d = new Date();\r\n             if(sessions[i].awayTime){\r\n                 if(millieSecondsCompare(Date.now(), Date.parse(sessions[i].awayTime)) < (d.getHours() * 3600 + d.getMinutes() * 60 + d.getSeconds())/(3600)){\r\n                     datesMap.push({index: i, date: 'Сегодня'})\r\n                 }\r\n                 else if (millieSecondsCompare(Date.now(), Date.parse(sessions[i].awayTime)) > (d.getHours() * 3600 + d.getMinutes() * 60 + d.getSeconds())/(3600)\r\n                         && millieSecondsCompare(Date.now(), Date.parse(sessions[i].awayTime)) < 24 + (d.getHours() * 3600 + d.getMinutes() * 60 + d.getSeconds())/(3600)){\r\n                     datesMap.push({index: i, date: 'Вчера'})\r\n                 }\r\n                 else {\r\n                     datesMap.push({index: i, date: mongoDate(sessions[i].awayTime).date})\r\n                 }\r\n             }\r\n         }\r\n         let cleanDatesMap = [datesMap[0]]\r\n         for(let i = 1; datesMap.length > i; i++){\r\n             let prevDate = i - 1\r\n             if(datesMap[i].date !== datesMap[prevDate].date){\r\n                 cleanDatesMap.push(datesMap[i])\r\n\r\n             }\r\n         }\r\n        return cleanDatesMap\r\n       }\r\n       console.log(DatesMapper(props.userSessions))\r\n\r\n       const getSessionsWithDates = (datesMap, sessions) =>{\r\n        let sessionsCopy = [...sessions]\r\n        let datesMapCopy = [...datesMap]\r\n         for(let i = 0; sessionsCopy.length > i; i++){\r\n\r\n             for(let ii = 0; datesMapCopy.length > ii; ii++){\r\n                 if((datesMapCopy[ii].index + ii) === i){\r\n                     sessionsCopy.splice(i,0, <div className={s.date_divider}>{datesMapCopy[ii].date}</div> )\r\n\r\n                 }\r\n             }\r\n\r\n         }\r\n         return sessionsCopy\r\n       }\r\n\r\n\r\n\r\n        return (\r\n                <div className='container'>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <div className={s.main_info}>\r\n                                <h4 className={s.h4}>Основное:</h4>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">tysId</label>\r\n                                    <p>{userInfo._id}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">URL</label>\r\n                                    <p>{userInfo.referer}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Ip</label>\r\n                                    <p>{userInfo.data.ipInfo.query}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Страна</label>\r\n                                    <p>{userInfo.data.ipInfo.country}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Город</label>\r\n                                    <p>{userInfo.data.ipInfo.city}</p>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className={s.visits}>\r\n                                <h4 className={s.h4}>Посещения:</h4>\r\n                                {getSessionsWithDates(DatesMapper(props.userSessions), userSessions)}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.device_info}>\r\n                        <h4 className={s.h4}>Устройство:</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <h5 className={s.col_head}>Браузер</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Имя</label>\r\n                                    <p>{userInfo.data.device.browser.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.browser.version}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Осн. версия</label>\r\n                                    <p>{userInfo.data.device.browser.majorVersion}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <h5 className={s.col_head}>ОС</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Название</label>\r\n                                    <p>{userInfo.data.device.os.name}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Версия</label>\r\n                                    <p>{userInfo.data.device.os.version}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <h5 className={s.col_head}>Об утстройстве</h5>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Производитель</label>\r\n                                    <p>{userInfo.data.device.device.vendor}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Модель</label>\r\n                                    <p>{userInfo.data.device.device.model}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Тип</label>\r\n                                    <p>{userInfo.data.device.device.type}</p>\r\n                                </div>\r\n                                <div className={s.label_row}>\r\n                                    <label htmlFor=\"\">Процессор</label>\r\n                                    <p>{userInfo.data.device.cpu.architecture}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.geo_info}>\r\n                        <h4 className={s.h4}>Расшифровка IP:</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <h5 className={s.col_head}>География</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Код страны</label>\r\n                                        <p>{userInfo.data.ipInfo.countryCode}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Регион</label>\r\n                                        <p>{userInfo.data.ipInfo.regionName}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. широта</label>\r\n                                        <p>{userInfo.data.ipInfo.lat}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Прим. долгота</label>\r\n                                        <p>{userInfo.data.ipInfo.lon}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <h5 className={s.col_head}>Оператор</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Провайдер</label>\r\n                                        <p>{userInfo.data.ipInfo.isp}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Организация</label>\r\n                                        <p>{userInfo.data.ipInfo.org}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">AS</label>\r\n                                        <p>{userInfo.data.ipInfo.as}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <h5 className={s.col_head}>Остальное</h5>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Почтовый индекс</label>\r\n                                        <p>{userInfo.data.ipInfo.zip}</p>\r\n                                    </div>\r\n                                    <div className={s.label_row}>\r\n                                        <label htmlFor=\"\">Часовой пояс</label>\r\n                                        <p>{userInfo.data.ipInfo.timezone}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                    </div>\r\n                    <div className={s.headers_info}>\r\n                        <h4 className={s.h4}>Заголовки:</h4>\r\n                        <div className={s.label_row}>\r\n                            <label htmlFor=\"\">user_agent</label>\r\n                            <p>{userInfo.data.headers.user_agent}</p>\r\n                        </div>\r\n                        <div className={s.label_row}>\r\n                            <label htmlFor=\"\">accept</label>\r\n                            <p>{userInfo.data.headers.accept}</p>\r\n                        </div>\r\n                        <div className={s.label_row}>\r\n                            <label htmlFor=\"\">languages</label>\r\n                            <p>{userInfo.data.headers.languages}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n        )\r\n\r\n}\r\n\r\nexport default UserPage","import {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUserInfoFromState = (state) =>{\r\n    return state.users.userInfo\r\n}\r\n\r\nexport const getSessions = (state) =>{\r\n    return state.users.userInfo.sessions\r\n}\r\n\r\nexport const getUserSessionsList = createSelector(getSessions, (sessions) => {\r\n    let getSessions = (sessions) => {\r\n        let sessionsArray = []\r\n        for (let i = 0; sessions.length  > i ; i = i + 2) {\r\n            let nextIndex = i + 1\r\n            let session = ''\r\n\r\n            const makeSessionPare = (enterTime, awayTime) =>{\r\n                return  {\r\n                    entryTime : enterTime,\r\n                    awayTime : awayTime\r\n                }\r\n            }\r\n\r\n            if(sessions[i] && sessions[nextIndex]){\r\n                if(Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"goAwayTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, sessions[nextIndex].goAwayTime)\r\n                }\r\n                else if (Object.keys(sessions[i])[0] === \"entryTime\" && Object.keys(sessions[nextIndex])[0] === \"entryTime\"){\r\n                    session = makeSessionPare(sessions[i].entryTime, undefined)\r\n                    i--\r\n                }\r\n            }\r\n            else if (sessions[i]){\r\n                session = makeSessionPare(sessions[i].entryTime,  undefined)\r\n            }\r\n            else {\r\n                session = makeSessionPare(undefined, undefined)\r\n            }\r\n\r\n            sessionsArray.unshift(session)\r\n        }\r\n\r\n\r\n        return sessionsArray\r\n\r\n    }\r\n       if(sessions !== undefined){\r\n           return getSessions(sessions)\r\n       }\r\n       else{\r\n           return ''\r\n       }\r\n\r\n\r\n\r\n})\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport UserPage from \"./userPage\";\r\nimport {clearUserInfo, getUserInfo} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserInfoFromState, getUserSessionsList} from '../../redux/selectors/users-selectors'\r\n\r\nconst UserPageContainer = (props) =>{\r\n    let {tysId} = useParams()\r\n\r\n\r\n\r\n    const [pageState, setPageState] = useState('fetching')\r\n    useEffect(()=>{\r\n        props.getUserInfo(tysId)\r\n        return () =>{\r\n            props.clearUserInfo()\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.userInfo !== \"\"){\r\n            setPageState(\"main\")\r\n        }\r\n    },[props.userInfo])\r\n\r\n    return (\r\n            <>\r\n                {pageState === 'fetching' ?<p>Загрузка</p> :<UserPage userInfo={props.userInfo}\r\n                                                                      userSessions={props.userSessions}\r\n                                                                      tysId={props.tysId}\r\n                /> }\r\n            </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        userInfo: getUserInfoFromState(state),\r\n        userSessions: getUserSessionsList(state)\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{clearUserInfo, getUserInfo})(UserPageContainer);","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\n\nimport SideBarContainer from \"./components/sidebar/sidebarContainer\";\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport  {Route} from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nimport FriendsPage from \"./components/profile/friends/friends\";\nimport CounterPage from \"./components/content/counters/counterPage/counterPage\";\nimport {InitializingApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nimport UserPageContainer from \"./components/userPage/userPageContainer\";\n\nimport {getMenuState} from \"./redux/selectors/app-selectors\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.InitializingApp()\n    }\n\n    render (){\n        return <div className=\"app-wrapper\">\n\n            <div className=\"row\">\n\n                <SideBarContainer />\n                <div className={this.props.menuState === \"collapsed\" ? \"content\" : \"content sidebar_closed\"}>\n                <Route path='/summary'  render={ () => <Summary  /> } />\n                    <Route path='/counter/:counterId' render={()=> <CounterPage />} />\n                    <Route path='/counters' render={() => <Counters />}/>\n                    <Route path='/audiences' render={() => <Audiences />} />\n                    <Route path='/profile' render={() => <ProfileContainer />} />\n                    <Route path='/profilesettings' render={() => <ProfileSettings />} />\n                    <Route exact path='/login'  render={()=> <LoginContainer />} />\n                    <Route exact path='/signup' render={()=> <SignUpContainer />} />\n                    <Route path='/friends' render={()=> <FriendsPage />} />\n                    <Route path='/users/:tysId' render={()=><UserPageContainer />} />\n            </div>\n\n\n\n            </div>\n        </div>\n    }\n}\n\n\nlet mapStateToProps = (state) =>{\n    return{\n        menuState: getMenuState(state)\n    }\n}\n\n\nexport default connect(mapStateToProps, {InitializingApp})(App)\n\n\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {CookiesProvider} from \"react-cookie\";\n\n\n\n    ReactDOM.render(\n            <CookiesProvider>\n                <BrowserRouter>\n                    <Provider store={store}>\n                        <App  />\n                    </Provider>\n                </BrowserRouter>\n            </CookiesProvider> ,\n            document.getElementById('root')\n            );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"h1\":\"login_h1__XRWpf\",\"login_block\":\"login_login_block__14dA7\",\"form_danger_wr\":\"login_form_danger_wr__Z8K09\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\",\"form_danger\":\"login_form_danger__2x0dg\",\"success_auth\":\"login_success_auth__1Bv0W\",\"login_container\":\"login_login_container__rIdfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__2Mkqz\",\"name\":\"shortcounter_name__2XGTE\",\"domen\":\"shortcounter_domen__13SoB\",\"dayusers\":\"shortcounter_dayusers__3LOqd\",\"totalusers\":\"shortcounter_totalusers__9w9vy\",\"status\":\"shortcounter_status__2OofU\",\"work\":\"shortcounter_work__1ylaG\",\"notwork\":\"shortcounter_notwork__3MW4_\",\"checking\":\"shortcounter_checking__3lzMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3GKut\",\"name\":\"counterslist_name__26sx8\",\"domen\":\"counterslist_domen__28w4t\",\"dayusers\":\"counterslist_dayusers__1qIrK\",\"totalusers\":\"counterslist_totalusers__cwCPg\",\"status\":\"counterslist_status__1Nkgx\",\"loading_counter\":\"counterslist_loading_counter__2YVWV\",\"loading\":\"counterslist_loading__ODluH\",\"list\":\"counterslist_list__3QBS9\",\"noCounters\":\"counterslist_noCounters__1FWqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"counterInfo_names__Mts4J\",\"id\":\"counterInfo_id__2FRUp\",\"name\":\"counterInfo_name__1Da7N\",\"counterInfo\":\"counterInfo_counterInfo__3ssjo\",\"domen\":\"counterInfo_domen__1rZ-Z\",\"results\":\"counterInfo_results__3RGfx\",\"dayusers\":\"counterInfo_dayusers__10wzY\",\"allusers\":\"counterInfo_allusers__3L6Rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"newFriends_line__QT2su\",\"names_row\":\"newFriends_names_row__2avSk\",\"buttons_row\":\"newFriends_buttons_row__23C0v\",\"deny\":\"newFriends_deny__2F1X5\",\"accept\":\"newFriends_accept__3r7sm\",\"newFriends\":\"newFriends_newFriends__1JkmK\",\"noProposals\":\"newFriends_noProposals__2uuG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_row\":\"userPage_label_row__2k2Vo\",\"session\":\"userPage_session__2cKEr\",\"sessionNumber\":\"userPage_sessionNumber__OiWIz\",\"entryTime\":\"userPage_entryTime__3Wnoo\",\"h4\":\"userPage_h4__1uA9A\",\"main_info\":\"userPage_main_info__G48F6\",\"visits\":\"userPage_visits__32s7Y\",\"device_info\":\"userPage_device_info__IOMv8\",\"geo_info\":\"userPage_geo_info__3IOQa\",\"headers_info\":\"userPage_headers_info__3YQ_r\",\"date_divider\":\"userPage_date_divider__x2Thq\",\"col_head\":\"userPage_col_head__2HiGw\"};","module.exports = __webpack_public_path__ + \"static/media/done.5cdbb761.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flag\":\"usersList_flag__2GSHq\",\"flag-AD\":\"usersList_flag-AD__28-Ld\",\"flag-AE\":\"usersList_flag-AE__-Tvo4\",\"flag-AG\":\"usersList_flag-AG__3hY5f\",\"flag-AM\":\"usersList_flag-AM__w92z3\",\"flag-AR\":\"usersList_flag-AR__iDlvg\",\"flag-AT\":\"usersList_flag-AT__1F4KS\",\"flag-AU\":\"usersList_flag-AU__2BQBr\",\"flag-BE\":\"usersList_flag-BE__u-KjT\",\"flag-BF\":\"usersList_flag-BF__30Pnv\",\"flag-BG\":\"usersList_flag-BG__3E-M9\",\"flag-BO\":\"usersList_flag-BO__3oA8e\",\"flag-BR\":\"usersList_flag-BR__1rqh-\",\"flag-CA\":\"usersList_flag-CA__AckMB\",\"flag-CD\":\"usersList_flag-CD__3aUbU\",\"flag-CG\":\"usersList_flag-CG__13pgd\",\"flag-CH\":\"usersList_flag-CH__2L8EY\",\"flag-CL\":\"usersList_flag-CL__ECGkc\",\"flag-CM\":\"usersList_flag-CM__1ZjFS\",\"flag-CN\":\"usersList_flag-CN__28Kt9\",\"flag-CO\":\"usersList_flag-CO__kszHI\",\"flag-CZ\":\"usersList_flag-CZ__3s1gU\",\"flag-DE\":\"usersList_flag-DE__HWnJh\",\"flag-DJ\":\"usersList_flag-DJ__3IFAb\",\"flag-DK\":\"usersList_flag-DK__20-GX\",\"flag-DZ\":\"usersList_flag-DZ__2guVT\",\"flag-EE\":\"usersList_flag-EE__3SD-O\",\"flag-EG\":\"usersList_flag-EG__Zw2gT\",\"flag-ES\":\"usersList_flag-ES__3Mvgx\",\"flag-FL\":\"usersList_flag-FL__3UviB\",\"flag-FR\":\"usersList_flag-FR__Sc6R8\",\"flag-GA\":\"usersList_flag-GA__3N5wF\",\"flag-GB\":\"usersList_flag-GB__QDFE0\",\"flag-GM\":\"usersList_flag-GM__2ZYP_\",\"flag-GT\":\"usersList_flag-GT__R20cv\",\"flag-HN\":\"usersList_flag-HN__SG8HZ\",\"flag-HT\":\"usersList_flag-HT__2gLUp\",\"flag-HU\":\"usersList_flag-HU__1np09\",\"flag-ID\":\"usersList_flag-ID__3sv_I\",\"flag-IE\":\"usersList_flag-IE__6D5k6\",\"flag-IL\":\"usersList_flag-IL__3j7eI\",\"flag-IN\":\"usersList_flag-IN__2lSnm\",\"flag-IQ\":\"usersList_flag-IQ__3sBmG\",\"flag-IR\":\"usersList_flag-IR__f7dHv\",\"flag-IT\":\"usersList_flag-IT__1W8ex\",\"flag-JM\":\"usersList_flag-JM__3j6Pm\",\"flag-JO\":\"usersList_flag-JO__3AezU\",\"flag-JP\":\"usersList_flag-JP__r5fM4\",\"flag-KG\":\"usersList_flag-KG__SY17J\",\"flag-KN\":\"usersList_flag-KN__1SC6n\",\"flag-KP\":\"usersList_flag-KP__36V4l\",\"flag-KR\":\"usersList_flag-KR__HxNFj\",\"flag-KW\":\"usersList_flag-KW__1s10H\",\"flag-KZ\":\"usersList_flag-KZ__3deke\",\"flag-LA\":\"usersList_flag-LA__kcv1W\",\"flag-LB\":\"usersList_flag-LB__3E8KO\",\"flag-LC\":\"usersList_flag-LC__1d3_w\",\"flag-LS\":\"usersList_flag-LS__117IC\",\"flag-LU\":\"usersList_flag-LU__1qrf8\",\"flag-LV\":\"usersList_flag-LV__3zU9I\",\"flag-MG\":\"usersList_flag-MG__t-CXg\",\"flag-MK\":\"usersList_flag-MK__vPOkL\",\"flag-ML\":\"usersList_flag-ML__36g1u\",\"flag-MM\":\"usersList_flag-MM__28dSo\",\"flag-MT\":\"usersList_flag-MT__2-Yrc\",\"flag-MX\":\"usersList_flag-MX__wzUa1\",\"flag-NA\":\"usersList_flag-NA__3kCAp\",\"flag-NE\":\"usersList_flag-NE__27h7N\",\"flag-NG\":\"usersList_flag-NG__3db0b\",\"flag-NI\":\"usersList_flag-NI__35LU0\",\"flag-NL\":\"usersList_flag-NL__SCdSk\",\"flag-NO\":\"usersList_flag-NO__3Uy0z\",\"flag-OM\":\"usersList_flag-OM__1bqbs\",\"flag-PA\":\"usersList_flag-PA__1vtN-\",\"flag-PE\":\"usersList_flag-PE__1WaE3\",\"flag-PG\":\"usersList_flag-PG__1Rn6z\",\"flag-PK\":\"usersList_flag-PK__3hHpS\",\"flag-PL\":\"usersList_flag-PL__2SJC2\",\"flag-PT\":\"usersList_flag-PT__4j0by\",\"flag-PY\":\"usersList_flag-PY__1I_VY\",\"flag-QA\":\"usersList_flag-QA__3k-bO\",\"flag-RO\":\"usersList_flag-RO__2LJX3\",\"flag-RU\":\"usersList_flag-RU__2UisT\",\"flag-RW\":\"usersList_flag-RW__3ucM_\",\"flag-SA\":\"usersList_flag-SA__RBhxn\",\"flag-SE\":\"usersList_flag-SE__2NYyw\",\"flag-SG\":\"usersList_flag-SG__38Sbp\",\"flag-SL\":\"usersList_flag-SL__1ql1t\",\"flag-SN\":\"usersList_flag-SN__3xhNv\",\"flag-SO\":\"usersList_flag-SO__3OvPT\",\"flag-SV\":\"usersList_flag-SV__sc9e8\",\"flag-TD\":\"usersList_flag-TD__PJirO\",\"flag-TJ\":\"usersList_flag-TJ__32Ew_\",\"flag-TL\":\"usersList_flag-TL__svnVy\",\"flag-TR\":\"usersList_flag-TR__2xcu_\",\"flag-TZ\":\"usersList_flag-TZ__11_a1\",\"flag-UA\":\"usersList_flag-UA__2W8Z3\",\"flag-US\":\"usersList_flag-US__3rCFU\",\"flag-VE\":\"usersList_flag-VE__9EUPl\",\"flag-VN\":\"usersList_flag-VN__NOtmd\",\"flag-YE\":\"usersList_flag-YE__2d5wR\"};"],"sourceRoot":""}