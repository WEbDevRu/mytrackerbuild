{"version":3,"sources":["components/navbar/navbar.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/graphic/graphic.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/content/summary/dayusers/shortuser/shortuser.module.scss","components/content/summary/dayusers/dayusers.module.scss","components/content/counters/counterslist/counterslist.module.scss","components/sidebar/sidebar.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/content/summary/daystat/daystat.module.scss","components/content/audiences/audienceslist/audienceslist.module.scss","serviceWorker.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","redux/profile-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/graphic/graphiccol/graphiccol.jsx","components/content/summary/dayusers/shortuser/shortuser.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/dayusers/dayusers.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/haveaccess/haveaccess.jsx","components/profile/profilesettings/profilesettings.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","counterslistData","id","name","domen","dayusers","total","status","counterNameInput","counterDomenInput","countersReducer","state","action","type","newCounter","inputName","value","audiencelistData","description","counters","counterId","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","totalUsers","dayusersData","graphicData","day","summaryReducer","usersData","data","items","userName","userDescription","profileReducer","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","store","createStore","Sidebar","className","s","sidebar","sidebar_menu","href","link_item","Navbar","navbar","logo","navbar_menu","to","activeClassName","active","profile","Graphiccol","props","colheight","height","graphicvalue","graphic_col_wr","graphic_col_text","graphic_col_day","graphicday","graphic_col_number","graphic_col","style","Shortuser","shortuser","user_alias","src","alt","user_country","country","user_time","time","user_date","date","user_revenue","revenue","Graphic","graphicColElements","map","coldata","graphic","graphic_cols","graphic_bottom","Daystat","day_stat","Dayusers","axios","then","response","setUsers","dayUserElements","dayuser","tablehead","React","Component","DayusersContainer","connect","dispatch","setUsersActionCreator","DaystatContainer","Summary","Addcounterblock","name_input","createRef","domen_input","addcounter_form","onChange","reloadInput","current","placeholder","ref","counterDomen","onClick","addCounter","AddcounterblockContainer","reloadCounterInputActionCreator","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","countersData","Shortcounter","short_counter","work","notwork","Counterslist","countersElement","countersListData","table_head","CounterslistContainer","Counters","Addaudienceblock","clicked","event","deleteCounter","target","getAttribute","countersOptionsElements","countersSelect","countersElements","undefined","audience_badge","counterid","version","viewBox","width","xmlns","d","fill","description_input","counters_select","add_form","nameInput","descriptionName","cols","rows","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","console","log","addAudience","AddaudienceblockContainer","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","YourProfile","profile_cont","photo_col","photo_wr","info_col","info_inputs","reloadTextarea","YourProfileContainer","reloadInputActionCreator","reloadTextareaActionCreator","HaveAccess","ProfileSettings","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.642b67b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__1BI7F\",\"link_item\":\"navbar_link_item__10iNN\",\"active\":\"navbar_active__3mraK\",\"profile\":\"navbar_profile__1bHDN\",\"logo\":\"navbar_logo__38yEN\",\"navbar_menu\":\"navbar_navbar_menu__3LW4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__388Yl\",\"audience_name\":\"shortaudience_audience_name__3oYyY\",\"body\":\"shortaudience_body__3vJPI\",\"description\":\"shortaudience_description__3KhlP\",\"counters\":\"shortaudience_counters__241X9\",\"counter\":\"shortaudience_counter__3f7xk\",\"info\":\"shortaudience_info__Yyjzm\",\"info_block\":\"shortaudience_info_block__1XVcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"graphic_graphic__1tla0\",\"graphic_bottom\":\"graphic_graphic_bottom__2k8E5\",\"graphic_col_wr\":\"graphic_graphic_col_wr__1J3tc\",\"graphic_col\":\"graphic_graphic_col__1MqSI\",\"graphic_col_text\":\"graphic_graphic_col_text__2HHUC\",\"graphic_col_day\":\"graphic_graphic_col_day__19O1Y\",\"graphic_col_number\":\"graphic_graphic_col_number__6M2Pf\",\"graphic_cols\":\"graphic_graphic_cols__34S7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__xm-Fk\",\"name\":\"shortcounter_name__144os\",\"domen\":\"shortcounter_domen__2qQAa\",\"dayusers\":\"shortcounter_dayusers__1RprS\",\"totalusers\":\"shortcounter_totalusers__1EOgr\",\"status\":\"shortcounter_status__2fPlN\",\"work\":\"shortcounter_work__2oEya\",\"notwork\":\"shortcounter_notwork__3isVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3DriM\",\"audience_selector\":\"addaudience_audience_selector__1FpA1\",\"add_form\":\"addaudience_add_form__34wQJ\",\"audience_badges\":\"addaudience_audience_badges__2fbyL\",\"audience_badge\":\"addaudience_audience_badge__3m2-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortuser\":\"shortuser_shortuser__3eXz3\",\"user_alias\":\"shortuser_user_alias__1EMhI\",\"user_country\":\"shortuser_user_country__17S2C\",\"user_time\":\"shortuser_user_time__2W2W-\",\"user_date\":\"shortuser_user_date__3PoiS\",\"user_revenue\":\"shortuser_user_revenue__3FaOO\",\"dayuser_list\":\"shortuser_dayuser_list__DDXLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablehead\":\"dayusers_tablehead__2hTMH\",\"user_alias\":\"dayusers_user_alias__3x2z4\",\"user_country\":\"dayusers_user_country__1qR48\",\"user_time\":\"dayusers_user_time__UAv73\",\"user_date\":\"dayusers_user_date__2U0Bi\",\"user_revenue\":\"dayusers_user_revenue__62Uuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3s7kX\",\"name\":\"counterslist_name__3uBbc\",\"domen\":\"counterslist_domen__2MAfK\",\"dayusers\":\"counterslist_dayusers__3BfuW\",\"totalusers\":\"counterslist_totalusers__2MWQu\",\"status\":\"counterslist_status__3sgFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__WUw9q\",\"sidebar_menu\":\"sidebar_sidebar_menu__31sMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1PYlG\",\"photo_col\":\"yourprofile_photo_col__1ackg\",\"info_col\":\"yourprofile_info_col__LTL2I\",\"photo_wr\":\"yourprofile_photo_wr__3BLzR\",\"info_inputs\":\"yourprofile_info_inputs__2RKPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__1SPp-\",\"addcounter_form\":\"addcounter_addcounter_form__2Y9S5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__28Om4\",\"day_stat\":\"daystat_day_stat__18ckb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__1-iIA\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n\r\n        counterslistData : [\r\n            {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n            {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n            {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n            {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n            {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n            {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n            {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n            {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n        ],\r\n        counterNameInput: '',\r\n        counterDomenInput: ''\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: 5,\r\n                name: state.counterNameInput,\r\n                domen: state.counterDomenInput,\r\n                dayusers: 0,\r\n                total: 0,\r\n                status: 'work'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [...state.counterslistData, newCounter],\r\n                counterNameInput: '',\r\n                counterDomenInput: ''\r\n            }\r\n        }\r\n\r\n        case \"RELOAD-COUNTER-INPUT\":{\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default countersReducer\r\nexport const addCounterActionCreator = () =>({type: 'ADD-COUNTER'})\r\n\r\nexport const reloadCounterInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-COUNTER-INPUT',\r\n    value: value,\r\n    inputName: inputName})","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","let initialState = {\r\n    dayusersData : [\r\n\r\n    ],\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"SET-USERS\":{\r\n            return {\r\n                ...state,\r\n                dayusersData: action.usersData.data.items\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUsersActionCreator = (usersData) =>({\r\n    type: \"SET-USERS\",\r\n    usersData: usersData\r\n})\r\nexport default summaryReducer\r\n","let initialState = {\r\n    userName: '',\r\n    userDescription: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SAVE-INFO':{\r\n\r\n        }\r\n        case 'RELOAD-INPUT':{\r\n           return{\r\n               ...state,\r\n               [action.inputName]: action.value\r\n           }\r\n        }\r\n        case 'RELOAD-TEXTAREA':{\r\n            return{\r\n                ...state,\r\n                [action.inputName]: action.value\r\n            }\r\n        }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\nexport default profileReducer\r\nexport const saveInfoActionCreator = () =>({type: 'SAVE-INFO'})\r\nexport const reloadInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-INPUT',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport countersReducer from \"./counters-reducer\";\r\nimport audiencesReducer from \"./audiences-reducer\";\r\nimport summaryReducer from \"./summary-reducer\";\r\nimport profileReducer from './profile-reducer'\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store","import React from 'react';\r\nimport s from './sidebar.module.scss';\r\n\r\nconst Sidebar = () =>{\r\n    return (\r\n\r\n        <div className={s.sidebar}>\r\n             <div className={s.sidebar_menu}>\r\n                 <a href=\"\" className={s.link_item}>Сводка</a>\r\n                 <a href=\"\" className={s.link_item}>Посетители</a>\r\n                 <a href=\"\" className={s.link_item}>Конверсии</a>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return  (\r\n\r\n        <nav className={s.navbar}>\r\n            <div className={s.logo}>\r\n                Трекер\r\n            </div>\r\n\r\n            <div className={s.navbar_menu}>\r\n\r\n                <NavLink className={s.link_item} to=\"/summary\" activeClassName={s.active}>Общее</NavLink>\r\n                <NavLink className={s.link_item} to=\"/counters\" activeClassName={s.active}>Счётчики</NavLink>\r\n                <NavLink className={s.link_item} to=\"/audiences\" activeClassName={s.active}>Аудитории</NavLink>\r\n\r\n            </div>\r\n            <div className={s.profile}>\r\n                <div className='dropdown'>\r\n                    <a href=\"\" className={s.link_item}>Профиль</a>\r\n                    <div className='dropdown_block'>\r\n                        <NavLink to=\"/profile\" className='dropdown_link' activeClassName='active'>Настройки</NavLink>\r\n                        <a href=\"\" className='dropdown_link' activeClassName='active'>Поделиться</a>\r\n                        <a href=\"\" className='dropdown_link' activeClassName='active'>Выйти</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport s from '../graphic.module.scss';\r\nconst Graphiccol = (props) => {\r\n    let colheight = {\r\n     height: props.graphicvalue+'px'\r\n    }\r\n    return(\r\n            <div className={s.graphic_col_wr}>\r\n                <div className={s.graphic_col_text}>\r\n                    <p className={s.graphic_col_day}>{props.graphicday}</p>\r\n                    <p className={s.graphic_col_number}>{props.graphicvalue}</p>\r\n                </div>\r\n                <div className={s.graphic_col} style={colheight}></div>\r\n            </div>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport s from './shortuser.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Shortuser = (props) =>{\r\n    return  (\r\n\r\n                <NavLink to={'/users/'+props.id} className={s.shortuser}>\r\n                    <div className={s.user_alias}>\r\n                        <img src=\"https://nikrainev.ru/1img/profile.svg\" alt=\"\"/>\r\n                    </div>\r\n                    <div className={s.user_country}><p>{props.country}</p></div>\r\n                    <div className={s.user_time}><p>{props.time}</p></div>\r\n                    <div className={s.user_date}><p>{props.date}</p></div>\r\n                    <div className={s.user_revenue}><p>{props.revenue}</p></div>\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Shortuser;","import React from 'react';\r\nimport s from './graphic.module.scss';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport Shortuser from \"../content/summary/dayusers/shortuser/shortuser\";\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <div className={s.graphic}>\r\n                <div className={s.graphic_cols}>\r\n                    {graphicColElements}\r\n                </div>\r\n              <div className={s.graphic_bottom}>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className={s.day_stat}>\r\n                            <p>Клики<br />120</p>\r\n                            <p>Пользователи<br />65</p>\r\n                            <p>Конверсии<br />2</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n\r\n                            <Graphic graphicData={props.graphicData}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from 'react';\r\nimport s from './dayusers.module.scss';\r\nimport Shortuser from \"./shortuser/shortuser\";\r\nimport * as axios from 'axios'\r\n\r\n\r\nclass Dayusers extends React.Component {\r\n    componentDidMount() {\r\n        axios.get('http://195.161.62.108:3000/users').then(response =>{\r\n            this.props.setUsers(response)\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n\r\n    let dayusers = this.props.dayusers;\r\n    let dayUserElements = dayusers.map(dayuser => <Shortuser id={dayuser.id} country={dayuser.country} time={dayuser.time} date={dayuser.date} revenue={dayuser.revenue} />)\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className={s.tablehead}>\r\n                    <div className={s.user_alias}><p>Псевдоним</p></div>\r\n                    <div className={s.user_country}><p>Страна</p></div>\r\n                    <div className={s.user_time}><p>Время на сайте</p></div>\r\n                    <div className={s.user_date}><p>Дата посещения</p></div>\r\n                    <div className={s.user_revenue}><p>Доход</p></div>\r\n                </div>\r\n                <div className=\"dayuser_list\">\r\n                    {dayUserElements}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n}\r\n\r\n\r\nexport default Dayusers;","import React from \"react\";\r\nimport Dayusers from \"./dayusers\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersActionCreator} from '../../../../redux/summary-reducer'\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dayusers: state.summaryPage.dayusersData,\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n     setUsers :(usersData) => {\r\n         dispatch(setUsersActionCreator(usersData))\r\n     }\r\n\r\n    }\r\n}\r\n\r\nconst DayusersContainer = connect(mapStateToProps, mapDispatchToProps)(Dayusers)\r\n\r\nexport default DayusersContainer;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        graphicData: state.summaryPage.graphicData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst DaystatContainer = connect(mapStateToProps, mapDispatchToProps())(Daystat)\r\n\r\nexport default DaystatContainer;","import React from 'react';\r\nimport Daystat from \"./daystat/daystat\";\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nconst Summary = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n\r\n\r\n                <DaystatContainer/>\r\n                <DayusersContainer/>\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Summary;","import React from 'react';\r\nimport s from '../addcounter.module.scss';\r\n\r\n\r\nconst Addcounterblock = (props) =>{\r\n    let name_input = React.createRef();\r\n    let domen_input = React.createRef();\r\n\r\n    let Addcounter = () =>{\r\n       if(props.counterName !=='' && props.counterDomen !==''){\r\n           props.addCounter();\r\n       }\r\n    };\r\n\r\n    let onNameInputChange = () =>{\r\n        props.reloadInput(name_input.current.value,'counterNameInput')\r\n    }\r\n    let onDomenInputChange = () =>{\r\n        props.reloadInput(domen_input.current.value,'counterDomenInput')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\"><p>Добавьте ваш счётчик</p></div>\r\n          <div className=\"col-6\">\r\n              <div className={s.addcounter_form}>\r\n                  <input onChange={onNameInputChange} type=\"text\" value={props.counterName} placeholder='Название счётчика' ref={name_input}/>\r\n                  <input onChange={onDomenInputChange} type=\"text\" value={props.counterDomen} placeholder='Домен сайта' ref={domen_input}/>\r\n                  <button className='control_button' onClick={Addcounter}>Добавить счётчик</button>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Addcounterblock;","import React from \"react\";\r\n\r\nimport {addCounterActionCreator, reloadCounterInputActionCreator} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        counterName: state.countersPage.counterNameInput,\r\n        counterDomen: state.countersPage.counterDomenInput\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        reloadInput:  (value,inputName) =>{\r\n            dispatch(reloadCounterInputActionCreator(value,inputName))\r\n\r\n        },\r\n        addCounter: ()=>{\r\n            dispatch(addCounterActionCreator())\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst AddcounterblockContainer = connect(mapStateToProps, mapDispatchToProps)(Addcounterblock)\r\n\r\nexport default AddcounterblockContainer;","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n            <BrowserRouter>\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n            </BrowserRouter>\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counters/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.total}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\n\r\n\r\n\r\nconst Counterslist = (props) =>{\r\n\r\n  let countersElement = props.countersListData.map(counter => <Shortcounter id={counter.id} name={counter.name} domen={counter.domen} dayusers={counter.dayusers} total={counter.total} status={counter.status}/> )\r\n\r\n    return (\r\n\r\n            <div className=\"container\">\r\n               <div className={s.table_head}>\r\n                   <div className={s.name}>\r\n                       <p>Название счётчика</p>\r\n                   </div>\r\n                   <div className={s.domen}>\r\n                       <p>Адрес</p>\r\n                   </div>\r\n                   <div className={s.dayusers}>\r\n                       <p>Пользователи за день</p>\r\n                   </div>\r\n                   <div className={s.totalusers}>\r\n                       <p>Пользователей всего</p>\r\n                   </div>\r\n                   <div className={s.status}>\r\n                       <p>Статус</p>\r\n                   </div>\r\n               </div>\r\n                <div className=\"list\">\r\n                    {countersElement}\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst CounterslistContainer = connect(mapStateToProps, mapDispatchToProps())(Counterslist)\r\n\r\nexport default CounterslistContainer;","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\n\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n             <Addcounter/>\r\n            <CounterslistContainer />\r\n\r\n\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Counters;","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nconst AddaudienceblockContainer = connect(mapStateToProps, mapDispatchToProps)(Addaudienceblock)\r\n\r\nexport default AddaudienceblockContainer","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n    );\r\n}\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n            </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <div className=\"content\">\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nconst YourProfile = (props) =>{\r\n    let name_input = React.createRef()\r\n    let description_input = React.createRef()\r\n    let reloadNameInput = () =>{\r\n        props.reloadInput(name_input.current.value)\r\n    }\r\n    let reloadDescriptionTextarea = () =>{\r\n        props.reloadTextarea(description_input.current.value)\r\n    }\r\n    return(\r\n            <div className=\"container\">\r\n               <div className={s.profile_cont}>\r\n                   <div className={s.photo_col}>\r\n                       <div className={s.photo_wr}>\r\n                           <p>Добавить фото</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.info_col}>\r\n                       <div className={s.info_inputs}>\r\n                           <input onChange={reloadNameInput} ref={name_input} type=\"text\" className='plain_input'  value={props.userName}  placeholder='Введите ваше имя'/>\r\n                           <textarea onChange={reloadDescriptionTextarea} ref={description_input} className='plain_textarea' value={props.userDescription} id=\"\" cols=\"30\"  rows=\"10\" placeholder='Добавьте описание о себе'></textarea></div>\r\n                       <button className='control_button'>Сохранить</button>\r\n                   </div>\r\n\r\n               </div>\r\n            </div>\r\n    )\r\n}\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {reloadInputActionCreator,reloadTextareaActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        userName: state.profilePage.userName,\r\n        userDescription: state.profilePage.userDescription\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n      reloadInput: (value) =>{\r\n          dispatch(reloadInputActionCreator(value, 'userName'))\r\n      },\r\n        reloadTextarea: (value, inputName) =>{\r\n          dispatch(reloadTextareaActionCreator(value, 'userDescription'))\r\n        }\r\n    }\r\n}\r\n\r\nconst YourProfileContainer = connect(mapStateToProps, mapDispatchToProps)(YourProfile)\r\n\r\nexport default YourProfileContainer;","import React from 'react';\r\n\r\nconst HaveAccess = (props) =>{\r\n    return(\r\n            <div className=\"container\">\r\n              <p>hj</p>\r\n            </div>\r\n    )\r\n}\r\nexport default HaveAccess;","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nconst ProfileSettings = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n               <YourProfileContainer />\r\n               <HaveAccess />\r\n            </div>\r\n    )\r\n}\r\nexport default ProfileSettings;","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\nimport Sidebar from \"./components/sidebar/sidebar.jsx\";\nimport Navbar from './components/navbar/navbar.jsx';\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\n\n\n\nconst App = (props) =>{\n\n\n  return (\n      <BrowserRouter >\n      <div className=\"app-wrapper\">\n          <Navbar />\n          <div className=\"row\">\n              <Sidebar />\n              {/* <Redirect exact from='/' to='/summary'  /> */}\n              <Route path='/summary'  render={ () => <Summary  /> } />\n              <Route path='/counters' render={() => <Counters />}/>\n              <Route path='/audiences' render={() => <Audiences />} />\n              <Route path='/profile' render={() => <ProfileSettings />} />\n\n\n          </div>\n      </div>\n      </BrowserRouter>\n\n\n    \n  );\n}\n\n\nexport default App;\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(\n            <Provider store={store}><App /></Provider> ,\n            document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}