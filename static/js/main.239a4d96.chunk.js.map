{"version":3,"sources":["components/navbar/navbar.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/graphic/graphic.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","components/content/summary/dayusers/dayusers.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/content/summary/dayusers/shortuser/shortuser.module.scss","components/content/counters/counterslist/counterslist.module.scss","components/sidebar/sidebar.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/content/summary/daystat/daystat.module.scss","components/content/audiences/audienceslist/audienceslist.module.scss","serviceWorker.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","redux/profile-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/graphic/graphiccol/graphiccol.jsx","components/content/summary/dayusers/shortuser/shortuser.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/dayusers/dayusers.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/haveaccess/haveaccess.jsx","components/profile/profilesettings/profilesettings.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","counterslistData","pageSize","totalCounters","currentPage","counterNameInput","counterDomenInput","countersReducer","state","action","type","newCounter","id","name","domen","dayusers","allusers","status","inputName","value","countersData","data","items","totalPages","audiencelistData","description","counters","counterId","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","totalUsers","dayusersData","graphicData","day","summaryReducer","usersData","newCurrentPage","userName","userDescription","profileReducer","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","store","createStore","Sidebar","className","s","sidebar","sidebar_menu","href","link_item","Navbar","navbar","logo","navbar_menu","to","activeClassName","active","profile","Graphiccol","props","colheight","height","graphicvalue","graphic_col_wr","graphic_col_text","graphic_col_day","graphicday","graphic_col_number","graphic_col","style","Shortuser","shortuser","user_alias","src","alt","user_country","country","user_time","time","user_date","mongoDate","daysSeparate","split","date","timeSeparate","slice","join","seconds","replace","user_revenue","revenue","Graphic","graphicColElements","map","coldata","graphic","graphic_cols","graphic_bottom","Daystat","day_stat","LoadingShortuser","loading_shortuser","Dayusers","dayUserElements","dayuser","tablehead","loadmore_button","onClick","loadMore","DayusersContainer","axios","then","response","loadNewPage","setTotalUsers","setUsers","React","Component","connect","dispatch","setUsersActionCreator","loadNewPageActionCreator","setCurrentPage","setTotalUsersActionCreator","DaystatContainer","Summary","Addcounterblock","name_input","createRef","domen_input","addcounter_form","onChange","reloadInput","current","placeholder","ref","counterDomen","addCounter","AddcounterblockContainer","reloadCounterInputActionCreator","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","Shortcounter","short_counter","work","notwork","Counterslist","countersListData","countersElement","console","log","_id","pagesCount","Math","ceil","pages","push","pagesButtonsElements","page","changePage","table_head","CounterslistContainer","setCounters","setTotalCounters","setCountersActionCreator","setCurrentPageActionCreator","setTotalCountersActionCreator","Counters","Addaudienceblock","clicked","event","deleteCounter","target","getAttribute","countersOptionsElements","countersSelect","countersElements","undefined","audience_badge","counterid","version","viewBox","width","xmlns","d","fill","description_input","counters_select","add_form","nameInput","descriptionName","cols","rows","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addAudience","AddaudienceblockContainer","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","YourProfile","profile_cont","photo_col","photo_wr","info_col","info_inputs","reloadTextarea","YourProfileContainer","reloadInputActionCreator","reloadTextareaActionCreator","HaveAccess","ProfileSettings","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.239a4d96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__15BfM\",\"link_item\":\"navbar_link_item__2Qnum\",\"active\":\"navbar_active__uE8Zz\",\"profile\":\"navbar_profile__SnKZH\",\"logo\":\"navbar_logo__3hFZg\",\"navbar_menu\":\"navbar_navbar_menu__2_8AK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"graphic_graphic__3IRmr\",\"graphic_bottom\":\"graphic_graphic_bottom__1uDkm\",\"graphic_col_wr\":\"graphic_graphic_col_wr__t0l7L\",\"graphic_col\":\"graphic_graphic_col__N_PB4\",\"graphic_col_text\":\"graphic_graphic_col_text__3ayWZ\",\"graphic_col_day\":\"graphic_graphic_col_day__3MQq2\",\"graphic_col_number\":\"graphic_graphic_col_number__2f8zS\",\"graphic_cols\":\"graphic_graphic_cols__2ETRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__2Mkqz\",\"name\":\"shortcounter_name__2XGTE\",\"domen\":\"shortcounter_domen__13SoB\",\"dayusers\":\"shortcounter_dayusers__3LOqd\",\"totalusers\":\"shortcounter_totalusers__9w9vy\",\"status\":\"shortcounter_status__2OofU\",\"work\":\"shortcounter_work__1ylaG\",\"notwork\":\"shortcounter_notwork__3MW4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablehead\":\"dayusers_tablehead__1Lc84\",\"user_alias\":\"dayusers_user_alias__1YKwO\",\"user_country\":\"dayusers_user_country__3l0Wx\",\"user_time\":\"dayusers_user_time__3xRTE\",\"user_date\":\"dayusers_user_date__3WejA\",\"user_revenue\":\"dayusers_user_revenue___kRiq\",\"loadmore_button\":\"dayusers_loadmore_button__6nQO4\",\"loading_shortuser\":\"dayusers_loading_shortuser__3jw8s\",\"loading\":\"dayusers_loading__3tKjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortuser\":\"shortuser_shortuser__bnE4M\",\"user_alias\":\"shortuser_user_alias__3mR9I\",\"user_country\":\"shortuser_user_country__1CMLk\",\"user_time\":\"shortuser_user_time__1MOfy\",\"user_date\":\"shortuser_user_date__1dObS\",\"user_revenue\":\"shortuser_user_revenue__1ur_q\",\"dayuser_list\":\"shortuser_dayuser_list__zSlo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3GKut\",\"name\":\"counterslist_name__26sx8\",\"domen\":\"counterslist_domen__28w4t\",\"dayusers\":\"counterslist_dayusers__1qIrK\",\"totalusers\":\"counterslist_totalusers__cwCPg\",\"status\":\"counterslist_status__1Nkgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n\r\n        counterslistData: [],\r\n        pageSize: 5,\r\n        totalCounters: '',\r\n        currentPage: 1,\r\n        counterNameInput: '',\r\n        counterDomenInput: ''\r\n\r\n\r\n\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: 5,\r\n                name: state.counterNameInput,\r\n                domen: state.counterDomenInput,\r\n                dayusers: 0,\r\n                allusers: 0,\r\n                status: 'work'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [...state.counterslistData, newCounter],\r\n                counterNameInput: '',\r\n                counterDomenInput: ''\r\n            }\r\n        }\r\n\r\n        case \"RELOAD-COUNTER-INPUT\":{\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        }\r\n        case \"SET-COUNTERS\":{\r\n            return {\r\n                ...state,\r\n                counterslistData: action.countersData.data.items\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\":{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case 'SET-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                totalCounters: action.totalCounters.data.totalPages\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default countersReducer\r\nexport const addCounterActionCreator = () =>({type: 'ADD-COUNTER'})\r\nexport const setCountersActionCreator = (countersData) =>({\r\n    type: 'SET-COUNTERS',\r\n    countersData: countersData\r\n\r\n})\r\nexport const setCurrentPageActionCreator = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalCountersActionCreator = (totalCounters) =>({\r\n    type: 'SET-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\nexport const reloadCounterInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-COUNTER-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\n","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","let initialState = {\r\n    dayusersData: [],\r\n    pageSize: 5,\r\n    totalUsers: 17,\r\n    currentPage: 1,\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"SET-USERS\":{\r\n\r\n            if(state.dayusersData.length === 0){\r\n                return{\r\n                    ...state,\r\n                    dayusersData: [...state.dayusersData,  ...action.usersData],\r\n                    currentPage: state.currentPage + 1\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        case \"LOAD-NEW-PAGE\":{\r\n            let newCurrentPage = state.currentPage + 1\r\n            return {\r\n\r\n                ...state,\r\n                dayusersData: [...state.dayusersData, ...action.usersData],\r\n                currentPage: newCurrentPage\r\n\r\n            }\r\n\r\n        }\r\n        case \"SET-TOTAL-USERS\":{\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUsersActionCreator = (usersData) =>({\r\n    type: \"SET-USERS\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const loadNewPageActionCreator = (usersData) =>({\r\n    type: \"LOAD-NEW-PAGE\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalUsersActionCreator = (totalUsers) =>({\r\n    type: 'SET-TOTAL-USERS',\r\n    totalUsers: totalUsers\r\n})\r\n\r\nexport default summaryReducer\r\n","let initialState = {\r\n    userName: '',\r\n    userDescription: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SAVE-INFO':{\r\n\r\n        }\r\n        case 'RELOAD-INPUT':{\r\n           return{\r\n               ...state,\r\n               [action.inputName]: action.value\r\n           }\r\n        }\r\n        case 'RELOAD-TEXTAREA':{\r\n            return{\r\n                ...state,\r\n                [action.inputName]: action.value\r\n            }\r\n        }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\nexport default profileReducer\r\nexport const saveInfoActionCreator = () =>({type: 'SAVE-INFO'})\r\nexport const reloadInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-INPUT',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport countersReducer from \"./counters-reducer\";\r\nimport audiencesReducer from \"./audiences-reducer\";\r\nimport summaryReducer from \"./summary-reducer\";\r\nimport profileReducer from './profile-reducer'\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store","import React from 'react';\r\nimport s from './sidebar.module.scss';\r\n\r\nconst Sidebar = () =>{\r\n    return (\r\n\r\n        <div className={s.sidebar}>\r\n             <div className={s.sidebar_menu}>\r\n                 <a href=\"\" className={s.link_item}>Сводка</a>\r\n                 <a href=\"\" className={s.link_item}>Посетители</a>\r\n                 <a href=\"\" className={s.link_item}>Конверсии</a>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return  (\r\n\r\n        <nav className={s.navbar}>\r\n            <div className={s.logo}>\r\n                Трекер\r\n            </div>\r\n\r\n            <div className={s.navbar_menu}>\r\n\r\n                <NavLink className={s.link_item} to=\"/summary\" activeClassName={s.active}>Общее</NavLink>\r\n                <NavLink className={s.link_item} to=\"/counters\" activeClassName={s.active}>Счётчики</NavLink>\r\n                <NavLink className={s.link_item} to=\"/audiences\" activeClassName={s.active}>Аудитории</NavLink>\r\n\r\n            </div>\r\n            <div className={s.profile}>\r\n                <div className='dropdown'>\r\n                    <a href=\"\" className={s.link_item}>Профиль</a>\r\n                    <div className='dropdown_block'>\r\n                        <NavLink to=\"/profile\" className='dropdown_link' activeClassName='active'>Настройки</NavLink>\r\n                        <a href=\"\" className='dropdown_link' activeClassName='active'>Поделиться</a>\r\n                        <a href=\"\" className='dropdown_link' activeClassName='active'>Выйти</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport s from '../graphic.module.scss';\r\nconst Graphiccol = (props) => {\r\n    let colheight = {\r\n     height: props.graphicvalue+'px'\r\n    }\r\n    return(\r\n            <div className={s.graphic_col_wr}>\r\n                <div className={s.graphic_col_text}>\r\n                    <p className={s.graphic_col_day}>{props.graphicday}</p>\r\n                    <p className={s.graphic_col_number}>{props.graphicvalue}</p>\r\n                </div>\r\n                <div className={s.graphic_col} style={colheight}></div>\r\n            </div>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport s from './shortuser.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Shortuser = (props) =>{\r\n    const mongoDate = (mongoDate) => {\r\n        let daysSeparate = mongoDate.split('T')\r\n        let date = daysSeparate[0];\r\n        let timeSeparate = daysSeparate[1];\r\n        timeSeparate = timeSeparate.split(':')\r\n        let time = timeSeparate.slice(0,2).join(':')\r\n        let seconds = timeSeparate[2].replace('Z','')\r\n        return{\r\n            date: date,\r\n            time: time,\r\n            seconds: seconds\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n\r\n                <NavLink to={'/users/'+props.id} className={s.shortuser}>\r\n                    <div className={s.user_alias}>\r\n                        <img src=\"https://nikrainev.ru/1img/profile.svg\" alt=\"\"/>\r\n                    </div>\r\n                    <div className={s.user_country}><p>{props.country}</p></div>\r\n                    <div className={s.user_time}><p>{props.time}</p></div>\r\n                    <div className={s.user_date}><p>{mongoDate(props.date).time}</p></div>\r\n                    <div className={s.user_revenue}><p>{props.revenue}</p></div>\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Shortuser;","import React from 'react';\r\nimport s from './graphic.module.scss';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport Shortuser from \"../content/summary/dayusers/shortuser/shortuser\";\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <div className={s.graphic}>\r\n                <div className={s.graphic_cols}>\r\n                    {graphicColElements}\r\n                </div>\r\n              <div className={s.graphic_bottom}>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className={s.day_stat}>\r\n                            <p>Клики<br />120</p>\r\n                            <p>Пользователи<br />65</p>\r\n                            <p>Конверсии<br />2</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n\r\n                            <Graphic graphicData={props.graphicData}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from 'react';\r\nimport s from './dayusers.module.scss';\r\nimport Shortuser from \"./shortuser/shortuser\";\r\n\r\n\r\nconst LoadingShortuser = () =>{\r\n    return (\r\n            <div className={s.loading_shortuser}>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Dayusers = (props) => {\r\n\r\n\r\n\r\n    let dayusers = props.dayusers;\r\n\r\n    let dayUserElements = [];\r\n    let i = 0\r\n    if(dayusers.length == 0){\r\n        while(i <= 5){\r\n            dayUserElements[i] = <LoadingShortuser />\r\n            i++\r\n        }\r\n    }\r\n    else{\r\n        dayUserElements = dayusers.map(dayuser => <Shortuser id={dayuser.id} country={dayuser.country} time={dayuser.time} date={dayuser.date} revenue={dayuser.revenue} />)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className={s.tablehead}>\r\n                    <div className={s.user_alias}><p>Псевдоним</p></div>\r\n                    <div className={s.user_country}><p>Страна</p></div>\r\n                    <div className={s.user_time}><p>Время на сайте</p></div>\r\n                    <div className={s.user_date}><p>Дата посещения</p></div>\r\n                    <div className={s.user_revenue}><p>Доход</p></div>\r\n                </div>\r\n                <div className=\"dayuser_list\">\r\n                    {dayUserElements}\r\n                    <button className={s.loadmore_button+ \" attractive-button\"} onClick={() => {props.loadMore()}}>Загрузить ещё</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dayusers;","import React from \"react\";\r\nimport Dayusers from \"./dayusers\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersActionCreator, loadNewPageActionCreator,setCurrentPageActionCreator, setTotalUsersActionCreator} from '../../../../redux/summary-reducer'\r\nimport * as axios from \"axios\";\r\n\r\n\r\nclass DayusersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('http://195.161.62.108:3000/users').then(response =>{\r\n            this.props.setTotalUsers(response.data.totalPages)\r\n        })\r\n\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=1&limit=5`).then(response =>{\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n\r\n    }\r\n\r\n    loadMore = ()=>{\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.loadNewPage(response.data.items)\r\n\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return <Dayusers\r\n                dayusers={this.props.dayusers}\r\n                loadMore={this.loadMore}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dayusers: state.summaryPage.dayusersData,\r\n        currentPage: state.summaryPage.currentPage,\r\n        totalUsers: state.summaryPage.totalUsers,\r\n        pageSize: state.summaryPage.pageSize\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n     setUsers: (usersData) => {\r\n         dispatch(setUsersActionCreator(usersData))\r\n     },\r\n     loadNewPage: (usersData) =>{\r\n         dispatch(loadNewPageActionCreator(usersData))\r\n     },\r\n     setCurrentPage: () =>{\r\n         dispatch(setCurrentPageActionCreator())\r\n     },\r\n     setTotalUsers:(totalUsers) =>{\r\n         dispatch(setTotalUsersActionCreator(totalUsers))\r\n     }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default  DayusersContainer = connect(mapStateToProps, mapDispatchToProps)(DayusersContainer)\r\n\r\n","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        graphicData: state.summaryPage.graphicData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst DaystatContainer = connect(mapStateToProps, mapDispatchToProps())(Daystat)\r\n\r\nexport default DaystatContainer;","import React from 'react';\r\nimport Daystat from \"./daystat/daystat\";\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nconst Summary = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n\r\n\r\n                <DaystatContainer/>\r\n                <DayusersContainer/>\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Summary;","import React from 'react';\r\nimport s from '../addcounter.module.scss';\r\n\r\n\r\nconst Addcounterblock = (props) =>{\r\n    let name_input = React.createRef();\r\n    let domen_input = React.createRef();\r\n\r\n    let Addcounter = () =>{\r\n       if(props.counterName !=='' && props.counterDomen !==''){\r\n           props.addCounter();\r\n       }\r\n    };\r\n\r\n    let onNameInputChange = () =>{\r\n        props.reloadInput(name_input.current.value,'counterNameInput')\r\n    }\r\n    let onDomenInputChange = () =>{\r\n        props.reloadInput(domen_input.current.value,'counterDomenInput')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\"><p>Добавьте ваш счётчик</p></div>\r\n          <div className=\"col-6\">\r\n              <div className={s.addcounter_form}>\r\n                  <input onChange={onNameInputChange} type=\"text\" value={props.counterName} placeholder='Название счётчика' ref={name_input}/>\r\n                  <input onChange={onDomenInputChange} type=\"text\" value={props.counterDomen} placeholder='Домен сайта' ref={domen_input}/>\r\n                  <button className='control_button' onClick={Addcounter}>Добавить счётчик</button>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Addcounterblock;","import React from \"react\";\r\n\r\nimport {addCounterActionCreator, reloadCounterInputActionCreator} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        counterName: state.countersPage.counterNameInput,\r\n        counterDomen: state.countersPage.counterDomenInput\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        reloadInput:  (value,inputName) =>{\r\n            dispatch(reloadCounterInputActionCreator(value,inputName))\r\n\r\n        },\r\n        addCounter: ()=>{\r\n            dispatch(addCounterActionCreator())\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst AddcounterblockContainer = connect(mapStateToProps, mapDispatchToProps)(Addcounterblock)\r\n\r\nexport default AddcounterblockContainer;","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n            <BrowserRouter>\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n            </BrowserRouter>\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counters/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\n\r\n\r\n\r\n\r\nconst Counterslist = (props) => {\r\n\r\n       let counters =  props.countersListData\r\n       let countersElement = []\r\n       console.log(counters)\r\n       if (counters.length == 0){\r\n\r\n       }\r\n       else{\r\n           countersElement = counters.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}/> )\r\n\r\n       }\r\n\r\n       let pagesCount = Math.ceil(props.totalCounters / props.pageSize)\r\n       let pages =[]\r\n       for(let i=1; i<=pagesCount; i++){\r\n           pages.push(i)\r\n       }\r\n       let pagesButtonsElements = pages.map(page => <span className={props.currentPage === page && \"current-page\"}\r\n                                                          onClick={() => {props.changePage(page)}}>{page}</span>)\r\n\r\n\r\n\r\n       return <div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Статус</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"list\">\r\n                       {countersElement}\r\n                   </div>\r\n                   <div className=\"pages-buttons\">\r\n                       {pagesButtonsElements}\r\n                   </div>\r\n               </div>\r\n\r\n\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCountersActionCreator, setCurrentPageActionCreator, setTotalCountersActionCreator} from \"../../../../redux/counters-reducer\";\r\nimport * as axios from \"axios\";\r\n\r\nclass CounterslistContainer extends React.Component{\r\n    componentDidMount() {\r\n\r\n        axios.get(`http://195.161.62.108:3000/counters?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.setCounters(response)\r\n            this.props.setTotalCounters(response)\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n    changePage = (page) =>{\r\n        this.props.setCurrentPage(page)\r\n        axios.get(`http://195.161.62.108:3000/counters?page=${page}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.setCounters(response)\r\n        })\r\n    }\r\n    render(){\r\n      return <Counterslist\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              currentPage={this.props.currentPage}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n        pageSize: state.countersPage.pageSize,\r\n        totalCounters: state.countersPage.totalCounters,\r\n        currentPage: state.countersPage.currentPage\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n       setCounters: (countersData) =>{\r\n           dispatch(setCountersActionCreator(countersData))\r\n       },\r\n       setCurrentPage: (currentPage) =>{\r\n           dispatch(setCurrentPageActionCreator(currentPage))\r\n       },\r\n       setTotalCounters: (totalCounters) =>{\r\n           dispatch(setTotalCountersActionCreator(totalCounters))\r\n       }\r\n    }\r\n}\r\n\r\nexport default CounterslistContainer = connect(mapStateToProps, mapDispatchToProps)(CounterslistContainer)\r\n\r\n","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\n\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n             <Addcounter/>\r\n            <CounterslistContainer />\r\n\r\n\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Counters;","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nconst AddaudienceblockContainer = connect(mapStateToProps, mapDispatchToProps)(Addaudienceblock)\r\n\r\nexport default AddaudienceblockContainer","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n    );\r\n}\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n            </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <div className=\"content\">\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nconst YourProfile = (props) =>{\r\n    let name_input = React.createRef()\r\n    let description_input = React.createRef()\r\n    let reloadNameInput = () =>{\r\n        props.reloadInput(name_input.current.value)\r\n    }\r\n    let reloadDescriptionTextarea = () =>{\r\n        props.reloadTextarea(description_input.current.value)\r\n    }\r\n    return(\r\n            <div className=\"container\">\r\n               <div className={s.profile_cont}>\r\n                   <div className={s.photo_col}>\r\n                       <div className={s.photo_wr}>\r\n                           <p>Добавить фото</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.info_col}>\r\n                       <div className={s.info_inputs}>\r\n                           <input onChange={reloadNameInput} ref={name_input} type=\"text\" className='plain_input'  value={props.userName}  placeholder='Введите ваше имя'/>\r\n                           <textarea onChange={reloadDescriptionTextarea} ref={description_input} className='plain_textarea' value={props.userDescription} id=\"\" cols=\"30\"  rows=\"10\" placeholder='Добавьте описание о себе'></textarea></div>\r\n                       <button className='control_button'>Сохранить</button>\r\n                   </div>\r\n\r\n               </div>\r\n            </div>\r\n    )\r\n}\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {reloadInputActionCreator,reloadTextareaActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        userName: state.profilePage.userName,\r\n        userDescription: state.profilePage.userDescription\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n      reloadInput: (value) =>{\r\n          dispatch(reloadInputActionCreator(value, 'userName'))\r\n      },\r\n        reloadTextarea: (value, inputName) =>{\r\n          dispatch(reloadTextareaActionCreator(value, 'userDescription'))\r\n        }\r\n    }\r\n}\r\n\r\nconst YourProfileContainer = connect(mapStateToProps, mapDispatchToProps)(YourProfile)\r\n\r\nexport default YourProfileContainer;","import React from 'react';\r\n\r\nconst HaveAccess = (props) =>{\r\n    return(\r\n            <div className=\"container\">\r\n              <p>hj</p>\r\n            </div>\r\n    )\r\n}\r\nexport default HaveAccess;","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nconst ProfileSettings = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n               <YourProfileContainer />\r\n               <HaveAccess />\r\n            </div>\r\n    )\r\n}\r\nexport default ProfileSettings;","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\nimport Sidebar from \"./components/sidebar/sidebar.jsx\";\nimport Navbar from './components/navbar/navbar.jsx';\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\n\n\n\nconst App = (props) =>{\n\n\n  return (\n      <BrowserRouter >\n      <div className=\"app-wrapper\">\n          <Navbar />\n          <div className=\"row\">\n              <Sidebar />\n              {/* <Redirect exact from='/' to='/summary'  /> */}\n              <Route path='/summary'  render={ () => <Summary  /> } />\n              <Route path='/counters' render={() => <Counters />}/>\n              <Route path='/audiences' render={() => <Audiences />} />\n              <Route path='/profile' render={() => <ProfileSettings />} />\n\n\n          </div>\n      </div>\n      </BrowserRouter>\n\n\n    \n  );\n}\n\n\nexport default App;\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(\n            <Provider store={store}><App /></Provider> ,\n            document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}