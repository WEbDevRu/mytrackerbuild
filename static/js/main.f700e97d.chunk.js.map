{"version":3,"sources":["components/profile/profilesettings/yourFriends/yourFriends.module.scss","components/profile/friends/usersList/usersList.module.scss","components/content/summary/daystat/daystat.module.scss","assets/icons/plus.svg","components/content/audiences/audienceslist/audienceslist.module.scss","assets/icons/users.svg","assets/icons/mail-open.svg","components/profile/friends/friends.module.scss","components/common/common.module.scss","components/profile/signup/signup.module.scss","components/profile/login/login.module.scss","components/navbar/navbar.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","serviceWorker.js","api/counters-api.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/navbar/navbarContainer.jsx","components/content/summary/dayusers/shortuser/shortuser.jsx","components/content/summary/dayusers/dayusers.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/common/formControls.jsx","utils/validation.js","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","hoc/withAuthRedirect.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/common/pagination.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/common/loadingSchemes.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","utils/textTransformation.js","components/common/editinput.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/common/loadMore.jsx","components/profile/profilesettings/yourFriends/yourFriends.jsx","redux/selectors/profileselectors.js","components/profile/profilesettings/yourFriends/yourFriendsContainer.jsx","components/profile/profilesettings/profilesettings.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","components/profile/friends/newFriends/newFriends.jsx","components/profile/friends/newFriends/newFriendsContainer.jsx","components/profile/friends/usersList/usersList.jsx","components/profile/friends/usersList/usersListContainer.jsx","components/profile/friends/friends.jsx","App.js","index.js","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/graphic/graphic.module.scss","components/content/counters/counterslist/counterslist.module.scss","components/content/summary/dayusers/dayusers.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/profile/friends/newFriends/newFriends.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/content/summary/dayusers/shortuser/shortuser.module.scss","components/sidebar/sidebar.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","assets/icons/done.svg","assets/icons/small-loading.svg"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","baseURL","countersAPI","data","post","headers","store","getState","auth","token","then","response","catch","error","console","warn","page","limit","get","params","initialState","counterslistData","pageSize","totalCounters","setCounters","countersData","type","setTotalCounters","countersReducer","state","action","newCounter","id","counterData","_id","name","domen","dayusers","allusers","status","counterNameInput","counterDomenInput","items","totalPages","audiencelistData","description","counters","counterId","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","inputName","value","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","totalUsers","dayusersData","currentPage","graphicData","day","summaryReducer","usersData","newCurrentPage","profileAPI","put","proposals","profileActionsAPI","userId","delete","soName","company","totalProfiles","undefined","profilesList","friendsList","totalFriends","deletedFriend","setProfileInfo","setProposals","setFriendsList","friends","totalDocs","getProposals","dispatch","getProfilesList","count","profileReducer","friendId","authedInstance","authAPI","email","password","signUpAPI","login","profileId","regDate","isAuth","isFetching","signUpState","setProfileData","authProfileData","setToken","toggleIsFetching","setSignUpState","AuthThunkCreator","getCookie","matches","document","cookie","RegExp","replace","decodeURIComponent","authReducer","isInitialized","appReducer","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","app","form","formReducer","createStore","applyMiddleware","thunk","Sidebar","setOpacity","event","lineElem","targetCoords","getBoundingClientRect","procent","Math","round","clientY","top","abs","className","s","sidebar","sidebar_menu","onMouseOver","allelements","querySelectorAll","classList","contains","insertAdjacentHTML","add","setBorders","target","onmousemove","alllines","topBeam","querySelector","children","bottomBeam","elem","tagName","indexOf","call","parentNode","style","opacity","width","offsetWidth","xCoord","clientX","left","horizontProcent","nextline","nextSibling","prevline","previousSibling","onMouseOut","href","link_item","Navbar","props","navbar","logo","navbar_menu","to","activeClassName","active","profile","profileLogin","onClick","logout","NavbarContainer","logOut","emailInput","passwordInput","deleteProfileData","React","Component","connect","Shortuser","shortuser","user_alias","user_country","country","user_time","time","user_date","mongoDate","daysSeparate","split","date","timeSeparate","slice","join","seconds","user_revenue","revenue","LoadingShortuser","loading_shortuser","Dayusers","dayUserElements","map","dayuser","tablehead","loadmore_button","loadMore","DayusersContainer","loadNewPage","setTotalUsers","setUsers","setUsersActionCreator","loadNewPageActionCreator","setCurrentPage","setTotalUsersActionCreator","Graphiccol","colheight","height","graphicvalue","graphic_col_wr","graphic_col_text","graphic_col_day","graphicday","graphic_col_number","graphic_col","Graphic","graphicColElements","coldata","graphic","graphic_cols","graphic_bottom","Daystat","day_stat","DaystatContainer","Summary","Input","input","meta","input_wr","touched","input_danger","PasswordScoreInput","strengthValue","strengthText","password_strength","required","checkLogin","test","checkEmail","checkPassword","passwordsMatch","allValues","AddCounterReduxForm","reduxForm","onSubmit","handleSubmit","form_danger","loading_bar","Field","component","placeholder","validate","disabled","submitting","Addcounterblock","addcounter_form","values","postCounter","counterDomen","mapStateToProps","AccountNotExist","WithAuthRedirect","AddcounterblockContainer","compose","reset","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","Shortcounter","log","short_counter","work","notwork","checking","PaginationComponent","pagesCount","ceil","pages","push","pagesButtonsElements","changePage","Pagination","setState","pageChanger","getCurrentPage","loaders","pagesSelector","emptyBlock","prevProps","prevState","snapshot","loader","LoadingCounter","loading_counter","EmptyBlock","noCounters","src","plus","alt","Counterslist","countersElement","countersListData","firstLoader","table_head","list","CounterslistContainer","getCounters","CountersListLoading","loading_scheme","add_button","counters_table_head","list_ul","page_buttons","page_button","FriendsPageLoader","text_line","h2","big_ul","Addaudienceblock","clicked","deleteCounter","getAttribute","countersOptionsElements","countersSelect","key","countersElements","audience_badge","counterid","version","viewBox","xmlns","d","fill","name_input","createRef","description_input","counters_select","add_form","onChange","reloadInput","current","nameInput","ref","descriptionName","cols","rows","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addCounter","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","offsetText","text","textarr","isUrl","lineNumber","line","wordNumber","EditInput","inputText","inputEditMode","wasUpdated","changeCondition","inputState","putInfo","reloadNameInput","e","currentTarget","setTimeout","withedit_block","loadingImg","done_check","doneImg","onBlur","autoFocus","withedit_current","EditTextarea","wrap","YourProfile","profile_cont","photo_col","photo_wr","info_col","info_inputs","putProfileInfo","YourProfileContainer","getProfileInfo","newInfo","LoadMoreComponent","inizialized","load_more","all_loaded","LoadMore","initialized","LoadingProfile","s2","loading_profile","NoFriends","noFriends","friendIcon","YourFriends","buttonSelector","buttonId","delete_button","deleteFriend","friend","names_row","description_p","yourFriends","addToFriendsList","selectProfilesList","getTotalProfiles","getPageSize","getProposalsList","getFriends","getTotalFriends","getDeletedFriend","YourFriendsContainer","changeButtonState","copyFriends","listButtons","deleteFriendLocal","friendsCopy","getFriendsList","friendsFetching","addFriendsList","friendsPage","message","LoginReduxForm","dont_reg_yet","LoginBlock","sendLoginRequest","success_auth","LoginContainer","loginThunkCreator","stopSubmit","_error","Profile","ProfileContainer","SignUpReduxForm","SignUpFormBlock","signup_form","sendSignUpRequest","ProfileForm","profile_form_wr","auth_info","profile_form","add_photo_row","photo_cont","add_photo","SignUpBlock","SignUpContainer","signUpThunkCreator","Loader","NewFriends","proposalsList","buttonsState","buttons_row","deny","denyProposal","chanhgeButtonsState","accept","acceptProposal","proposal","noProposals","openfolder","newFriends","NewFriendsContainer","copyButtonsState","UsersList","buttonsStates","deleteProposal","postProposal","profilesArr","friendStatus","usersList","UsersListContainer","copyListButtons","App","InitializingApp","promise","Promise","all","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f700e97d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"yourFriends_delete_button__1bT4Z\",\"yourFriends\":\"yourFriends_yourFriends__3yW1r\",\"noFriends\":\"yourFriends_noFriends__13UPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"usersList_add_button__2fVWQ\",\"usersList\":\"usersList_usersList__2v1uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","module.exports = __webpack_public_path__ + \"static/media/plus.78208480.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","module.exports = __webpack_public_path__ + \"static/media/users.7ba66cd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail-open.6a43bbb7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"friends_line__CTaIr\",\"names_row\":\"friends_names_row__I9xPa\",\"company\":\"friends_company__3IPjv\",\"description\":\"friends_description__HUJS-\",\"description_p\":\"friends_description_p__j17_s\",\"load_more\":\"friends_load_more__26ODF\",\"loading_profile\":\"friends_loading_profile__Us8VP\",\"loading\":\"friends_loading__3VScv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withedit_current\":\"common_withedit_current__3mFwP\",\"withedit_block\":\"common_withedit_block__11_W2\",\"plain_input\":\"common_plain_input__3zzxU\",\"plain_textarea\":\"common_plain_textarea__237u6\",\"loading_bar\":\"common_loading_bar__TjjZG\",\"loading\":\"common_loading__2aPGq\",\"done_check\":\"common_done_check__3kKij\",\"input_wr\":\"common_input_wr__1j_qc\",\"form_danger\":\"common_form_danger__2ZFlS\",\"load_more\":\"common_load_more__mlkAq\",\"all_loaded\":\"common_all_loaded__11aHE\",\"loading_scheme\":\"common_loading_scheme__tcTaS\",\"elem\":\"common_elem__2I5_7\",\"loadingScheme\":\"common_loadingScheme__1FfKI\",\"add_button\":\"common_add_button__7A7b-\",\"counters_table_head\":\"common_counters_table_head__2MHPb\",\"list_ul\":\"common_list_ul__3hmvF\",\"page_buttons\":\"common_page_buttons__eOPiv\",\"page_button\":\"common_page_button__m6fX0\",\"text_line\":\"common_text_line__2xBBE\",\"big_ul\":\"common_big_ul__1WsLo\",\"list\":\"common_list__uNHVH\",\"h2\":\"common_h2__21ZCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"signup_signup_form__7HJVd\",\"dont_reg_yet\":\"signup_dont_reg_yet__239zS\",\"input_wr\":\"signup_input_wr__WIkn0\",\"input_danger\":\"signup_input_danger__2AIPg\",\"password_strength\":\"signup_password_strength__peCEw\",\"smoothappearance\":\"signup_smoothappearance__4VAwc\",\"tooWeak\":\"signup_tooWeak__Vo_W9\",\"weak\":\"signup_weak__bx5Hx\",\"medium\":\"signup_medium__1OxDa\",\"good\":\"signup_good__2KcH1\",\"loading_bar\":\"signup_loading_bar__3cVFs\",\"loading\":\"signup_loading__1IMnh\",\"active\":\"signup_active__3mlkR\",\"auth_info\":\"signup_auth_info__eHPph\",\"profile_form_wr\":\"signup_profile_form_wr__3zHGM\",\"profile_form\":\"signup_profile_form__hgX0S\",\"photo_cont\":\"signup_photo_cont__-6OF5\",\"add_photo_row\":\"signup_add_photo_row__AGbTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"input_wr\":\"login_input_wr__3ZVSI\",\"input_danger\":\"login_input_danger__3KsA1\",\"danger\":\"login_danger__3q7pY\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\",\"form_danger\":\"login_form_danger__2x0dg\",\"success_auth\":\"login_success_auth__1Bv0W\",\"password_strength\":\"login_password_strength__2bQOP\",\"smoothappearance\":\"login_smoothappearance__3HXh5\",\"tooWeak\":\"login_tooWeak__3G-5M\",\"weak\":\"login_weak__1bssw\",\"medium\":\"login_medium__2Wr46\",\"good\":\"login_good__3UmXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__15BfM\",\"link_item\":\"navbar_link_item__2Qnum\",\"active\":\"navbar_active__uE8Zz\",\"profile\":\"navbar_profile__SnKZH\",\"logo\":\"navbar_logo__3hFZg\",\"navbar_menu\":\"navbar_navbar_menu__2_8AK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__2Mkqz\",\"name\":\"shortcounter_name__2XGTE\",\"domen\":\"shortcounter_domen__13SoB\",\"dayusers\":\"shortcounter_dayusers__3LOqd\",\"totalusers\":\"shortcounter_totalusers__9w9vy\",\"status\":\"shortcounter_status__2OofU\",\"work\":\"shortcounter_work__1ylaG\",\"notwork\":\"shortcounter_notwork__3MW4_\",\"checking\":\"shortcounter_checking__3lzMp\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/counters'\r\n})\r\n\r\nexport const countersAPI = {\r\n    postCounter(data){\r\n        return axiosInstance.post('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getCounters(page, limit){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getCounterById(counterId){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {countersAPI} from \"../api/counters-api\";\r\nimport store from \"./redux-store\"\r\nimport {reset} from 'redux-form';\r\nlet initialState = {\r\n        counterslistData: [],\r\n        pageSize: 5,\r\n        totalCounters: ''\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: action.counterData._id,\r\n                name: action.counterData.name,\r\n                domen: action.counterData.domen,\r\n                dayusers: action.counterData.dayusers,\r\n                allusers: action.counterData.allusers,\r\n                status: action.counterData.status\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [...state.counterslistData, newCounter],\r\n                counterNameInput: '',\r\n                counterDomenInput: ''\r\n            }\r\n        }\r\n\r\n        case \"SET-COUNTERS\":{\r\n            return {\r\n                ...state,\r\n                counterslistData: action.countersData.items\r\n            }\r\n        }\r\n        case 'SET-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                totalCounters: action.totalCounters.totalPages\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = (counterData) =>({\r\n    type: 'ADD-COUNTER',\r\n    counterData: counterData\r\n})\r\nexport const setCounters = (countersData) =>({\r\n    type: 'SET-COUNTERS',\r\n    countersData: countersData\r\n\r\n})\r\nexport const setTotalCounters = (totalCounters) =>({\r\n    type: 'SET-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\n\r\n\r\n\r\nexport const getCounters = (page) =>{\r\n    return (dispatch) =>{\r\n        countersAPI.getCounters(page, store.getState().countersPage.pageSize).then(response =>{\r\n            dispatch(setCounters(response))\r\n            dispatch(setTotalCounters(response))\r\n        })\r\n    }\r\n}\r\n\r\nexport const postCounter = (data) => {\r\n    return (dispatch) => {\r\n        countersAPI.postCounter(data).then(response =>{\r\n            countersAPI.getCounters(store.getState().countersPage.currentPage, store.getState().countersPage.pageSize).then(response =>{\r\n                dispatch(setCounters(response))\r\n                dispatch(setTotalCounters(response))\r\n                dispatch(reset('addcounter-form'))\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","let initialState = {\r\n    dayusersData: [],\r\n    pageSize: 5,\r\n    totalUsers: 17,\r\n    currentPage: 1,\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"SET-USERS\":{\r\n\r\n            if(state.dayusersData.length === 0){\r\n                return{\r\n                    ...state,\r\n                    dayusersData: [...state.dayusersData,  ...action.usersData],\r\n                    currentPage: state.currentPage + 1\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        case \"LOAD-NEW-PAGE\":{\r\n            let newCurrentPage = state.currentPage + 1\r\n            return {\r\n\r\n                ...state,\r\n                dayusersData: [...state.dayusersData, ...action.usersData],\r\n                currentPage: newCurrentPage\r\n\r\n            }\r\n\r\n        }\r\n        case \"SET-TOTAL-USERS\":{\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUsersActionCreator = (usersData) =>({\r\n    type: \"SET-USERS\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const loadNewPageActionCreator = (usersData) =>({\r\n    type: \"LOAD-NEW-PAGE\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalUsersActionCreator = (totalUsers) =>({\r\n    type: 'SET-TOTAL-USERS',\r\n    totalUsers: totalUsers\r\n})\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProfileInfoById(userId){\r\n        return axiosInstance.get('/userid/'+userId)\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getProposals(){\r\n        return axiosInstance.get('/your_proposals/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data.proposals;\r\n                })\r\n\r\n    },\r\n\r\n    getProfilesList(page, limit){\r\n        return axiosInstance.get('/friendslist', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getFriendsList(page, limit){\r\n        return axiosInstance.get('/friends/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n\r\n\r\nexport const profileActionsAPI = {\r\n    postProposal(userId){\r\n        return axiosInstance.post('/proposal/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n\r\n    deleteProposal(userId){\r\n        return axiosInstance.delete('/proposal/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    acceptProposal(userId){\r\n        return axiosInstance.post('/proposals/'+userId, null, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    denyProposal(userId){\r\n        return axiosInstance.delete('/proposals/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    deleteFriend(userId){\r\n        return axiosInstance.delete('/delete_friend/'+userId,  {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI, profileActionsAPI} from '../api/profile-api'\r\nimport store from \"../redux/redux-store\";\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: '',\r\n    pageSize: 5,\r\n    totalProfiles: undefined,\r\n    proposals: [],\r\n    profilesList: [],\r\n    friendsList: [],\r\n    totalFriends: undefined,\r\n    deletedFriend: undefined\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SET-PROFILE-INFO':\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        case 'SET-PROFILES-LIST':\r\n            return {\r\n                ...state,\r\n                profilesList: action.data\r\n            }\r\n        case 'SET-TOTAL-PROFILES':\r\n            return {\r\n                ...state,\r\n                totalProfiles: action.count\r\n\r\n            }\r\n        case 'SET-PROPOSALS':\r\n            return {\r\n                ...state,\r\n                proposals: action.proposals\r\n            }\r\n        case 'SET-FRIENDS-LIST':\r\n            return {\r\n                ...state,\r\n                friendsList: action.friends,\r\n                totalFriends: action.totalDocs\r\n            }\r\n        case 'SET-DELETED-FRIEND':\r\n            return {\r\n                ...state,\r\n                deletedFriend: [action.friendId]\r\n            }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\nexport const setProfilesList = (data) =>({\r\n    type: 'SET-PROFILES-LIST',\r\n    data: data\r\n})\r\n\r\nexport const setTotalProfiles = (count) =>({\r\n    type: 'SET-TOTAL-PROFILES',\r\n    count: count\r\n})\r\n\r\nexport const setProposals = (proposals) => ({\r\n    type: 'SET-PROPOSALS',\r\n    proposals: proposals\r\n})\r\n\r\nexport const setFriendsList = (friends, totalDocs) =>({\r\n    type: 'SET-FRIENDS-LIST',\r\n    friends: friends,\r\n    totalDocs: totalDocs\r\n})\r\n\r\nexport const setDeletedFriend = (friendId)=>({\r\n    type: 'SET-DELETED-FRIEND',\r\n    friendId: friendId\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getProposals = () => (dispatch)=>{\r\n    profileAPI.getProposals().then(response=>{\r\n            dispatch(setProposals(response))\r\n    })\r\n}\r\n\r\nexport const getProfileInfo = () => (dispatch) =>{\r\n        profileAPI.getProfileInfo()\r\n                .then(response =>{\r\n                    dispatch(setProfileInfo(response))\r\n                })\r\n\r\n}\r\n\r\nexport const getProfilesList = (page,limit) => (dispatch) =>{\r\n    profileAPI.getProfilesList(page,limit).then(response =>{\r\n        dispatch(setProfilesList(response.items))\r\n        dispatch(setTotalProfiles(response.totalPages))\r\n    })\r\n}\r\n\r\nexport const postProposal = (userId, currentPage) => (dispatch) =>{\r\n    profileActionsAPI.postProposal(userId).then(response =>{\r\n        if(response.message === 'proposal sended'){\r\n           dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n        }\r\n\r\n\r\n    })\r\n}\r\n\r\nexport const deleteProposal = (userId, currentPage) => (dispatch) =>{\r\n    profileActionsAPI.deleteProposal(userId).then(response =>{\r\n        if(response.message === \"proposal deleted\"){\r\n            dispatch(getProfilesList(currentPage,store.getState().profilePage.pageSize))\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport const acceptProposal = (userId) => (dispatch) =>{\r\n    profileActionsAPI.acceptProposal(userId).then(response =>{\r\n        if(response.message === \"Friend added\"){\r\n            dispatch(getProposals())\r\n        }\r\n    })\r\n}\r\n\r\nexport const denyProposal = (userId) => (dispatch) => {\r\n    profileActionsAPI.denyProposal(userId).then(response => {\r\n        if (response.message === \"Proposal denied\") {\r\n            dispatch(getProposals())\r\n        }\r\n    })\r\n}\r\n\r\nexport const putProfileInfo = (data) =>{\r\n    return (dispatch) =>{\r\n        profileAPI.putProfileInfo(data)\r\n                .then(response =>{\r\n                    dispatch(setProfileInfo(response.newInfo))\r\n                })\r\n    }\r\n}\r\n\r\nexport const getFriendsList = (page,limit) => (dispatch) =>{\r\n    profileAPI.getFriendsList(page,limit).then(response =>{\r\n      dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n    })\r\n}\r\n\r\nexport const addFriendsList = (page, limit) => (dispatch) =>{\r\n\r\n    profileAPI.getFriendsList(page, limit).then(response=>{\r\n\r\n        dispatch(setFriendsList(response.friendsPage, response.totalDocs))\r\n    })\r\n}\r\n\r\nexport const deleteFriend = (userId, buttonId) => (dispatch) =>{\r\n    profileActionsAPI.deleteFriend(userId).then(response=>{\r\n        if(response.message === \"friend deleted\"){\r\n          dispatch(setDeletedFriend(buttonId))\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    }\r\n\r\n}","\r\nimport {authAPI, signUpAPI} from \"../api/auth-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    isFetching: false,\r\n    signUpState: 'signUpForm'\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case 'TOGGLE_SIGNUP_STATE':\r\n            return {\r\n                ...state,\r\n                signUpState: action.signUpState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const setToken = (token) =>({\r\n    type: 'SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\n\r\nexport const setSignUpState = (signUpState) =>{return {\r\n    type: 'TOGGLE_SIGNUP_STATE',\r\n    signUpState: signUpState\r\n}}\r\n\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message == \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=360000'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=360000'\r\n                    authAPI.getAuthInfo()\r\n                            .then(response => {\r\n                                console.log(response)\r\n\r\n                                dispatch(setProfileData(response))\r\n                            })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(stopSubmit('login-form', {_error : \"Неверные данные\"}))\r\n                dispatch(toggleIsFetching(false))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            dispatch(toggleIsFetching(false))\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(setSignUpState('userInfoForm'))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message == \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                authAPI.getAuthInfo()\r\n                                        .then(response => {\r\n                                            dispatch(setProfileData(response))\r\n                                        })\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch(toggleIsFetching(false))\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(stopSubmit('signup-form', {email : 'Данная почта уже зарегистрирована'}))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(stopSubmit('signup-form', {login : 'Данный логин уже зарегистрирован'}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const AuthThunkCreator = () => (dispatch)=>{\r\n    let getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    let getAuth = () =>{\r\n        authAPI.getAuthInfo().then(response => {\r\n            dispatch(setProfileData(response))\r\n        })\r\n    }\r\n\r\n    if (getCookie('email') && getCookie('password')){\r\n       return  authAPI.postLoginInfo(getCookie('email'), getCookie('password')).then(response => {\r\n            dispatch(setToken(response.token))\r\n            getAuth()\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {AuthThunkCreator} from './auth-reducer'\r\n\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\n\r\nconst appReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"INITIALIZED_SUCCESS\":\r\n            return{\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: \"INITIALIZED_SUCCESS\"})\r\n\r\n\r\nexport const InitializingApp = () => (dispatch) =>{\r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n                dispatch(setInitializedSuccess())\r\n            })\r\n\r\n}\r\n\r\n\r\n\r\nexport  default appReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport countersReducer from \"./counters-reducer\";\r\nimport audiencesReducer from \"./audiences-reducer\";\r\nimport summaryReducer from \"./summary-reducer\";\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store\r\nexport default store","import React from 'react';\r\nimport s from './sidebar.module.scss';\r\n\r\nconst Sidebar = () =>{\r\n    let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.sidebar} >\r\n             <div className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Сводка</a>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Посетители</a>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Конверсии</a>\r\n\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let logout = () =>{\r\n      props.logout()\r\n    }\r\n    return  (\r\n\r\n\r\n        <nav className={s.navbar}>\r\n            <div className={s.logo}>\r\n                Трекер\r\n            </div>\r\n\r\n            <div className={s.navbar_menu}>\r\n                <NavLink className={s.link_item} to=\"/summary\" activeClassName={s.active}>Общее</NavLink>\r\n                <NavLink className={s.link_item} to=\"/counters\" activeClassName={s.active}>Счётчики</NavLink>\r\n                <NavLink className={s.link_item} to=\"/audiences\" activeClassName={s.active}>Аудитории</NavLink>\r\n            </div>\r\n            <div className={s.profile}>\r\n                <div className='dropdown'>\r\n\r\n                    <NavLink to=\"/profile\" className={s.link_item}>{props.isAuth == true ? props.profileLogin : \"Профиль\" }</NavLink>\r\n                    <div className='dropdown_block'>\r\n                        <NavLink to=\"/profilesettings\" className='dropdown_link' activeClassName='active'>Настройки</NavLink>\r\n                        <NavLink to=\"/friends\" className='dropdown_link' activeClassName='active'>Связанные аккаунты</NavLink>\r\n                        {props.isAuth == true ? <div className=\"dropdown_link\" onClick={logout}>Выйти</div> : <NavLink to=\"/login\" className='dropdown_link' activeClassName='active'>Войти</NavLink>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </nav>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {setToken, setProfileData, deleteProfileData} from \"../../redux/auth-reducer\";\r\n\r\nclass NavbarContainer extends React.Component {\r\n\r\n    getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    logOut = () =>{\r\n        document.cookie = 'token='+this.props.token+'; max-age=-1'\r\n        document.cookie = 'email='+this.props.emailInput+'; max-age=-1'\r\n        document.cookie = 'password='+this.props.passwordInput+'; max-age=-1'\r\n        this.props.deleteProfileData()\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Navbar isAuth={this.props.isAuth}\r\n                       profileLogin={this.props.profileLogin}\r\n                       logout={this.logOut}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login\r\n    }\r\n}\r\n\r\n\r\nexport default NavbarContainer = connect(mapStateToProps, {setToken,setProfileData, deleteProfileData})(NavbarContainer)","import React from 'react';\r\nimport s from './shortuser.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Shortuser = (props) =>{\r\n    const mongoDate = (mongoDate) => {\r\n        let daysSeparate = mongoDate.split('T')\r\n        let date = daysSeparate[0];\r\n        let timeSeparate = daysSeparate[1];\r\n        timeSeparate = timeSeparate.split(':')\r\n        let time = timeSeparate.slice(0,2).join(':')\r\n        let seconds = timeSeparate[2].replace('Z','')\r\n        return{\r\n            date: date,\r\n            time: time,\r\n            seconds: seconds\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n\r\n                <NavLink to={'/users/'+props.id} className={s.shortuser}>\r\n                    <div className={s.user_alias}>\r\n\r\n                    </div>\r\n                    <div className={s.user_country}><p>{props.country}</p></div>\r\n                    <div className={s.user_time}><p>{props.time}</p></div>\r\n                    <div className={s.user_date}><p>{mongoDate(props.date).time}</p></div>\r\n                    <div className={s.user_revenue}><p>{props.revenue}</p></div>\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Shortuser;","import React from 'react';\r\nimport s from './dayusers.module.scss';\r\nimport Shortuser from \"./shortuser/shortuser\";\r\n\r\n\r\nconst LoadingShortuser = () =>{\r\n    return (\r\n            <div className={s.loading_shortuser}>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Dayusers = (props) => {\r\n\r\n\r\n\r\n    let dayusers = props.dayusers;\r\n\r\n    let dayUserElements = [];\r\n    let i = 0\r\n    if(dayusers.length == 0){\r\n        while(i <= 5){\r\n            dayUserElements[i] = <LoadingShortuser />\r\n            i++\r\n        }\r\n    }\r\n    else{\r\n        dayUserElements = dayusers.map(dayuser => <Shortuser id={dayuser.id} country={dayuser.country} time={dayuser.time} date={dayuser.date} revenue={dayuser.revenue} />)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className={s.tablehead}>\r\n                    <div className={s.user_alias}><p>Псевдоним</p></div>\r\n                    <div className={s.user_country}><p>Страна</p></div>\r\n                    <div className={s.user_time}><p>Время на сайте</p></div>\r\n                    <div className={s.user_date}><p>Дата посещения</p></div>\r\n                    <div className={s.user_revenue}><p>Доход</p></div>\r\n                </div>\r\n                <div className=\"dayuser_list\">\r\n                    {dayUserElements}\r\n                    <button className={s.loadmore_button+ \" attractive-button\"} onClick={() => {props.loadMore()}}>Загрузить ещё</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dayusers;","import React from \"react\";\r\nimport Dayusers from \"./dayusers\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersActionCreator, loadNewPageActionCreator,setCurrentPageActionCreator, setTotalUsersActionCreator} from '../../../../redux/summary-reducer'\r\nimport * as axios from \"axios\";\r\n\r\n\r\nclass DayusersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('http://nikrainev.ru:3000/auth/me', {headers:{\"Authorization\": \"Bearer \"+ this.props.token}})\r\n                .then(response => {\r\n\r\n                })\r\n\r\n        axios.get('http://195.161.62.108:3000/users').then(response =>{\r\n            this.props.setTotalUsers(response.data.totalPages)\r\n        })\r\n\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=1&limit=5`).then(response =>{\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n\r\n    }\r\n\r\n    loadMore = ()=>{\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.loadNewPage(response.data.items)\r\n\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return <Dayusers\r\n                dayusers={this.props.dayusers}\r\n                loadMore={this.loadMore}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dayusers: state.summaryPage.dayusersData,\r\n        currentPage: state.summaryPage.currentPage,\r\n        totalUsers: state.summaryPage.totalUsers,\r\n        pageSize: state.summaryPage.pageSize,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n     setUsers: (usersData) => {\r\n         dispatch(setUsersActionCreator(usersData))\r\n     },\r\n     loadNewPage: (usersData) =>{\r\n         dispatch(loadNewPageActionCreator(usersData))\r\n     },\r\n     setCurrentPage: () =>{\r\n         dispatch(setCurrentPageActionCreator())\r\n     },\r\n     setTotalUsers:(totalUsers) =>{\r\n         dispatch(setTotalUsersActionCreator(totalUsers))\r\n     }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default  DayusersContainer = connect(mapStateToProps, mapDispatchToProps)(DayusersContainer)\r\n\r\n","import React from 'react';\r\nimport s from '../graphic.module.scss';\r\nconst Graphiccol = (props) => {\r\n    let colheight = {\r\n     height: props.graphicvalue+'px'\r\n    }\r\n    return(\r\n            <div className={s.graphic_col_wr}>\r\n                <div className={s.graphic_col_text}>\r\n                    <p className={s.graphic_col_day}>{props.graphicday}</p>\r\n                    <p className={s.graphic_col_number}>{props.graphicvalue}</p>\r\n                </div>\r\n                <div className={s.graphic_col} style={colheight}></div>\r\n            </div>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport s from './graphic.module.scss';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport Shortuser from \"../content/summary/dayusers/shortuser/shortuser\";\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <div className={s.graphic}>\r\n                <div className={s.graphic_cols}>\r\n                    {graphicColElements}\r\n                </div>\r\n              <div className={s.graphic_bottom}>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className={s.day_stat}>\r\n                            <p>Клики<br />120</p>\r\n                            <p>Пользователи<br />65</p>\r\n                            <p>Конверсии<br />2</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n\r\n                            <Graphic graphicData={props.graphicData}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        graphicData: state.summaryPage.graphicData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst DaystatContainer = connect(mapStateToProps, mapDispatchToProps())(Daystat)\r\n\r\nexport default DaystatContainer;","import React from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nconst Summary = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n\r\n\r\n                <DaystatContainer/>\r\n                <DayusersContainer/>\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Summary;","import React from \"react\";\r\nimport s from \"../profile/login/login.module.scss\";\r\nexport const Input = ({input, meta, ...props}) =>{\r\n    return (\r\n\r\n                <div className={s.input_wr}>\r\n                    {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                    <input className=\"plain_input\" {...input} {...props} />\r\n                </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport const PasswordScoreInput = ({input, meta, ...props}) =>{\r\n        let strengthValue = 'none'\r\n        let strengthText = ''\r\n\r\n        if(input.value === ''){\r\n            strengthValue = 'none'\r\n            strengthText = ''\r\n        }\r\n        else if(input.value.length <= 4 && input.value.length >= 1){\r\n            strengthValue = 'tooWeak'\r\n            strengthText = 'Слишком слабый пароль'\r\n        }\r\n        else if(input.value.length <= 6){\r\n            strengthValue = 'weak'\r\n            strengthText = 'Слабый пароль'\r\n        }\r\n        else if(input.value.length <= 8){\r\n            strengthValue = 'medium'\r\n            strengthText = 'Средний пароль'\r\n        }\r\n        else{\r\n            strengthValue = 'good'\r\n            strengthText = 'Хороший пароль'\r\n        }\r\n\r\n    return (\r\n\r\n            <div className={s.input_wr}>\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                <input className=\"plain_input\" {...input} {...props} />\r\n                {strengthValue !== 'none' ?  <div className={s.password_strength}><div className={s[strengthValue]}></div>\r\n                    <p>{strengthText}</p></div> : ''}\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n","export const required = value => (value || typeof value === 'number' ? undefined : 'Обязательно')\r\n\r\nexport const checkLogin = value => (value && /^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(value) ? undefined : 'Некорректный логин')\r\n\r\nexport const checkEmail = value => (value && /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(value) ? undefined : 'Почта некорректная')\r\n\r\nexport const checkPassword = value => (value && /^[0-9a-z#!_-]/i.test(value) ? undefined : 'Пароль некорректный')\r\n\r\nexport const passwordsMatch = (value, allValues) =>\r\n        value !== allValues.password ? 'Пароли не совпадают' : undefined;\r\n","import React from 'react';\r\nimport s from '../addcounter.module.scss';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../../common/formControls\";\r\nimport {required} from \"../../../../../utils/validation\";\r\n\r\nconst AddCounterForm = (props) =>{\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"counterName\" type=\"text\"  component={Input} placeholder=\"Название счётчика\" validate={required}/>\r\n                <Field name=\"counterDomen\" type=\"text\"  component={Input} placeholder=\"Домен\" validate={required}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst AddCounterReduxForm = reduxForm({form: 'addcounter-form'})(AddCounterForm)\r\n\r\n\r\n\r\n\r\nconst Addcounterblock = (props) =>{\r\n    const onSubmit = (values) =>{\r\n        props.postCounter(values.counterName, values.counterDomen)\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\"><p>Добавьте ваш счётчик</p>\r\n\r\n          </div>\r\n          <div className=\"col-6\">\r\n               <div className={s.addcounter_form}>\r\n                  <AddCounterReduxForm onSubmit={onSubmit}/>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Addcounterblock;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {NavLink, Route, withRouter, Link} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AccountNotExist = (props) =>{\r\n    return <div className=\"gotologinblock\">\r\n\r\n        <h1>Войдите в аккаунт</h1>\r\n        <Link className=\"control_button\" to='/login'>Войти</Link>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nconst WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isAuth) return <Component {...props}/>\r\n        else return <AccountNotExist/>\r\n    }\r\n\r\n    let ConnectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedWithAuthRedirect\r\n\r\n}\r\nexport default WithAuthRedirect","import React from \"react\";\r\n\r\nimport {postCounter} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\n\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass AddcounterblockContainer extends React.Component {\r\n    postCounter = (name, domen) =>{\r\n        this.props.postCounter({name: name, domen: domen})\r\n    }\r\n\r\n    render (){\r\n        return <Addcounterblock postCounter={this.postCounter}\r\n\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {postCounter}), WithAuthRedirect)(AddcounterblockContainer);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    console.log(props)\r\n    return(\r\n                    <NavLink to={'/counters/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span>\r\n                               <span className={s.checking}>Проверяется</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from \"react\";\r\n\r\nconst PaginationComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    let pages =[]\r\n    for(let i=1; i<=pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n    let pagesButtonsElements = pages.map(page => <span className={props.currentPage === page && \"current-page\"}\r\n                                                       onClick={() => {props.changePage(page)}}>{page}</span>)\r\n    let buttonsSelector = () =>{\r\n        if (props.pages === 'empty' || pagesCount === 1){\r\n            return (<></>)\r\n        }\r\n        else{\r\n            return   <div className=\"pages-buttons\">{pagesButtonsElements}</div>\r\n        }\r\n    }\r\n    return(\r\n            buttonsSelector()\r\n    )\r\n}\r\n\r\n\r\nexport class Pagination extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({pages: this.props.pages})\r\n            if(this.props.getCurrentPage === undefined){\r\n                this.setState({isFetching: false})\r\n            }\r\n        else{\r\n\r\n                if(this.state.pages !== prevState.pages){\r\n\r\n                    this.setState({isFetching: false})\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n            this.loaders.push(this.props.loader)\r\n        }\r\n\r\n        this.setState({isFetching: true})\r\n\r\n    }\r\n\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching){\r\n            return this.loaders\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n                <PaginationComponent currentPage={this.state.currentPage}\r\n                                     pageSize={this.props.pageSize}\r\n                                     totalPages={this.props.totalPages}\r\n                                     changePage={this.changePage}\r\n                                     pages={this.state.pages}\r\n                />\r\n               </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\nimport {Pagination} from \"../../../common/pagination\";\r\nimport plus from \"../../../../assets/icons/plus.svg\"\r\nconst LoadingCounter = ()=>{\r\n    return <div className={s.loading_counter}> </div>\r\n\r\n}\r\n\r\nconst EmptyBlock = () =>{\r\n    return <div className={s.noCounters}>\r\n        <img src={plus} alt=\"\"/>\r\n        <p>У вас ещё нет счётчиков,<br /> добавьте свой первый счётчик</p>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst Counterslist = (props) => {\r\n\r\n       let countersElement = []\r\n\r\n       if(props.countersListData.length !== 0){\r\n           countersElement = props.countersListData.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}/> )\r\n       }\r\n       else{\r\n           countersElement = 'empty'\r\n       }\r\n\r\n\r\n       let firstLoader = []\r\n            for(let i=0; i < props.pageSize; i++){\r\n            firstLoader.push(<LoadingCounter />)\r\n        }\r\n       return <div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Статус</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.list}>\r\n\r\n                     <Pagination pages={countersElement} pageSize={props.pageSize} totalPages={props.totalCounters}\r\n                           pageChanger={props.changePage} loader={<LoadingCounter />} emptyBlock={<EmptyBlock />}/>\r\n                   </div>\r\n\r\n               </div>\r\n\r\n\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCounters, setTotalCounters, getCounters} from \"../../../../redux/counters-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from   \"redux\"\r\nclass CounterslistContainer extends React.Component{\r\n    componentDidMount() {\r\n           this.props.getCounters(1)\r\n    }\r\n\r\n    changePage = (page) =>{\r\n        this.props.getCounters(page)\r\n    }\r\n    render(){\r\n      return <Counterslist\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              currentPage={this.props.currentPage}\r\n              isFetching={this.props.isFetching}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n        pageSize: state.countersPage.pageSize,\r\n        totalCounters: state.countersPage.totalCounters,\r\n        currentPage: state.countersPage.currentPage,\r\n        isFetching: state.countersPage.isFetching\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default CounterslistContainer = compose(connect(mapStateToProps, {setCounters, setTotalCounters,\r\n    getCounters}), WithAuthRedirect)(CounterslistContainer)\r\n\r\n","import React from \"react\";\r\nimport s from \"./common.module.scss\";\r\nexport const CountersListLoading = () =>{\r\n    return (\r\n\r\n           <div className={s.loading_scheme}>\r\n              <div className={s.add_button +\" \"+ s.elem} />\r\n              <div className={s.counters_table_head +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.list_ul +\" \"+ s.elem} />\r\n              <div className={s.page_buttons}>\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n                  <div className={s.page_button + \" \" + s.elem} />\r\n              </div>\r\n           </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport const FriendsPageLoader = () =>{\r\n    return(\r\n            <div className={s.loading_scheme}>\r\n               <div className={s.text_line + \" \" + s.elem} />\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                </div>\r\n                <div className={s.h2 + \" \"+ s.elem} />\r\n                <div className={s.list}>\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n                    <div className={s.big_ul+\" \"+ s.elem} />\r\n\r\n                    <div className={s.page_buttons}>\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                        <div className={s.page_button + \" \" + s.elem} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\nimport {CountersListLoading} from \"../../common/loadingSchemes\"\r\nimport {connect} from \"react-redux\";\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n                {props.isInitialized ? <><Addcounter/><CounterslistContainer /> </>: <CountersListLoading />}\r\n            </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Counters);","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <div className=\"content\">\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from \"react\";\r\n\r\nexport const offsetText = (text) =>{\r\n    let textarr = text.split('\\n');\r\n    const isUrl = /^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/;\r\n    for (let i = 0; i < textarr.length; i=i+2){\r\n        textarr.splice(i+1,0,<br />)\r\n    }\r\n\r\n    for (let lineNumber = 0; lineNumber < textarr.length; lineNumber++){\r\n        if(typeof textarr[lineNumber] === 'string'){\r\n            let line = textarr[lineNumber].split(' ')\r\n            for (let wordNumber = 0; wordNumber < line.length; wordNumber++){\r\n                if(line[wordNumber] == '') {\r\n                    line[wordNumber] = <span>&nbsp;</span>\r\n                }\r\n                else{\r\n                    line[wordNumber] = line[wordNumber]+' ';\r\n                }\r\n\r\n                if(isUrl.test(line[wordNumber])){\r\n                    line[wordNumber] = <a target=\"blank\" href={'https://'+line[wordNumber]}>{line[wordNumber]}</a>\r\n                }\r\n            }\r\n            textarr[lineNumber] = line\r\n        }\r\n\r\n    }\r\n    return(\r\n            textarr\r\n    )\r\n}","import React from \"react\";\r\nimport loadingImg from \"../../assets/icons/small-loading.svg\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport s from \"./common.module.scss\"\r\nimport {offsetText} from \"../../utils/textTransformation\";\r\n\r\nexport class EditInput extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n                this.setState({isFetching: true})\r\n                this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n\r\n            if(prevState.isFetching === true){\r\n                this.setState({wasUpdated: true})\r\n                setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n                    {this.state.inputEditMode\r\n                            ?\r\n\r\n                                        <div>\r\n                                            <input onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                                   type=\"text\" className='plain_input' placeholder={this.props.placeholder}\r\n                                                   onBlur={() => {this.changeCondition(false)}} autoFocus={true}/>\r\n\r\n                                        </div>\r\n                            :\r\n                            <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.props.inputText}</div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class EditTextarea extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    changeCondition = (inputState,e) =>{\r\n        if(e){\r\n            console.log(e.target)\r\n        }\r\n\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n            this.setState({isFetching: true})\r\n            this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n            \r\n        }\r\n\r\n        if(prevState.isFetching === true && prevProps !== this.props){\r\n            this.setState({wasUpdated: true})\r\n            setTimeout(()=>{this.setState({wasUpdated: false})}, 1000)\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={(e) =>{this.changeCondition(true, e)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n            {this.state.inputEditMode\r\n                    ?\r\n\r\n                    <div>\r\n                        <textarea onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                  wrap=\"soft\" className='plain_textarea'\r\n                                  type=\"text\"  placeholder={this.props.placeholder}\r\n                                  cols=\"30\" rows=\"10\"\r\n                                  onBlur={() => {this.changeCondition(false)}} autoFocus={true}> </textarea>\r\n                    </div>\r\n                    :\r\n                    <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder :<p>{offsetText(this.props.inputText)}</p>}</div>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nimport {EditInput, EditTextarea} from \"../../../common/editinput\";\r\n\r\nclass YourProfile extends React.Component{\r\n    render (){\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <div className={s.photo_wr}>\r\n                                <p>Добавить фото</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <EditInput inputText={this.props.name} putInfo={this.props.putProfileInfo} name={\"name\"} placeholder={\"Введите ваше имя\"}/>\r\n                                <EditInput inputText={this.props.soName} putInfo={this.props.putProfileInfo} name={\"soName\"} placeholder={\"Введите вашу фамилию\"}/>\r\n                                <EditInput inputText={this.props.company} putInfo={this.props.putProfileInfo} name={\"company\"} placeholder={\"Введите вашу компанию\"}/>\r\n                                <EditTextarea inputText={this.props.description} putInfo={this.props.putProfileInfo} name={\"description\"} placeholder={\"Введите описание\"} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React from \"react\";\r\nimport s from \"./common.module.scss\"\r\nconst LoadMoreComponent = (props) =>{\r\n    let pagesCount = Math.ceil(props.totalPages / props.pageSize)\r\n    const buttonSelector = () =>{\r\n        if(props.pages === 'empty' || props.inizialized === false || props.pages.length < props.pageSize){\r\n            return (<></>)\r\n        }\r\n        else if(pagesCount > props.currentPage){\r\n            return <button className={s.load_more +\" attractive-button\"} onClick={()=>{props.changePage(props.currentPage+1)}}>Загрузить ещё</button>\r\n        }\r\n        else{\r\n            return <button disabled className={s.all_loaded}>Загружены все записи</button>\r\n        }\r\n    }\r\n\r\n    return(\r\n            buttonSelector()\r\n\r\n    )\r\n}\r\n\r\n\r\nexport class LoadMore extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        currentPage: 1,\r\n        pages: this.props.pages,\r\n        initialized: false\r\n    }\r\n    changePage = (page) =>{\r\n        this.setState({currentPage:page})\r\n\r\n        this.props.pageChanger(page, this.props.pageSize)\r\n        this.setState({isFetching:true})\r\n        if(this.props.getCurrentPage){\r\n            this.props.getCurrentPage(page)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    loaders = []\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n\r\n            this.setState({pages: this.props.pages})\r\n            this.setState({isFetching: false})\r\n            this.setState({initialized: true})\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for(let i=0; i < this.props.pageSize; i++){\r\n            this.loaders.push(this.props.loader)\r\n        }\r\n        if(this.props.pages.length === 0){\r\n            this.setState({isFetching: true})\r\n        }\r\n    }\r\n    pagesSelector = () =>{\r\n        if(this.state.isFetching && this.state.pages !== 'empty'){\r\n            return [this.loaders,this.props.pages]\r\n        }\r\n        else{\r\n            if(this.state.pages === 'empty'){\r\n                return this.props.emptyBlock\r\n            }\r\n            else{\r\n                return this.props.pages\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render (){\r\n        return (<>\r\n            {this.pagesSelector()}\r\n\r\n            <LoadMoreComponent   currentPage={this.state.currentPage}\r\n                                 pageSize={this.props.pageSize}\r\n                                 totalPages={this.props.totalPages}\r\n                                 changePage={this.changePage}\r\n                                 pages={this.state.pages}\r\n                                 inizialized={this.state.initialized}\r\n            />\r\n        </> )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s2 from '../../friends/friends.module.scss';\r\nimport s from './yourFriends.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {LoadMore} from \"../../../common/loadMore\";\r\nimport friendIcon from '../../../../assets/icons/users.svg'\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\n\r\nconst NoFriends = () =>{\r\n    return <div className={s.noFriends}>\r\n        <img src={friendIcon} alt=\"\"/>\r\n        <p>У вас ещё нет друзей</p>\r\n    </div>\r\n}\r\n\r\nconst YourFriends = (props) => {\r\n    let friendsList = []\r\n    let deleteFriend = (userId, key) =>{\r\n     props.deleteFriend(userId, key)\r\n    }\r\n\r\n    let buttonSelector = (userId, buttonId) =>{\r\n        if(props.friends[buttonId].isFetching === false){\r\n            return <button className={s.delete_button} onClick={()=>{deleteFriend(userId, buttonId)}}>Удалить из друзей</button>\r\n        }\r\n        else{\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n    }\r\n    if(props.friends !== \"no friends\"){\r\n        let i = 0\r\n        friendsList = props.friends.map((friend)=> <div className={s2.line}>\r\n            <div className={s2.names_row}>\r\n                <p className=\"name\">{friend.name}</p>\r\n                <p className=\"soname\">{friend.soName}</p>\r\n            </div>\r\n            <div className={s2.company}>{friend.company}</div>\r\n            <div className={s2.description}><p className={s2.description_p}>{offsetText(friend.description)}</p></div>\r\n            {buttonSelector(friend.userId, i++)}\r\n\r\n        </div>)\r\n    }else{\r\n        friendsList = \"empty\"\r\n    }\r\n    return  (\r\n            <div className={s2.yourFriends}>\r\n                <h2>Ваши друзья:</h2>\r\n                <LoadMore pages={friendsList} pageSize={props.pageSize} totalPages={props.totalFriends}\r\n                          pageChanger={props.addToFriendsList} loader={<LoadingProfile />} emptyBlock={<NoFriends />}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default YourFriends;","export const selectProfilesList = (state) =>{\r\n    return state.profilePage.profilesList\r\n}\r\n\r\nexport const getTotalProfiles = (state) =>{\r\n    return state.profilePage.totalProfiles\r\n}\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.profilePage.pageSize\r\n}\r\n\r\nexport const getProposalsList = (state) =>{\r\n    return state.profilePage.proposals\r\n}\r\n\r\nexport const getFriends = (state) =>{\r\n    return state.profilePage.friendsList\r\n}\r\n\r\nexport const getTotalFriends = (state) =>{\r\n    return state.profilePage.totalFriends\r\n}\r\n\r\nexport const getDeletedFriend = (state) =>{\r\n    return state.profilePage.deletedFriend\r\n}","import React from 'react';\r\nimport YourFriends from \"./yourFriends\";\r\nimport {getFriends, getPageSize, getTotalFriends, getDeletedFriend} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getFriendsList, deleteFriend, addFriendsList, setFriendsList} from \"../../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nclass YourFriendsContainer extends React.Component{\r\n    state ={\r\n        friends: []\r\n    }\r\n    componentDidMount() {\r\n        this.props.getFriendsList(1, this.props.pageSize)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            if(prevProps.deletedFriend !== this.props.deletedFriend){\r\n                console.log(this.props.deletedFriend)\r\n                this.deleteFriendLocal(this.props.deletedFriend[0])\r\n            }\r\n\r\n            if(prevProps.friends !== this.props.friends){\r\n                if(typeof this.props.friends === \"object\"){\r\n                    let friendsFetching = this.props.friends.map((friend)=> ({\r\n                        userId: friend.userId,\r\n                        name: friend.name,\r\n                        soName: friend.soName,\r\n                        company: friend.company,\r\n                        description: friend.description,\r\n                        isFetching: false\r\n                    }))\r\n                    this.setState({friends: [...this.state.friends, ...friendsFetching]})\r\n\r\n                }\r\n                else{\r\n                    if(typeof this.props.friends === 'object'){\r\n                        let friendsFetching = this.props.friends.map((friend)=> ({\r\n                            userId: friend.userId,\r\n                            name: friend.name,\r\n                            soName: friend.soName,\r\n                            company: friend.company,\r\n                            description: friend.description,\r\n                            isFetching: false\r\n                        }))\r\n                        this.setState({friends: friendsFetching})\r\n                    }\r\n                    else{\r\n                        this.setState({friends: this.props.friends})\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyFriends = {...this.state.friends}\r\n        copyFriends[buttonId].isFetching = true\r\n        this.setState({listButtons: copyFriends})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setFriendsList([],undefined)\r\n    }\r\n\r\n    deleteFriendLocal = (friendId) =>{\r\n        let friendsCopy = [...this.state.friends]\r\n        friendsCopy.splice(friendId, 1)\r\n        if(friendsCopy.length === 0){\r\n            this.setState({friends: \"no friends\"})\r\n        }\r\n        else{\r\n            this.setState({friends: friendsCopy})\r\n        }\r\n    }\r\n\r\n    deleteFriend = (userId, buttonId) =>{\r\n        this.changeButtonState(buttonId)\r\n        this.props.deleteFriend(userId, buttonId)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <div className=\"container\">\r\n                <YourFriends\r\n                        friends={this.state.friends}\r\n                        pageSize={this.props.pageSize}\r\n                        totalFriends={this.props.totalFriends}\r\n                        deleteFriend={this.deleteFriend}\r\n                        addToFriendsList={this.props.addFriendsList}\r\n\r\n\r\n                /></div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        friends: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalFriends: getTotalFriends(state),\r\n        deletedFriend: getDeletedFriend(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getFriendsList, deleteFriend, addFriendsList, setFriendsList})(YourFriendsContainer);","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport YourFriendsContainer from './yourFriends/yourFriendsContainer'\r\nconst ProfileSettings = () =>{\r\n    return(\r\n            <div className=\"content\">\r\n               <YourProfileContainer />\r\n               <YourFriendsContainer />\r\n            </div>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings);","import React from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../components/common/formControls\"\r\nimport {required} from \"../../../utils/validation\";\r\nimport doneImg from \"../../../assets/icons/done.svg\";\r\nconst LoginForm = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"emailInput\" type=\"text\"  component={Input} placeholder=\"Введите почту\" validate={required}/>\r\n                <Field name=\"passwordInput\" type=\"password\"  component={Input} placeholder=\"Введите пароль\" validate={required}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                <p className={s.dont_reg_yet}>Ещё нет аккаунта? <NavLink to='signup'>Зарегистрируйтесь</NavLink></p>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login-form'})(LoginForm)\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendLoginRequest(values.emailInput, values.passwordInput)\r\n\r\n    }\r\n    return  (\r\n          <div className=\"container\">\r\n              <div className=\"login_block\">\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <LoginReduxForm isFetching={props.isFetching} onSubmit={onSubmit}/>\r\n                          </div>\r\n                          :\r\n                          <div className={s.success_auth}><img src={doneImg} alt=\"\"/><p>Вы авторизованы</p></div>\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    sendLoginRequest = (email, password) => {\r\n        this.props.loginThunkCreator(email, password)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n            <LoginBlock\r\n                       isFetching={this.props.isFetching}\r\n                       isAuth={this.props.isAuth}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, PasswordScoreInput} from \"../../common/formControls\";\r\nimport {required, checkLogin, checkEmail, checkPassword, passwordsMatch} from \"../../../utils/validation\";\r\n\r\n\r\nconst SignUpForm = (props) =>{\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"login\" type=\"text\"  component={Input} placeholder=\"Придумайте логин\" validate={[required, checkLogin]}/>\r\n                <Field name=\"email\" type=\"text\"  component={Input} placeholder=\"Ваша почта\" validate={[required, checkEmail]}/>\r\n                <Field name=\"password\" type=\"password\"  component={PasswordScoreInput} placeholder=\"Придумайте пароль\" validate={[required, checkPassword]}/>\r\n                <Field name=\"repeatPassword\" type=\"password\"  component={Input} placeholder=\"Повторите пароль\" validate={[required, passwordsMatch]}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({form: 'signup-form'})(SignUpForm)\r\n\r\n\r\nconst SignUpFormBlock = (props) =>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendSignUpRequest( values.email, values.login, values.password)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.signup_form}>\r\n                <SignUpReduxForm onSubmit={onSubmit} isFetching={props.isFetching}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className={s.profile_form_wr}>\r\n            <div className={s.auth_info}>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Почта:</p><p className=\"line-text\">{props.email}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Логин:</p><p className=\"line-text\">{props.login}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Дата регистрации:</p><p className=\"line-text\">{props.regDate}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">ID</p><p className=\"line-text\">{props.profileId}</p></div>\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                    <div className={s.add_photo_row}>\r\n                         <div className={s.photo_cont}></div>\r\n                         <p className={s.add_photo}>Добавить фото</p>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Имя' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Фамилия' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <textarea className=\"plain_textarea\" placeholder='Информация о вас' name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <button>Отправить</button>\r\n                    <NavLink to='/summary'>Пропустить</NavLink>\r\n                </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    {props.signUpState == 'signUpForm' ?\r\n                   <SignUpFormBlock\r\n                             isFetching={props.isFetching} sendSignUpRequest={props.sendSignUpRequest}\r\n                   /> : <ProfileForm profileId={props.profileId} email={props.email}\r\n                                     login={props.login} regDate={props.regDate}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSignUpState, signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n    sendSignUpRequest = (email,login,password) =>{\r\n      this.props.signUpThunkCreator(email,login,password)\r\n    }\r\n    render() {\r\n        return <SignUpBlock\r\n\r\n                isFetching={this.props.isFetching}\r\n                signUpState={this.props.signUpState}\r\n                profileId={this.props.profileId}\r\n                email={this.props.email}\r\n                login={this.props.login}\r\n                regDate={this.props.regDate}\r\n                sendSignUpRequest={this.sendSignUpRequest}\r\n\r\n\r\n\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isFetching: state.auth.isFetching,\r\n        signUpState: state.auth.signUpState,\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {setSignUpState, signUpThunkCreator})(SignUpContainer)","import React from 'react';\r\nimport s from './newFriends.module.scss';\r\nimport s2 from './../friends.module.scss'\r\nimport openfolder from '../../../../assets/icons/mail-open.svg'\r\nconst Loader = () =>{\r\n    return (<>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n            <div className={s2.loading_profile}> </div>\r\n        </>\r\n)\r\n}\r\n\r\nconst NewFriends = (props) => {\r\n        let acceptProposal = (userId, buttonId) =>{\r\n            props.acceptProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n        let denyProposal = (userId, buttonId) =>{\r\n            props.denyProposal(userId)\r\n            props.chanhgeButtonsState(buttonId)\r\n        }\r\n\r\n\r\n        let proposalsList = []\r\n        let buttonSelector = (userId, buttonId) =>{\r\n\r\n                if(props.buttonsState[buttonId] && props.buttonsState[buttonId].isFetching === false){\r\n                    return <div className={s.buttons_row}>\r\n                        <button className={s.deny} onClick={() =>{denyProposal(userId, buttonId)}}>Отказать</button>\r\n                        <button className={s.accept} onClick={()=>{acceptProposal(userId, buttonId)}}>Принять</button>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <p>Загрузка</p>\r\n                }\r\n\r\n\r\n        }\r\n\r\n        if(props.isFetching === false){\r\n            if(props.proposals !== \"no proposals\"){\r\n                let i = 0\r\n                proposalsList = props.proposals.map((proposal)=> <div className={s.line}>\r\n                    <div className={s.names_row}>\r\n                        <p className=\"name\">{proposal.name}</p>\r\n                        <p className=\"soname\">{proposal.soName}</p>\r\n                    </div>\r\n                    {buttonSelector(proposal.userId, i++)}\r\n                </div>)\r\n            }else{\r\n                proposalsList = <div className={s.noProposals}>\r\n                    <img src={openfolder} alt=\"\"/>\r\n                    <p>У вас нет заявок</p>\r\n                </div>\r\n            }\r\n        }\r\n        else {\r\n            proposalsList = <Loader />\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className={s.newFriends}>\r\n                <h2>Заявки в друзья:</h2>\r\n                {proposalsList}\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default NewFriends;","import React from 'react';\r\nimport NewFriends from \"./newFriends\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getProposalsList} from \"../../../../redux/selectors/profileselectors\";\r\nimport {getProposals, acceptProposal, denyProposal} from \"../../../../redux/profile-reducer\";\r\n\r\nclass NewFriendsContainer extends React.Component{\r\n    state = {\r\n        isFetching: false,\r\n        buttonsState: []\r\n    }\r\n    componentDidMount() {\r\n     this.setState({isFetching: true})\r\n     this.props.getProposals()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({isFetching: false})\r\n            if(typeof this.props.proposals == 'object'){\r\n                let listButtons = this.props.proposals.map((profile)=> ({isFetching: false}))\r\n                this.setState({buttonsState: listButtons})\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyButtonsState = {...this.state.buttonsState}\r\n        copyButtonsState[buttonId].isFetching = true\r\n        this.setState({buttonsState: copyButtonsState})\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <NewFriends proposals={this.props.proposals}\r\n                            acceptProposal={this.props.acceptProposal}\r\n                            denyProposal={this.props.denyProposal}\r\n                            isFetching={this.state.isFetching}\r\n                            buttonsState={this.state.buttonsState}\r\n                            chanhgeButtonsState={this.changeButtonState}\r\n\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n       proposals: getProposalsList(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProposals, acceptProposal, denyProposal})(NewFriendsContainer);","import React from 'react';\r\nimport s2 from '../friends.module.scss';\r\nimport s from './usersList.module.scss'\r\nimport {offsetText} from \"../../../../utils/textTransformation\";\r\nimport {Pagination} from \"../../../common/pagination\";\r\n\r\n\r\nconst LoadingProfile = () =>{\r\n    return <div className={s2.loading_profile}> </div>\r\n}\r\nconst UsersList = (props) => {\r\n    let postProposal = (id, buttonId) =>{\r\n       props.postProposal(id, props.currentPage)\r\n       props.changeButtonState(buttonId)\r\n\r\n    }\r\n\r\n    let deleteProposal = (id, buttonId) =>{\r\n       props.deleteProposal(id, props.currentPage)\r\n        props.changeButtonState(buttonId)\r\n    }\r\n\r\n\r\n    let buttonSelector = (status,id, buttonId) =>{\r\n        if(props.buttonsStates[buttonId] && props.buttonsStates[buttonId].isFetching === false){\r\n            switch (status){\r\n                case 'It is you': return\r\n                case 'proposal sent': return <p onClick={()=>{deleteProposal(id, buttonId)}}>Заявка отправлена</p>\r\n                case 'Your friend': return <p>Ваш друг</p>\r\n                case 'plain user':return <button onClick={()=>{postProposal(id, buttonId)}} className={s.add_button}>Добавить в друзья</button>\r\n                default: return\r\n            }\r\n        }\r\n        else {\r\n            return <p>Загрузка</p>\r\n        }\r\n\r\n\r\n    }\r\n    let i = 0\r\n    let profilesArr = props.profilesList.map((profile) =>\r\n            <div className={s2.line}>\r\n                <div className={s2.names_row}>\r\n                   <p className=\"name\">{profile.name}</p>\r\n                   <p className=\"soname\">{profile.soName}</p>\r\n                </div>\r\n                <div className={s2.company}>{profile.company}</div>\r\n                <div className={s2.description}><p className={s2.description_p}>{offsetText(profile.description)}</p></div>\r\n                {buttonSelector(profile.friendStatus, profile._id, i++)}\r\n            </div>\r\n    )\r\n\r\n    return  (\r\n            <div className={s.usersList}>\r\n                <h2>Список пользователей:</h2>\r\n                 <Pagination pages={profilesArr} pageSize={props.pageSize} totalPages={props.totalProfiles}\r\n                             pageChanger={props.getProfilesList} loader={<LoadingProfile />} getCurrentPage={props.getCurrentPage}/>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default UsersList;","import React from 'react';\r\nimport UsersList from \"./usersList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilesList, postProposal, deleteProposal, setProposals} from \"../../../../redux/profile-reducer\";\r\nimport {selectProfilesList, getTotalProfiles, getPageSize} from \"../../../../redux/selectors/profileselectors\"\r\nclass UsersListContainer extends React.Component{\r\n\r\n    state ={\r\n        listButtons: [],\r\n        profilesList: [],\r\n        currentPage: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProfilesList(1, this.props.pageSize)\r\n\r\n    }\r\n\r\n    getCurrentPage = (currentPage) =>{\r\n        this.setState({currentPage: currentPage})\r\n    }\r\n\r\n    changeButtonState = (buttonId) =>{\r\n        let copyListButtons = {...this.state.listButtons}\r\n        copyListButtons[buttonId].isFetching = true\r\n        this.setState({listButtons: copyListButtons})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props !== prevProps){\r\n            this.setState({profilesList: this.props.profilesList})\r\n            for(let i = 0; i < this.state.profilesList.length; i++){\r\n\r\n                if(this.state.profilesList[i] && this.props.profilesList[i]){\r\n\r\n                    if( this.state.profilesList[i].friendStatus !== this.props.profilesList[i].friendStatus){\r\n                        let copyListButtons = {...this.state.listButtons}\r\n                        copyListButtons[i].isFetching = false\r\n                        this.setState({listButtons: copyListButtons})\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            if(this.state.listButtons.length === 0){\r\n                let listButtons = this.props.profilesList.map((profile)=> ({isFetching: false}))\r\n                this.setState({listButtons: listButtons})\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setProposals([])\r\n    }\r\n\r\n    getProfilesList = (page) =>{\r\n        this.props.getProfilesList(page,this.props.pageSize)\r\n    }\r\n\r\n    render(){\r\n        return  (\r\n                <UsersList profilesList={this.props.profilesList}\r\n                           totalProfiles={this.props.totalProfiles}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.state.currentPage}\r\n                           getProfilesList={this.getProfilesList}\r\n                           postProposal={this.props.postProposal}\r\n                           deleteProposal={this.props.deleteProposal}\r\n                           changeButtonState={this.changeButtonState}\r\n                           buttonsStates={this.state.listButtons}\r\n                           getCurrentPage={this.getCurrentPage}\r\n                />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n      profilesList: selectProfilesList(state),\r\n      totalProfiles: getTotalProfiles(state),\r\n      pageSize: getPageSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProfilesList, postProposal, deleteProposal, setProposals})(UsersListContainer);","import React from 'react';\r\nimport s from './friends.module.scss';\r\nimport NewFriendsContainer from \"./newFriends/newFriendsContainer\";\r\nimport UsersListContainer from \"./usersList/usersListContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {FriendsPageLoader} from \"../../common/loadingSchemes\";\r\nconst FriendsPage = (props) => {\r\n    return  (\r\n            <div className=\"content\">\r\n                {props.isInitialized ?\r\n\r\n                        <div className=\"container\">\r\n                             <p>Добавляйте другие аккаунты в друзья, для совместной работы.</p>\r\n                            <NewFriendsContainer />\r\n                            <UsersListContainer />\r\n                         </div>\r\n\r\n                    : <FriendsPageLoader />}\r\n            </div>\r\n\r\n\r\n\r\n                    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(FriendsPage)","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\nimport Sidebar from \"./components/sidebar/sidebar.jsx\";\nimport NavbarContainer from './components/navbar/navbarContainer.jsx';\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport {Route } from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nimport FriendsPage from \"./components/profile/friends/friends\";\nimport {InitializingApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.InitializingApp()\n    }\n\n    render (){\n        return <div className=\"app-wrapper\">\n            <NavbarContainer />\n            <div className=\"row\">\n                <Sidebar />\n                {/* <Redirect exact from='/' to='/summary'  /> */}\n\n                <Route path='/summary'  render={ () => <Summary  /> } />\n                <Route path='/counters' render={() => <Counters />}/>\n                <Route path='/audiences' render={() => <Audiences />} />\n                <Route path='/profile' render={() => <ProfileContainer />} />\n                <Route path='/profilesettings' render={() => <ProfileSettings />} />\n                <Route exact path='/login'  render={()=> <LoginContainer />} />\n                <Route path='/signup' render={()=> <SignUpContainer />} />\n                <Route path='/friends' render={()=> <FriendsPage />} />\n\n\n            </div>\n        </div>\n    }\n}\n\n\nlet mapStateToProps = (state) =>{\n    return{\n\n    }\n}\n\n\nexport default connect(mapStateToProps, {InitializingApp})(App)\n\n\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\n\n    ReactDOM.render(\n            <BrowserRouter>\n            <Provider store={store}>  <App  /></Provider></BrowserRouter> ,\n            document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"graphic_graphic__3IRmr\",\"graphic_bottom\":\"graphic_graphic_bottom__1uDkm\",\"graphic_col_wr\":\"graphic_graphic_col_wr__t0l7L\",\"graphic_col\":\"graphic_graphic_col__N_PB4\",\"graphic_col_text\":\"graphic_graphic_col_text__3ayWZ\",\"graphic_col_day\":\"graphic_graphic_col_day__3MQq2\",\"graphic_col_number\":\"graphic_graphic_col_number__2f8zS\",\"graphic_cols\":\"graphic_graphic_cols__2ETRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3GKut\",\"name\":\"counterslist_name__26sx8\",\"domen\":\"counterslist_domen__28w4t\",\"dayusers\":\"counterslist_dayusers__1qIrK\",\"totalusers\":\"counterslist_totalusers__cwCPg\",\"status\":\"counterslist_status__1Nkgx\",\"loading_counter\":\"counterslist_loading_counter__2YVWV\",\"loading\":\"counterslist_loading__ODluH\",\"list\":\"counterslist_list__3QBS9\",\"noCounters\":\"counterslist_noCounters__1FWqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablehead\":\"dayusers_tablehead__1Lc84\",\"user_alias\":\"dayusers_user_alias__1YKwO\",\"user_country\":\"dayusers_user_country__3l0Wx\",\"user_time\":\"dayusers_user_time__3xRTE\",\"user_date\":\"dayusers_user_date__3WejA\",\"user_revenue\":\"dayusers_user_revenue___kRiq\",\"loadmore_button\":\"dayusers_loadmore_button__6nQO4\",\"loading_shortuser\":\"dayusers_loading_shortuser__3jw8s\",\"loading\":\"dayusers_loading__3tKjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"newFriends_line__QT2su\",\"names_row\":\"newFriends_names_row__2avSk\",\"buttons_row\":\"newFriends_buttons_row__23C0v\",\"deny\":\"newFriends_deny__2F1X5\",\"accept\":\"newFriends_accept__3r7sm\",\"newFriends\":\"newFriends_newFriends__1JkmK\",\"noProposals\":\"newFriends_noProposals__2uuG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortuser\":\"shortuser_shortuser__bnE4M\",\"user_alias\":\"shortuser_user_alias__3mR9I\",\"user_country\":\"shortuser_user_country__1CMLk\",\"user_time\":\"shortuser_user_time__1MOfy\",\"user_date\":\"shortuser_user_date__1dObS\",\"user_revenue\":\"shortuser_user_revenue__1ur_q\",\"dayuser_list\":\"shortuser_dayuser_list__zSlo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","module.exports = __webpack_public_path__ + \"static/media/done.40c37f81.svg\";","module.exports = __webpack_public_path__ + \"static/media/small-loading.320ffa1d.svg\";"],"sourceRoot":""}