{"version":3,"sources":["components/profile/login/login.module.scss","components/content/counters/counterslist/counterslist.module.scss","components/navbar/navbar.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","components/graphic/graphic.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","components/content/summary/dayusers/dayusers.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/content/summary/dayusers/shortuser/shortuser.module.scss","components/sidebar/sidebar.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/profile/signup/signup.module.scss","components/content/summary/daystat/daystat.module.scss","components/content/audiences/audienceslist/audienceslist.module.scss","serviceWorker.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/navbar/navbarContainer.jsx","components/content/summary/dayusers/shortuser/shortuser.jsx","components/content/summary/dayusers/dayusers.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","hoc/withAuthRedirect.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/haveaccess/haveaccess.jsx","components/profile/profilesettings/profilesettings.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","counterslistData","pageSize","totalCounters","currentPage","counterNameInput","counterDomenInput","isFetching","countersReducer","state","action","type","newCounter","id","name","domen","dayusers","allusers","status","inputName","value","countersData","data","items","totalPages","audiencelistData","description","counters","counterId","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","totalUsers","dayusersData","graphicData","day","summaryReducer","usersData","newCurrentPage","axiosInstance","axios","baseURL","profileAPI","put","headers","store","getState","auth","token","then","response","catch","error","console","warn","get","soName","company","setProfileInfo","profileReducer","authedInstance","authAPI","email","password","post","signUpAPI","login","profileId","regDate","isAuth","loginInput","emailInput","passwordInput","repeatPasswordInput","emailInputState","passwordInputState","loginFormState","isLoginButtonDisabled","signUpInputsDangers","loginDanger","emailDanger","passwordDanger","repeatPasswordDanger","passwordStrength","isSignUpButtonDisabled","signUpState","setProfileData","authProfileData","reloadInput","setToken","toggleIsFetching","setLoginFormState","formState","setSignUpInputDanger","inputDanger","setSignUpState","authReducer","userId","inputState","buttonState","stateCopy","strength","strengthText","buttonDisability","key","log","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","createStore","applyMiddleware","thunk","Sidebar","setOpacity","event","lineElem","targetCoords","getBoundingClientRect","procent","Math","round","clientY","top","abs","target","className","s","sidebar","sidebar_menu","onMouseOver","allelements","document","querySelectorAll","classList","contains","insertAdjacentHTML","add","setBorders","onmousemove","alllines","topBeam","querySelector","children","bottomBeam","elem","tagName","indexOf","call","parentNode","style","opacity","width","offsetWidth","xCoord","clientX","left","horizontProcent","nextline","nextSibling","prevline","previousSibling","onMouseOut","href","link_item","Navbar","props","navbar","logo","navbar_menu","to","activeClassName","active","profile","profileLogin","onClick","logout","NavbarContainer","getCookie","matches","cookie","RegExp","replace","decodeURIComponent","undefined","logOut","deleteProfileData","React","Component","connect","Shortuser","shortuser","user_alias","user_country","country","user_time","time","user_date","mongoDate","daysSeparate","split","date","timeSeparate","slice","join","seconds","user_revenue","revenue","LoadingShortuser","loading_shortuser","Dayusers","dayUserElements","map","dayuser","tablehead","loadmore_button","loadMore","DayusersContainer","loadNewPage","setTotalUsers","setUsers","dispatch","setUsersActionCreator","loadNewPageActionCreator","setCurrentPage","setTotalUsersActionCreator","Graphiccol","colheight","height","graphicvalue","graphic_col_wr","graphic_col_text","graphic_col_day","graphicday","graphic_col_number","graphic_col","Graphic","graphicColElements","coldata","graphic","graphic_cols","graphic_bottom","Daystat","day_stat","DaystatContainer","Summary","Addcounterblock","name_input","createRef","domen_input","addcounter_form","onChange","reloadCounterInput","current","placeholder","ref","counterDomen","addCounter","mapStateToProps","AccountNotExist","WithAuthRedirect","compose","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","Shortcounter","short_counter","work","notwork","LoadingCounters","loading_counter","Counterslist","countersElement","countersListData","_id","pagesCount","ceil","pages","push","pagesButtonsElements","page","changePage","table_head","list","CounterslistContainer","setCounters","setTotalCounters","Counters","Addaudienceblock","clicked","deleteCounter","getAttribute","countersOptionsElements","countersSelect","countersElements","audience_badge","counterid","version","viewBox","xmlns","d","fill","description_input","counters_select","add_form","nameInput","descriptionName","cols","rows","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","YourProfile","userNameEditMode","userSoNameEditMode","userCompanyEditMode","userDescriptionEditMode","reloadNameInput","e","setState","currentTarget","reloadSoNameInput","reloadCompanyInput","reloadDescriptionTextarea","nameHandler","putProfileInfo","soNameHandler","companyHandler","descriptionHandler","prevProps","prevState","snapshot","profile_cont","photo_col","photo_wr","info_col","info_inputs","onBlur","autoFocus","YourProfileContainer","getProfileInfo","newInfo","HaveAccess","LoginBlock","form","false_alert","loading_bar","input_wr","danger","input_danger","reloadEmailInput","setEmailInputState","toggleButtonDisability","reloadPasswordInput","setPasswordInputState","disabled","isButtonDisabled","sendLoginRequest","dont_reg_yet","LoginContainer","loginThunkCreator","setInputState","toggleLoginButtonDisability","message","Profile","ProfileContainer","SignUpForm","history","signup_form","test","reloadLoginInput","setLoginInputDanger","toggleSignUpButtonDisability","setEmailInputDanger","setPasswordStrength","setPasswordInputDanger","password_strength","reloadRepeatPasswordChange","setRepeatPasswordInputDanger","sendSignUpRequest","ProfileForm","profile_form_wr","auth_info","profile_form","add_photo_row","photo_cont","add_photo","SignUpBlock","reloadRepeatPasswordInput","SignUpContainer","signUpThunkCreator","App","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bcfb678.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"input_wr\":\"login_input_wr__3ZVSI\",\"input_danger\":\"login_input_danger__3KsA1\",\"danger\":\"login_danger__3q7pY\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3GKut\",\"name\":\"counterslist_name__26sx8\",\"domen\":\"counterslist_domen__28w4t\",\"dayusers\":\"counterslist_dayusers__1qIrK\",\"totalusers\":\"counterslist_totalusers__cwCPg\",\"status\":\"counterslist_status__1Nkgx\",\"loading_counter\":\"counterslist_loading_counter__2YVWV\",\"loading\":\"counterslist_loading__ODluH\",\"list\":\"counterslist_list__3QBS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__15BfM\",\"link_item\":\"navbar_link_item__2Qnum\",\"active\":\"navbar_active__uE8Zz\",\"profile\":\"navbar_profile__SnKZH\",\"logo\":\"navbar_logo__3hFZg\",\"navbar_menu\":\"navbar_navbar_menu__2_8AK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"graphic_graphic__3IRmr\",\"graphic_bottom\":\"graphic_graphic_bottom__1uDkm\",\"graphic_col_wr\":\"graphic_graphic_col_wr__t0l7L\",\"graphic_col\":\"graphic_graphic_col__N_PB4\",\"graphic_col_text\":\"graphic_graphic_col_text__3ayWZ\",\"graphic_col_day\":\"graphic_graphic_col_day__3MQq2\",\"graphic_col_number\":\"graphic_graphic_col_number__2f8zS\",\"graphic_cols\":\"graphic_graphic_cols__2ETRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__2Mkqz\",\"name\":\"shortcounter_name__2XGTE\",\"domen\":\"shortcounter_domen__13SoB\",\"dayusers\":\"shortcounter_dayusers__3LOqd\",\"totalusers\":\"shortcounter_totalusers__9w9vy\",\"status\":\"shortcounter_status__2OofU\",\"work\":\"shortcounter_work__1ylaG\",\"notwork\":\"shortcounter_notwork__3MW4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablehead\":\"dayusers_tablehead__1Lc84\",\"user_alias\":\"dayusers_user_alias__1YKwO\",\"user_country\":\"dayusers_user_country__3l0Wx\",\"user_time\":\"dayusers_user_time__3xRTE\",\"user_date\":\"dayusers_user_date__3WejA\",\"user_revenue\":\"dayusers_user_revenue___kRiq\",\"loadmore_button\":\"dayusers_loadmore_button__6nQO4\",\"loading_shortuser\":\"dayusers_loading_shortuser__3jw8s\",\"loading\":\"dayusers_loading__3tKjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortuser\":\"shortuser_shortuser__bnE4M\",\"user_alias\":\"shortuser_user_alias__3mR9I\",\"user_country\":\"shortuser_user_country__1CMLk\",\"user_time\":\"shortuser_user_time__1MOfy\",\"user_date\":\"shortuser_user_date__1dObS\",\"user_revenue\":\"shortuser_user_revenue__1ur_q\",\"dayuser_list\":\"shortuser_dayuser_list__zSlo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"signup_signup_form__7HJVd\",\"dont_reg_yet\":\"signup_dont_reg_yet__239zS\",\"input_wr\":\"signup_input_wr__WIkn0\",\"input_danger\":\"signup_input_danger__2AIPg\",\"password_strength\":\"signup_password_strength__peCEw\",\"smoothappearance\":\"signup_smoothappearance__4VAwc\",\"tooWeak\":\"signup_tooWeak__Vo_W9\",\"weak\":\"signup_weak__bx5Hx\",\"medium\":\"signup_medium__1OxDa\",\"good\":\"signup_good__2KcH1\",\"loading_bar\":\"signup_loading_bar__3cVFs\",\"loading\":\"signup_loading__1IMnh\",\"active\":\"signup_active__3mlkR\",\"auth_info\":\"signup_auth_info__eHPph\",\"profile_form_wr\":\"signup_profile_form_wr__3zHGM\",\"profile_form\":\"signup_profile_form__hgX0S\",\"photo_cont\":\"signup_photo_cont__-6OF5\",\"add_photo_row\":\"signup_add_photo_row__AGbTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n\r\n        counterslistData: [],\r\n        pageSize: 5,\r\n        totalCounters: '',\r\n        currentPage: 1,\r\n        counterNameInput: '',\r\n        counterDomenInput: '',\r\n        isFetching: ''\r\n\r\n\r\n\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: 5,\r\n                name: state.counterNameInput,\r\n                domen: state.counterDomenInput,\r\n                dayusers: 0,\r\n                allusers: 0,\r\n                status: 'work'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [...state.counterslistData, newCounter],\r\n                counterNameInput: '',\r\n                counterDomenInput: ''\r\n            }\r\n        }\r\n\r\n        case \"RELOAD-COUNTER-INPUT\":{\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        }\r\n        case \"SET-COUNTERS\":{\r\n            return {\r\n                ...state,\r\n                counterslistData: action.countersData.data.items\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\":{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case 'SET-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                totalCounters: action.totalCounters.data.totalPages\r\n            }\r\n        }\r\n        case 'TOGGLE-IS-FETCHING':{\r\n\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = () =>({type: 'ADD-COUNTER'})\r\nexport const setCounters = (countersData) =>({\r\n    type: 'SET-COUNTERS',\r\n    countersData: countersData\r\n\r\n})\r\nexport const setCurrentPage = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalCounters = (totalCounters) =>({\r\n    type: 'SET-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\nexport const reloadCounterInput = (value, inputName) =>({\r\n    type: 'RELOAD-COUNTER-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\n\r\nexport const toggleIsFetching = (isFetching) =>({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","let initialState = {\r\n    dayusersData: [],\r\n    pageSize: 5,\r\n    totalUsers: 17,\r\n    currentPage: 1,\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"SET-USERS\":{\r\n\r\n            if(state.dayusersData.length === 0){\r\n                return{\r\n                    ...state,\r\n                    dayusersData: [...state.dayusersData,  ...action.usersData],\r\n                    currentPage: state.currentPage + 1\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        case \"LOAD-NEW-PAGE\":{\r\n            let newCurrentPage = state.currentPage + 1\r\n            return {\r\n\r\n                ...state,\r\n                dayusersData: [...state.dayusersData, ...action.usersData],\r\n                currentPage: newCurrentPage\r\n\r\n            }\r\n\r\n        }\r\n        case \"SET-TOTAL-USERS\":{\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUsersActionCreator = (usersData) =>({\r\n    type: \"SET-USERS\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const loadNewPageActionCreator = (usersData) =>({\r\n    type: \"LOAD-NEW-PAGE\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalUsersActionCreator = (totalUsers) =>({\r\n    type: 'SET-TOTAL-USERS',\r\n    totalUsers: totalUsers\r\n})\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI} from '../api/profile-api'\r\n\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SET-PROFILE-INFO':\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\n\r\n\r\nexport const getProfileInfo = () =>{\r\n    return (dispatch) =>{\r\n        profileAPI.getProfileInfo()\r\n                .then(response =>{\r\n                    dispatch(setProfileInfo(response))\r\n                })\r\n    }\r\n}\r\n\r\nexport const putProfileInfo = (data) =>{\r\n    return (dispatch) =>{\r\n        profileAPI.putProfileInfo(data)\r\n                .then(response =>{\r\n                    dispatch(setProfileInfo(response.newInfo))\r\n                })\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    }\r\n\r\n}","\r\nimport {authAPI, signUpAPI} from \"../api/auth-api\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    loginInput: '',\r\n    emailInput: '',\r\n    passwordInput: '',\r\n    repeatPasswordInput: '',\r\n    emailInputState: 'normal',\r\n    passwordInputState: 'normal',\r\n    isFetching: false,\r\n    loginFormState: 'normal',\r\n    isLoginButtonDisabled: false,\r\n    signUpInputsDangers: {\r\n        loginDanger:'',\r\n        emailDanger:'',\r\n        passwordDanger: '',\r\n        repeatPasswordDanger: ''\r\n    },\r\n    passwordStrength: ['none',''],\r\n    isSignUpButtonDisabled: false,\r\n    signUpState: 'signUpForm'\r\n\r\n\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"RELOAD_INPUT\":\r\n\r\n            return {\r\n                ...state,\r\n                [action.inputName]: action.value\r\n            }\r\n        case \"SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'SET_LOGIN_INPUT_STATE':\r\n            return{\r\n                ...state,\r\n                [action.inputName]: action.inputState\r\n        }\r\n        case 'TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'SET_LOGIN_FORM_STATE':\r\n            return {\r\n                ...state,\r\n                loginFormState: action.formState\r\n            }\r\n        case 'TOGGLE_LOGIN_BUTTON_DISABILITY':\r\n            return {\r\n                ...state,\r\n                isLoginButtonDisabled: action.buttonState\r\n            }\r\n        case 'SET_SIGNUP_INPUT_DANGER':\r\n            let stateCopy = {...state}\r\n            stateCopy.signUpInputsDangers = {...state.signUpInputsDangers}\r\n            stateCopy.signUpInputsDangers[action.inputName] = action.inputDanger\r\n            return stateCopy\r\n        case 'SET_PASSWORD_STRENGTH':\r\n\r\n            return {\r\n                ...state,\r\n                passwordStrength: [action.strength, action.strengthText]\r\n\r\n            }\r\n        case 'TOGGLE_SIGNUP_BUTTON_DISABILITY':\r\n            let buttonDisability = false;\r\n            for(let key in state.signUpInputsDangers){\r\n                if(state.signUpInputsDangers[key] !== ''){\r\n                    console.log(state.signUpInputsDangers[key])\r\n                    buttonDisability = true\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isSignUpButtonDisabled: buttonDisability\r\n            }\r\n        case 'TOGGLE_SIGNUP_STATE':\r\n            return {\r\n                ...state,\r\n                signUpState: action.signUpState\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const reloadInput = (inputName, value) => ({\r\n    type: 'RELOAD_INPUT',\r\n    inputName: inputName,\r\n    value: value\r\n})\r\n\r\nexport const setToken = (token) =>({\r\n    type: 'SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\nexport const setLoginFormState = (formState) =>({\r\n    type: 'SET_LOGIN_FORM_STATE',\r\n    formState: formState\r\n})\r\n\r\nexport const toggleLoginButtonDisability = (buttonState) => ({\r\n    type: 'TOGGLE_LOGIN_BUTTON_DISABILITY',\r\n    buttonState: buttonState\r\n})\r\n\r\nexport const setSignUpInputDanger = (inputName, inputDanger) => ({\r\n    type: 'SET_SIGNUP_INPUT_DANGER',\r\n    inputName: inputName,\r\n    inputDanger: inputDanger\r\n})\r\n\r\nexport const setPasswordStrength = (strength, strengthText) =>({\r\n    type: 'SET_PASSWORD_STRENGTH',\r\n    strength: strength,\r\n    strengthText: strengthText\r\n})\r\nexport const toggleSignUpButtonDisability = () =>({\r\n    type: 'TOGGLE_SIGNUP_BUTTON_DISABILITY'\r\n})\r\nexport const setSignUpState = (signUpState) =>{return {\r\n    type: 'TOGGLE_SIGNUP_STATE',\r\n    signUpState: signUpState\r\n}}\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message == \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=360000'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=360000'\r\n                    authAPI.getAuthInfo()\r\n                            .then(response => {\r\n                                console.log(response)\r\n                                dispatch(setProfileData(response))\r\n                            })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setLoginFormState('false_alert'))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            dispatch(toggleIsFetching(false))\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(setSignUpState('userInfoForm'))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message == \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                authAPI.getAuthInfo()\r\n                                        .then(response => {\r\n                                            console.log(response)\r\n                                            dispatch(setProfileData(response))\r\n                                        })\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch(toggleIsFetching(false))\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(setSignUpInputDanger('emailDanger','Данная почта уже зарегистрирована'))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(setSignUpInputDanger('loginDanger','Данный логин уже зарегистрирован'))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport countersReducer from \"./counters-reducer\";\r\nimport audiencesReducer from \"./audiences-reducer\";\r\nimport summaryReducer from \"./summary-reducer\";\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from 'redux-thunk'\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\nwindow.store = store\r\nexport default store","import React from 'react';\r\nimport s from './sidebar.module.scss';\r\n\r\nconst Sidebar = () =>{\r\n    let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        console.log(event.target)\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.sidebar} >\r\n             <div className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Сводка</a>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Посетители</a>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Конверсии</a>\r\n\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let logout = () =>{\r\n      props.logout()\r\n    }\r\n    return  (\r\n\r\n\r\n        <nav className={s.navbar}>\r\n            <div className={s.logo}>\r\n                Трекер\r\n            </div>\r\n\r\n            <div className={s.navbar_menu}>\r\n\r\n                <NavLink className={s.link_item} to=\"/summary\" activeClassName={s.active}>Общее</NavLink>\r\n                <NavLink className={s.link_item} to=\"/counters\" activeClassName={s.active}>Счётчики</NavLink>\r\n                <NavLink className={s.link_item} to=\"/audiences\" activeClassName={s.active}>Аудитории</NavLink>\r\n\r\n            </div>\r\n            <div className={s.profile}>\r\n                <div className='dropdown'>\r\n\r\n                    <NavLink to=\"/profile\" className={s.link_item}>{props.isAuth == true ? props.profileLogin : \"Профиль\" }</NavLink>\r\n                    <div className='dropdown_block'>\r\n                        <NavLink to=\"/profilesettings\" className='dropdown_link' activeClassName='active'>Настройки</NavLink>\r\n                        <NavLink to=\"/share\" className='dropdown_link' activeClassName='active'>Поделиться</NavLink>\r\n                        {props.isAuth == true ? <div className=\"dropdown_link\" onClick={logout}>Выйти</div> : <NavLink to=\"/login\" className='dropdown_link' activeClassName='active'>Войти</NavLink>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </nav>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {setToken, setProfileData, deleteProfileData} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from '../../api/auth-api'\r\n\r\nclass NavbarContainer extends React.Component {\r\n\r\n    getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    logOut = () =>{\r\n        document.cookie = 'token='+this.props.token+'; max-age=-1'\r\n        document.cookie = 'email='+this.props.emailInput+'; max-age=-1'\r\n        document.cookie = 'password='+this.props.passwordInput+'; max-age=-1'\r\n        this.props.deleteProfileData()\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let getAuth = () =>{\r\n                   authAPI.getAuthInfo().then(response => {\r\n                     this.props.setProfileData(response)\r\n                    })\r\n        }\r\n\r\n        if (this.getCookie('email') && this.getCookie('password')){\r\n            authAPI.postLoginInfo(this.getCookie('email'), this.getCookie('password')).then(response => {\r\n                        this.props.setToken(response.token)\r\n                        getAuth()\r\n                    })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Navbar isAuth={this.props.isAuth}\r\n                       profileLogin={this.props.profileLogin}\r\n                       logout={this.logOut}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login\r\n    }\r\n}\r\n\r\n\r\nexport default NavbarContainer = connect(mapStateToProps, {setToken,setProfileData, deleteProfileData})(NavbarContainer)","import React from 'react';\r\nimport s from './shortuser.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Shortuser = (props) =>{\r\n    const mongoDate = (mongoDate) => {\r\n        let daysSeparate = mongoDate.split('T')\r\n        let date = daysSeparate[0];\r\n        let timeSeparate = daysSeparate[1];\r\n        timeSeparate = timeSeparate.split(':')\r\n        let time = timeSeparate.slice(0,2).join(':')\r\n        let seconds = timeSeparate[2].replace('Z','')\r\n        return{\r\n            date: date,\r\n            time: time,\r\n            seconds: seconds\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n\r\n                <NavLink to={'/users/'+props.id} className={s.shortuser}>\r\n                    <div className={s.user_alias}>\r\n\r\n                    </div>\r\n                    <div className={s.user_country}><p>{props.country}</p></div>\r\n                    <div className={s.user_time}><p>{props.time}</p></div>\r\n                    <div className={s.user_date}><p>{mongoDate(props.date).time}</p></div>\r\n                    <div className={s.user_revenue}><p>{props.revenue}</p></div>\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Shortuser;","import React from 'react';\r\nimport s from './dayusers.module.scss';\r\nimport Shortuser from \"./shortuser/shortuser\";\r\n\r\n\r\nconst LoadingShortuser = () =>{\r\n    return (\r\n            <div className={s.loading_shortuser}>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Dayusers = (props) => {\r\n\r\n\r\n\r\n    let dayusers = props.dayusers;\r\n\r\n    let dayUserElements = [];\r\n    let i = 0\r\n    if(dayusers.length == 0){\r\n        while(i <= 5){\r\n            dayUserElements[i] = <LoadingShortuser />\r\n            i++\r\n        }\r\n    }\r\n    else{\r\n        dayUserElements = dayusers.map(dayuser => <Shortuser id={dayuser.id} country={dayuser.country} time={dayuser.time} date={dayuser.date} revenue={dayuser.revenue} />)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className={s.tablehead}>\r\n                    <div className={s.user_alias}><p>Псевдоним</p></div>\r\n                    <div className={s.user_country}><p>Страна</p></div>\r\n                    <div className={s.user_time}><p>Время на сайте</p></div>\r\n                    <div className={s.user_date}><p>Дата посещения</p></div>\r\n                    <div className={s.user_revenue}><p>Доход</p></div>\r\n                </div>\r\n                <div className=\"dayuser_list\">\r\n                    {dayUserElements}\r\n                    <button className={s.loadmore_button+ \" attractive-button\"} onClick={() => {props.loadMore()}}>Загрузить ещё</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dayusers;","import React from \"react\";\r\nimport Dayusers from \"./dayusers\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersActionCreator, loadNewPageActionCreator,setCurrentPageActionCreator, setTotalUsersActionCreator} from '../../../../redux/summary-reducer'\r\nimport * as axios from \"axios\";\r\n\r\n\r\nclass DayusersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('http://nikrainev.ru:3000/auth/me', {headers:{\"Authorization\": \"Bearer \"+ this.props.token}})\r\n                .then(response => {\r\n\r\n                })\r\n\r\n        axios.get('http://195.161.62.108:3000/users').then(response =>{\r\n            this.props.setTotalUsers(response.data.totalPages)\r\n        })\r\n\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=1&limit=5`).then(response =>{\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n\r\n    }\r\n\r\n    loadMore = ()=>{\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.loadNewPage(response.data.items)\r\n\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return <Dayusers\r\n                dayusers={this.props.dayusers}\r\n                loadMore={this.loadMore}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dayusers: state.summaryPage.dayusersData,\r\n        currentPage: state.summaryPage.currentPage,\r\n        totalUsers: state.summaryPage.totalUsers,\r\n        pageSize: state.summaryPage.pageSize,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n     setUsers: (usersData) => {\r\n         dispatch(setUsersActionCreator(usersData))\r\n     },\r\n     loadNewPage: (usersData) =>{\r\n         dispatch(loadNewPageActionCreator(usersData))\r\n     },\r\n     setCurrentPage: () =>{\r\n         dispatch(setCurrentPageActionCreator())\r\n     },\r\n     setTotalUsers:(totalUsers) =>{\r\n         dispatch(setTotalUsersActionCreator(totalUsers))\r\n     }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default  DayusersContainer = connect(mapStateToProps, mapDispatchToProps)(DayusersContainer)\r\n\r\n","import React from 'react';\r\nimport s from '../graphic.module.scss';\r\nconst Graphiccol = (props) => {\r\n    let colheight = {\r\n     height: props.graphicvalue+'px'\r\n    }\r\n    return(\r\n            <div className={s.graphic_col_wr}>\r\n                <div className={s.graphic_col_text}>\r\n                    <p className={s.graphic_col_day}>{props.graphicday}</p>\r\n                    <p className={s.graphic_col_number}>{props.graphicvalue}</p>\r\n                </div>\r\n                <div className={s.graphic_col} style={colheight}></div>\r\n            </div>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport s from './graphic.module.scss';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport Shortuser from \"../content/summary/dayusers/shortuser/shortuser\";\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <div className={s.graphic}>\r\n                <div className={s.graphic_cols}>\r\n                    {graphicColElements}\r\n                </div>\r\n              <div className={s.graphic_bottom}>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className={s.day_stat}>\r\n                            <p>Клики<br />120</p>\r\n                            <p>Пользователи<br />65</p>\r\n                            <p>Конверсии<br />2</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n\r\n                            <Graphic graphicData={props.graphicData}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        graphicData: state.summaryPage.graphicData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst DaystatContainer = connect(mapStateToProps, mapDispatchToProps())(Daystat)\r\n\r\nexport default DaystatContainer;","import React from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nconst Summary = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n\r\n\r\n                <DaystatContainer/>\r\n                <DayusersContainer/>\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Summary;","import React from 'react';\r\nimport s from '../addcounter.module.scss';\r\n\r\n\r\nconst Addcounterblock = (props) =>{\r\n    let name_input = React.createRef();\r\n    let domen_input = React.createRef();\r\n\r\n    let Addcounter = () =>{\r\n       if(props.counterName !=='' && props.counterDomen !==''){\r\n           props.addCounter();\r\n       }\r\n    };\r\n\r\n    let onNameInputChange = () =>{\r\n        props.reloadCounterInput(name_input.current.value,'counterNameInput')\r\n    }\r\n    let onDomenInputChange = () =>{\r\n        props.reloadCounterInput(domen_input.current.value,'counterDomenInput')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\"><p>Добавьте ваш счётчик</p></div>\r\n          <div className=\"col-6\">\r\n              <div className={s.addcounter_form}>\r\n                  <input onChange={onNameInputChange} type=\"text\" value={props.counterName} placeholder='Название счётчика' ref={name_input}/>\r\n                  <input onChange={onDomenInputChange} type=\"text\" value={props.counterDomen} placeholder='Домен сайта' ref={domen_input}/>\r\n                  <button className='control_button' onClick={Addcounter}>Добавить счётчик</button>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Addcounterblock;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {NavLink, Route, withRouter, Link} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AccountNotExist = (props) =>{\r\n    return <div className=\"gotologinblock\">\r\n\r\n        <h1>Войдите в аккаунт</h1>\r\n        <Link className=\"control_button\" to='/login'>Войти</Link>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n const WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isAuth) return <Component {...props}/>\r\n        else return <AccountNotExist/>\r\n    }\r\n\r\n    let ConnectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedWithAuthRedirect\r\n\r\n}\r\nexport default WithAuthRedirect","import React from \"react\";\r\n\r\nimport {addCounter, reloadCounterInput} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\n\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        counterName: state.countersPage.counterNameInput,\r\n        counterDomen: state.countersPage.counterDomenInput\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {reloadCounterInput, addCounter}), WithAuthRedirect)(Addcounterblock);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counters/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\n\r\nconst LoadingCounters = ()=>{\r\n    return(\r\n            <div className=\"list\">\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n            </div>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nconst Counterslist = (props) => {\r\n\r\n       let counters =  props.countersListData\r\n       let countersElement = []\r\n\r\n       countersElement = counters.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}/> )\r\n\r\n\r\n\r\n       let pagesCount = Math.ceil(props.totalCounters / props.pageSize)\r\n       let pages =[]\r\n       for(let i=1; i<=pagesCount; i++){\r\n           pages.push(i)\r\n       }\r\n       let pagesButtonsElements = pages.map(page => <span className={props.currentPage === page && \"current-page\"}\r\n                                                          onClick={() => {props.changePage(page)}}>{page}</span>)\r\n\r\n\r\n\r\n       return <div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Статус</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.list}>\r\n\r\n                       {props.isFetching ? <LoadingCounters /> : countersElement}\r\n                   </div>\r\n                   <div className=\"pages-buttons\">\r\n                       {pagesButtonsElements}\r\n                   </div>\r\n               </div>\r\n\r\n\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCounters, setCurrentPage, setTotalCounters,toggleIsFetching} from \"../../../../redux/counters-reducer\";\r\nimport * as axios from \"axios\";\r\n\r\nclass CounterslistContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`http://195.161.62.108:3000/counters?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.setCounters(response)\r\n            this.props.setTotalCounters(response)\r\n            this.props.toggleIsFetching(false)\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n    changePage = (page) =>{\r\n\r\n\r\n        this.props.setCurrentPage(page)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`http://195.161.62.108:3000/counters?page=${page}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.setCounters(response)\r\n            this.props.toggleIsFetching(false)\r\n        })\r\n\r\n    }\r\n    render(){\r\n      return <Counterslist\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              currentPage={this.props.currentPage}\r\n              isFetching={this.props.isFetching}\r\n              changePage={this.changePage}\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n        pageSize: state.countersPage.pageSize,\r\n        totalCounters: state.countersPage.totalCounters,\r\n        currentPage: state.countersPage.currentPage,\r\n        isFetching: state.countersPage.isFetching\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default CounterslistContainer = connect(mapStateToProps, {setCounters, setCurrentPage,setTotalCounters,toggleIsFetching})(CounterslistContainer)\r\n\r\n","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\n\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n             <Addcounter/>\r\n            <CounterslistContainer />\r\n\r\n\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Counters;","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <div className=\"content\">\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\n\r\nclass YourProfile extends React.Component{\r\n\r\n\r\n    state = {\r\n        userNameEditMode: false,\r\n        userSoNameEditMode: false,\r\n        userCompanyEditMode: false,\r\n        userDescriptionEditMode: false,\r\n        name: this.props.name,\r\n        soName: this.props.soName,\r\n        company: this.props.company,\r\n        description: this.props.description\r\n    }\r\n\r\n    reloadNameInput =(e) =>{\r\n        this.setState({name: e.currentTarget.value})\r\n    }\r\n    reloadSoNameInput =(e) =>{\r\n        this.setState({soName: e.currentTarget.value})\r\n    }\r\n    reloadCompanyInput =(e) =>{\r\n        this.setState({company: e.currentTarget.value})\r\n    }\r\n    reloadDescriptionTextarea =(e) =>{\r\n        this.setState({description: e.currentTarget.value})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    nameHandler = (inputState) =>{\r\n     this.setState({userNameEditMode: inputState})\r\n        if(!inputState && this.state.name !== this.props.name){\r\n          this.props.putProfileInfo({name: this.state.name})\r\n        }\r\n\r\n    }\r\n\r\n    soNameHandler = (inputState) =>{\r\n     this.setState({userSoNameEditMode: inputState})\r\n        if(!inputState && this.state.soName !== this.props.soName){\r\n            this.props.putProfileInfo({soName: this.state.soName})\r\n        }\r\n    }\r\n\r\n    companyHandler = (inputState) =>{\r\n    this.setState({userCompanyEditMode: inputState})\r\n        if(!inputState && this.state.company !== this.props.company){\r\n            this.props.putProfileInfo({company: this.state.company})\r\n        }\r\n    }\r\n\r\n    descriptionHandler = (inputState) =>{\r\n    this.setState({userDescriptionEditMode: inputState})\r\n        if(!inputState && this.state.description !== this.props.description){\r\n            this.props.putProfileInfo({description: this.state.description})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n         this.setState({name: this.props.name,\r\n             soName: this.props.soName,\r\n             company: this.props.company,\r\n             description: this.props.description})\r\n        }\r\n    }\r\n\r\n    render (){\r\n        console.log('render')\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <div className={s.photo_wr}>\r\n                                <p>Добавить фото</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <div  onClick={() =>{this.nameHandler(true)}}  className=\"withedit-block\">\r\n                                    {this.state.userNameEditMode\r\n                                            ?\r\n                                            <input onChange={this.reloadNameInput} ref={this.name_input} type=\"text\" className='plain_input'\r\n                                                   value={this.state.name} placeholder='Введите ваше имя'\r\n                                                   onBlur={() => {this.nameHandler(false)}} autoFocus={true}/>\r\n                                            :\r\n                                            <div className=\"withedit-current\">{this.props.name}</div>\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                                <div onClick={() =>{this.soNameHandler(true)}} className=\"withedit-block\">\r\n                                    {this.state.userSoNameEditMode\r\n                                            ?\r\n                                            <input onChange={this.reloadSoNameInput} type=\"text\" className='plain_input'\r\n                                                   placeholder='Введите вашу фамилию' value={this.state.soName}\r\n                                                   onBlur={() => {this.soNameHandler(false)}} autoFocus={true}/>\r\n                                            :\r\n                                            <div className=\"withedit-current\">{this.props.soName}</div>\r\n                                    }\r\n\r\n\r\n\r\n                                </div>\r\n                                <div onClick={() =>{this.companyHandler(true)}} className=\"withedit-block\">\r\n                                    {this.state.userCompanyEditMode\r\n                                            ?\r\n                                            <input onChange={this.reloadCompanyInput} type=\"text\" className='plain_input'\r\n                                                   placeholder='Ваша компания' value={this.state.company}\r\n                                                   onBlur={() => {this.companyHandler(false)}} autoFocus={true}/>\r\n                                            :\r\n                                            <div className=\"withedit-current\">{this.props.company}</div>\r\n                                    }\r\n\r\n                                </div>\r\n                                <div onClick={() =>{this.descriptionHandler(true)}} className=\"withedit-block\">\r\n                                    {this.state.userDescriptionEditMode\r\n                                            ?\r\n                                            <textarea onChange={this.reloadDescriptionTextarea}\r\n                                                      ref={this.description_input}\r\n                                                      className='plain_textarea' value={this.state.description}\r\n                                                      id=\"\" cols=\"30\"\r\n                                                      rows=\"10\" placeholder='Добавьте описание о себе'\r\n                                                      onBlur={() => {this.descriptionHandler(false)}} autoFocus={true}> </textarea>\r\n                                            :\r\n                                            <div className=\"withedit-current\">{this.props.description}</div>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                            <button className='control_button'>Сохранить</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React from 'react';\r\n\r\nconst HaveAccess = (props) =>{\r\n    return(\r\n            <div className=\"container\">\r\n              <p>hj</p>\r\n            </div>\r\n    )\r\n}\r\nexport default HaveAccess;","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nconst ProfileSettings = () =>{\r\n    return(\r\n            <div className=\"content\">\r\n               <YourProfileContainer />\r\n               <HaveAccess />\r\n            </div>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings );","import React from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst LoginBlock = (props) => {\r\n    let emailInput = React.createRef()\r\n    let passwordInput = React.createRef()\r\n\r\n    let onSendClick = () =>{\r\n        if(emailInput.current.value == ''){\r\n            props.setEmailInputState('empty_danger')\r\n        }\r\n        else if(passwordInput.current.value == ''){\r\n            props.setPasswordInputState('empty_danger')\r\n        }\r\n        else{\r\n\r\n            props.sendLoginRequest()\r\n\r\n        }\r\n\r\n        props.toggleButtonDisability(true)\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    let onEmailChange = () =>{\r\n        props.reloadEmailInput(emailInput.current.value)\r\n        props.setEmailInputState('normal')\r\n        props.setLoginFormState('normal')\r\n        props.toggleButtonDisability(false)\r\n    }\r\n\r\n    let onPasswordChange = () =>{\r\n        props.reloadPasswordInput(passwordInput.current.value)\r\n        props.setPasswordInputState('normal')\r\n        props.setLoginFormState('normal')\r\n        props.toggleButtonDisability(false)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n          <div className=\"container\">\r\n\r\n\r\n\r\n              <div className=\"login_block\">\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <div className={s.false_alert}><p>{props.loginFormState === 'normal' ? ' ' : 'Невереные данные'}</p></div>\r\n                              <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                              <div className={props.emailInputState == 'normal' ? s.input_wr : s.input_wr + \" \" + s.danger}>\r\n                                  <p className={s.input_danger}>Введите почту</p>\r\n                                  <input type=\"text\" placeholder=\"Введите почту\"\r\n                                         onChange={onEmailChange}\r\n                                         value={props.emailInput}\r\n                                         ref={emailInput}/>\r\n                              </div>\r\n                              <div className={props.passwordInputState == 'normal' ? s.input_wr : s.input_wr + \" \" + s.danger}>\r\n                                  <p className={s.input_danger}>Введите пароль</p>\r\n                                  <input type=\"password\" placeholder=\"Введите пароль\"\r\n                                         onChange={onPasswordChange}\r\n                                         value={props.passwordInput}\r\n                                         ref={passwordInput}/>\r\n                              </div>\r\n                              <button disabled={props.isButtonDisabled} onClick={onSendClick}>Отправить</button>\r\n                              <p className={s.dont_reg_yet}>Ещё нет аккаунта? <NavLink to='signup'>Зарегистрируйтесь</NavLink></p>\r\n                          </div>\r\n                          :\r\n                          <div>Вы авторизованы</div>\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {setProfileData, reloadInput, setToken, setInputState,\r\n    toggleIsFetching, setLoginFormState, toggleLoginButtonDisability, loginThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    sendLoginRequest = () => {\r\n        this.props.loginThunkCreator(this.props.emailInput, this.props.passwordInput)\r\n    }\r\n    reloadEmailInput = (value) =>{\r\n        this.props.reloadInput('emailInput',value)\r\n    }\r\n    reloadPasswordInput = (value) =>{\r\n        this.props.reloadInput('passwordInput',value)\r\n    }\r\n\r\n    setEmailInputState = (value) =>{\r\n        this.props.setInputState('emailInputState',value)\r\n    }\r\n    setPasswordInputState = (value) =>{\r\n        this.props.setInputState('passwordInputState',value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n            <LoginBlock emailInput={this.props.emailInput}\r\n                       passwordInput={this.props.passwordInput}\r\n                       emailInputState={this.props.emailInputState}\r\n                       passwordInputState={this.props.passwordInputState}\r\n                       isFetching={this.props.isFetching}\r\n                       loginFormState={this.props.loginFormState}\r\n                       isButtonDisabled={this.props.isLoginButtonDisabled}\r\n                       isAuth={this.props.isAuth}\r\n                       reloadEmailInput={this.reloadEmailInput}\r\n                       reloadPasswordInput={this.reloadPasswordInput}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n                       setEmailInputState={this.setEmailInputState}\r\n                       setPasswordInputState={this.setPasswordInputState}\r\n                       setLoginFormState={this.props.setLoginFormState}\r\n                       toggleButtonDisability={this.props.toggleLoginButtonDisability}\r\n\r\n\r\n\r\n\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        emailInput: state.auth.emailInput,\r\n        passwordInput: state.auth.passwordInput,\r\n        isAuth: state.auth.isAuth,\r\n        emailInputState: state.auth.emailInputState,\r\n        passwordInputState: state.auth.passwordInputState,\r\n        isFetching: state.auth.isFetching,\r\n        loginFormState: state.auth.loginFormState,\r\n        isLoginButtonDisabled: state.auth.isLoginButtonDisabled\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {setProfileData,reloadInput,setToken,setInputState,\r\n            toggleIsFetching,setLoginFormState, toggleLoginButtonDisability, loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default  ProfileContainer = connect(mapStateToProps)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SignUpForm = (props) =>{\r\n    let loginInput = React.createRef()\r\n    let emailInput = React.createRef()\r\n    let passwordInput = React.createRef()\r\n    let repeatPasswordInput = React.createRef()\r\n    console.log(window.history.state)\r\n    let onSendClick = () =>{\r\n\r\n      if(loginInput.current.value === ''){\r\n          props.setLoginInputDanger('Введите Логин')\r\n\r\n      }\r\n      else if(/^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(loginInput.current.value) === false ){\r\n          props.setLoginInputDanger('Некорректный логин')\r\n      }\r\n      if(emailInput.current.value === ''){\r\n          props.setEmailInputDanger('Введите Почту')\r\n      }\r\n      else if(/^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(emailInput.current.value) === false){\r\n          props.setEmailInputDanger('Почта некорректная')\r\n      }\r\n      if(passwordInput.current.value === ''){\r\n          props.setPasswordInputDanger('Введите пароль')\r\n      }\r\n      else if(/^[0-9a-z#!_-]/i.test(passwordInput.current.value) === false){\r\n          props.setPasswordInputDanger('Пароль некорректный')\r\n      }\r\n      if(repeatPasswordInput.current.value === ''){\r\n          props.setRepeatPasswordInputDanger('Повторите пароль')\r\n      }\r\n      else if(repeatPasswordInput.current.value !== passwordInput.current.value){\r\n          props.setRepeatPasswordInputDanger('Пароли не совпадают')\r\n      }\r\n\r\n      props.toggleSignUpButtonDisability()\r\n        props.sendSignUpRequest(props.emailInput,props.loginInput,props.passwordInput)\r\n\r\n    }\r\n\r\n    let onLoginChange = () =>{\r\n        if(/^[0-9a-z_-]/i.test(loginInput.current.value.slice(-1)) || loginInput.current.value==''){\r\n            props.reloadLoginInput(loginInput.current.value)\r\n            props.setLoginInputDanger('')\r\n        }\r\n        else{\r\n            props.setLoginInputDanger('Разрешены латинские буквы, цифры и _-')\r\n        }\r\n        props.toggleSignUpButtonDisability()\r\n\r\n    }\r\n\r\n    let onEmailChange = () =>{\r\n      if(/^[0-9a-z@._-]/i.test(emailInput.current.value.slice(-1)) || emailInput.current.value==''){\r\n          props.reloadEmailInput(emailInput.current.value)\r\n          props.setEmailInputDanger('')\r\n      }\r\n      else{\r\n          props.setEmailInputDanger('Разрешены латинские буквы, цифры и _-@.')\r\n      }\r\n        props.toggleSignUpButtonDisability()\r\n\r\n    }\r\n\r\n\r\n    let onPasswordChange = () =>{\r\n\r\n      if(passwordInput.current.value === ''){\r\n        props.setPasswordStrength('none', '')\r\n\r\n      }\r\n      else if(passwordInput.current.value.length <= 4 && passwordInput.current.value.length >= 1){\r\n\r\n        props.setPasswordStrength('tooWeak', 'Слишком слабый пароль')\r\n      }\r\n      else if(passwordInput.current.value.length <= 6){\r\n          props.setPasswordStrength('weak','Слабый пароль')\r\n\r\n      }\r\n      else if(passwordInput.current.value.length <= 8){\r\n          props.setPasswordStrength('medium','Средний пароль')\r\n      }\r\n      else{\r\n          props.setPasswordStrength('good','Хороший пароль')\r\n      }\r\n\r\n      if(/^[0-9a-z#!_-]/i.test(passwordInput.current.value.slice(-1)) || passwordInput.current.value==''){\r\n          props.reloadPasswordInput(passwordInput.current.value)\r\n          props.setPasswordInputDanger('')\r\n      }\r\n      else{\r\n          props.setPasswordInputDanger('Разрешены латинские буквы, цифры и #!_-')\r\n      }\r\n        props.toggleSignUpButtonDisability()\r\n\r\n\r\n    }\r\n\r\n    let onPasswordRepeatChange = () =>{\r\n      props.reloadRepeatPasswordChange(repeatPasswordInput.current.value)\r\n      props.setRepeatPasswordInputDanger('')\r\n        props.toggleSignUpButtonDisability()\r\n    }\r\n    return(\r\n            <div className={s.signup_form}>\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>{props.loginDanger}</p>\r\n                    <input className=\"plain_input\" placeholder='Придумайте Логин' type=\"text\"\r\n                           onChange={onLoginChange}\r\n                           value={props.loginInput}\r\n                           ref={loginInput}/>\r\n                </div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>{props.emailDanger}</p>\r\n                    <input className=\"plain_input\" placeholder='Ваша почта' type=\"text\"\r\n                           onChange={onEmailChange}\r\n                           value={props.emailInput}\r\n                           ref={emailInput}/>\r\n                </div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>{props.passwordDanger}</p>\r\n                    <input className=\"plain_input\" placeholder='Ваш пароль'  type=\"password\"\r\n                           onChange={onPasswordChange}\r\n                           value={props.passwordInput}\r\n                           ref={passwordInput}/>\r\n                    {props.passwordStrength[0] !== 'none' ?  <div className={s.password_strength}><div className={s[props.passwordStrength[0]]}></div>\r\n                        <p>{props.passwordStrength[1]}</p></div> : ''}\r\n\r\n                </div>\r\n                <div className={s.input_wr}>\r\n                    <p className={s.input_danger}>{props.repeatPasswordDanger}</p>\r\n                    <input className=\"plain_input\" placeholder='Повторите пароль' type=\"password\"\r\n                           onChange={onPasswordRepeatChange}\r\n                           value={props.repeatPasswordInput}\r\n                           ref={repeatPasswordInput}/>\r\n                </div>\r\n                <button disabled={props.isSignUpButtonDisabled} onClick={onSendClick}>Отправить</button>\r\n                <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className={s.profile_form_wr}>\r\n            <div className={s.auth_info}>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Почта:</p><p className=\"line-text\">{props.email}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Логин:</p><p className=\"line-text\">{props.login}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Дата регистрации:</p><p className=\"line-text\">{props.regDate}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">ID</p><p className=\"line-text\">{props.profileId}</p></div>\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                    <div className={s.add_photo_row}>\r\n                         <div className={s.photo_cont}></div>\r\n                         <p className={s.add_photo}>Добавить фото</p>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Имя' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Фамилия' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <textarea className=\"plain_textarea\" placeholder='Информация о вас' name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <button>Отправить</button>\r\n                    <NavLink to='/summary'>Пропустить</NavLink>\r\n                </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    {props.signUpState == 'signUpForm' ?\r\n                   <SignUpForm reloadLoginInput={props.reloadLoginInput} reloadEmailInput={props.reloadEmailInput}\r\n                             reloadPasswordInput={props.reloadPasswordInput} reloadRepeatPasswordChange={props.reloadRepeatPasswordInput}\r\n                             loginInput={props.loginInput} emailInput={props.emailInput}\r\n                             passwordInput={props.passwordInput} repeatPasswordInput={props.repeatPasswordInput}\r\n                             setLoginInputDanger={props.setLoginInputDanger} setEmailInputDanger={props.setEmailInputDanger}\r\n                             setPasswordInputDanger={props.setPasswordInputDanger} setRepeatPasswordInputDanger={props.setRepeatPasswordInputDanger}\r\n                             loginDanger={props.loginDanger} emailDanger={props.emailDanger}\r\n                             passwordDanger={props.passwordDanger} repeatPasswordDanger={props.repeatPasswordDanger}\r\n                             setPasswordStrength={props.setPasswordStrength} passwordStrength={props.passwordStrength}\r\n                             isSignUpButtonDisabled={props.isSignUpButtonDisabled} toggleSignUpButtonDisability={props.toggleSignUpButtonDisability}\r\n                             isFetching={props.isFetching} sendSignUpRequest={props.sendSignUpRequest}\r\n                   /> : <ProfileForm profileId={props.profileId} email={props.email}\r\n                                     login={props.login} regDate={props.regDate}/>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\nimport {reloadInput, setSignUpInputDanger, setPasswordStrength, toggleSignUpButtonDisability, setSignUpState, signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n    reloadLoginInput = (value) =>{\r\n\r\n      this.props.reloadInput('loginInput',value)\r\n    }\r\n\r\n    reloadEmailInput = (value) =>{\r\n        this.props.reloadInput('emailInput',value)\r\n    }\r\n\r\n    reloadPasswordInput = (value) =>{\r\n        this.props.reloadInput('passwordInput',value)\r\n    }\r\n    reloadRepeatPasswordInput = (value) =>{\r\n        this.props.reloadInput('repeatPasswordInput',value)\r\n    }\r\n\r\n    setLoginInputDanger = (value) =>{\r\n        this.props.setSignUpInputDanger('loginDanger',value)\r\n    }\r\n\r\n    setEmailInputDanger = (value) =>{\r\n        this.props.setSignUpInputDanger('emailDanger',value)\r\n    }\r\n\r\n    setPasswordInputDanger = (value) =>{\r\n        this.props.setSignUpInputDanger('passwordDanger',value)\r\n    }\r\n    setRepeatPasswordInputDanger = (value) =>{\r\n        this.props.setSignUpInputDanger('repeatPasswordDanger',value)\r\n    }\r\n\r\n    sendSignUpRequest = (email,login,password) =>{\r\n      this.props.signUpThunkCreator(email,login,password)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <SignUpBlock\r\n                loginInput={this.props.loginInput}\r\n                emailInput={this.props.emailInput}\r\n                passwordInput={this.props.passwordInput}\r\n                repeatPasswordInput={this.props.repeatPasswordInput}\r\n                loginDanger={this.props.loginDanger}\r\n                emailDanger={this.props.emailDanger}\r\n                passwordDanger={this.props.passwordDanger}\r\n                repeatPasswordDanger={this.props.repeatPasswordDanger}\r\n                passwordStrength={this.props.passwordStrength}\r\n                isSignUpButtonDisabled={this.props.isSignUpButtonDisabled}\r\n                isFetching={this.props.isFetching}\r\n                signUpState={this.props.signUpState}\r\n                profileId={this.props.profileId}\r\n                email={this.props.email}\r\n                login={this.props.login}\r\n                regDate={this.props.regDate}\r\n                reloadLoginInput={this.reloadLoginInput}\r\n                reloadEmailInput={this.reloadEmailInput}\r\n                reloadPasswordInput={this.reloadPasswordInput}\r\n                reloadRepeatPasswordInput={this.reloadRepeatPasswordInput}\r\n                setLoginInputDanger={this.setLoginInputDanger}\r\n                setEmailInputDanger={this.setEmailInputDanger}\r\n                setPasswordInputDanger={this.setPasswordInputDanger}\r\n                setRepeatPasswordInputDanger={this.setRepeatPasswordInputDanger}\r\n                setPasswordStrength={this.props.setPasswordStrength}\r\n                toggleSignUpButtonDisability={this.props.toggleSignUpButtonDisability}\r\n                sendSignUpRequest={this.sendSignUpRequest}\r\n\r\n\r\n\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        loginInput: state.auth.loginInput,\r\n        emailInput: state.auth.emailInput,\r\n        passwordInput: state.auth.passwordInput,\r\n        repeatPasswordInput: state.auth.repeatPasswordInput,\r\n        loginDanger: state.auth.signUpInputsDangers.loginDanger,\r\n        emailDanger: state.auth.signUpInputsDangers.emailDanger,\r\n        passwordDanger: state.auth.signUpInputsDangers.passwordDanger,\r\n        repeatPasswordDanger: state.auth.signUpInputsDangers.repeatPasswordDanger,\r\n        passwordStrength: state.auth.passwordStrength,\r\n        isSignUpButtonDisabled: state.auth.isSignUpButtonDisabled,\r\n        isFetching: state.auth.isFetching,\r\n        signUpState: state.auth.signUpState,\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {reloadInput,setSignUpInputDanger, setPasswordStrength,\r\n    toggleSignUpButtonDisability, setSignUpState, signUpThunkCreator})(SignUpContainer)","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\nimport Sidebar from \"./components/sidebar/sidebar.jsx\";\nimport NavbarContainer from './components/navbar/navbarContainer.jsx';\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport {Route } from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nconst App = ()=> {\n\n    return (\n\n                <div className=\"app-wrapper\">\n                    <NavbarContainer />\n                    <div className=\"row\">\n                        <Sidebar />\n                        {/* <Redirect exact from='/' to='/summary'  /> */}\n\n                        <Route path='/summary'  render={ () => <Summary  /> } />\n                        <Route path='/counters' render={() => <Counters />}/>\n                        <Route path='/audiences' render={() => <Audiences />} />\n                        <Route path='/profile' render={() => <ProfileContainer />} />\n                        <Route path='/profilesettings' render={() => <ProfileSettings />} />\n                        <Route exact path='/login'  render={()=> <LoginContainer />} />\n                        <Route path='/signup' render={()=> <SignUpContainer />} />\n\n\n                    </div>\n                </div>\n\n\n\n    )\n\n\n}\n\n\nexport default App;\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\n\n    ReactDOM.render(\n            <BrowserRouter>\n            <Provider store={store}>  <App  /></Provider></BrowserRouter> ,\n            document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}