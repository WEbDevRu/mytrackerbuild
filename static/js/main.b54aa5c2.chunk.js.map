{"version":3,"sources":["components/content/summary/daystat/daystat.module.scss","components/content/audiences/audienceslist/audienceslist.module.scss","components/profile/signup/signup.module.scss","components/profile/login/login.module.scss","components/content/counters/counterslist/counterslist.module.scss","components/navbar/navbar.module.scss","components/content/audiences/audienceslist/shortaudience/shortaudience.module.scss","serviceWorker.js","api/counters-api.js","redux/counters-reducer.js","redux/audiences-reducer.js","redux/summary-reducer.js","api/profile-api.js","redux/profile-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/sidebar/sidebar.jsx","components/navbar/navbar.jsx","components/navbar/navbarContainer.jsx","components/content/summary/dayusers/shortuser/shortuser.jsx","components/content/summary/dayusers/dayusers.jsx","components/content/summary/dayusers/dayusersContainer.jsx","components/graphic/graphiccol/graphiccol.jsx","components/graphic/graphic.jsx","components/content/summary/daystat/daystat.jsx","components/content/summary/daystat/daystatContainer.jsx","components/content/summary/summary.jsx","components/common/formControls.jsx","utils/validation.js","components/content/counters/addcounter/addcounterblock/addcounterblock.jsx","hoc/withAuthRedirect.js","components/content/counters/addcounter/addcounterblock/addcounterblockContainer.jsx","components/content/counters/addcounter/addcounter.jsx","components/content/counters/counterslist/shortcounter/shortcounter.jsx","components/content/counters/counterslist/counterslist.jsx","components/content/counters/counterslist/counterslistContainer.jsx","components/content/counters/counters.jsx","components/content/audiences/addaudience/addaudienceblock.jsx","components/content/audiences/addaudience/addaudienceblockContainer.jsx","components/content/audiences/addaudience/addaudience.jsx","components/content/audiences/audienceslist/shortaudience/shortaudience.jsx","components/content/audiences/audienceslist/audienceslist.jsx","components/content/audiences/audienceslist/audiencelistContainer.jsx","components/content/audiences/audiences.jsx","components/common/editinput.jsx","components/profile/profilesettings/yourprofile/yourprofile.jsx","components/profile/profilesettings/yourprofile/yourprofileContainer.jsx","components/profile/profilesettings/haveaccess/haveaccess.jsx","components/profile/profilesettings/profilesettings.jsx","components/profile/login/loginform.jsx","components/profile/login/loginContainer.jsx","components/profile/profilePage/profile.jsx","components/profile/profilePage/profileContainer.js","components/profile/signup/signup.jsx","components/profile/signup/signupContainer.jsx","App.js","index.js","components/graphic/graphic.module.scss","components/content/counters/counterslist/shortcounter/shortcounter.module.scss","components/content/summary/dayusers/dayusers.module.scss","components/common/common.module.scss","components/content/counters/addcounter/addcounter.module.scss","components/content/audiences/addaudience/addaudience.module.scss","components/content/summary/dayusers/shortuser/shortuser.module.scss","components/sidebar/sidebar.module.scss","components/profile/profilesettings/yourprofile/yourprofile.module.scss","assets/icons/done.svg","assets/icons/small-loading.svg"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","baseURL","countersAPI","data","post","headers","store","getState","auth","token","then","response","catch","error","console","warn","page","limit","get","params","initialState","counterslistData","pageSize","totalCounters","currentPage","isFetching","setCounters","countersData","type","setCurrentPage","setTotalCounters","toggleIsFetching","countersReducer","state","action","newCounter","id","counterData","_id","name","domen","dayusers","allusers","status","counterNameInput","counterDomenInput","inputName","value","items","totalPages","audiencelistData","description","counters","counterId","counterName","totalusers","usersnow","audienceNameInput","audienceDescriptionInput","AudienceCountersSelect","audienceCountersSelectSelected","audienceCounters","total","addCountersNames","i","this","length","i2","addAudienceSelectCounters","counter","audiencesReducer","filter","newAudienceCounter","deleteOption","findIndex","option","copySelect","splice","deletedCounter","copydeletedCounter","returnCounter","newAudience","totalUsers","dayusersData","graphicData","day","summaryReducer","usersData","newCurrentPage","profileAPI","put","soName","company","setProfileInfo","profileReducer","authedInstance","authAPI","email","password","signUpAPI","login","profileId","regDate","isAuth","signUpState","setProfileData","authProfileData","setToken","setSignUpState","AuthThunkCreator","dispatch","getCookie","matches","document","cookie","RegExp","replace","decodeURIComponent","undefined","authReducer","userId","isInitialized","appReducer","reducers","combineReducers","summaryPage","countersPage","audiencePage","profilePage","app","form","formReducer","createStore","applyMiddleware","thunk","Sidebar","setOpacity","event","lineElem","targetCoords","getBoundingClientRect","procent","Math","round","clientY","top","abs","className","s","sidebar","sidebar_menu","onMouseOver","allelements","querySelectorAll","classList","contains","insertAdjacentHTML","add","setBorders","target","onmousemove","alllines","topBeam","querySelector","children","bottomBeam","elem","tagName","indexOf","call","parentNode","style","opacity","width","offsetWidth","xCoord","clientX","left","horizontProcent","nextline","nextSibling","prevline","previousSibling","onMouseOut","href","link_item","Navbar","props","navbar","logo","navbar_menu","to","activeClassName","active","profile","profileLogin","onClick","logout","NavbarContainer","logOut","emailInput","passwordInput","deleteProfileData","React","Component","connect","Shortuser","shortuser","user_alias","user_country","country","user_time","time","user_date","mongoDate","daysSeparate","split","date","timeSeparate","slice","join","seconds","user_revenue","revenue","LoadingShortuser","loading_shortuser","Dayusers","dayUserElements","map","dayuser","tablehead","loadmore_button","loadMore","DayusersContainer","loadNewPage","setTotalUsers","setUsers","setUsersActionCreator","loadNewPageActionCreator","setTotalUsersActionCreator","Graphiccol","colheight","height","graphicvalue","graphic_col_wr","graphic_col_text","graphic_col_day","graphicday","graphic_col_number","graphic_col","Graphic","graphicColElements","coldata","graphic","graphic_cols","graphic_bottom","Daystat","day_stat","DaystatContainer","Summary","Input","input","meta","input_wr","touched","input_danger","PasswordScoreInput","strengthValue","strengthText","password_strength","required","checkLogin","test","checkEmail","checkPassword","passwordsMatch","allValues","AddCounterReduxForm","reduxForm","log","onSubmit","handleSubmit","form_danger","loading_bar","Field","component","placeholder","validate","disabled","submitting","Addcounterblock","addcounter_form","values","postCounter","counterDomen","mapStateToProps","AccountNotExist","WithAuthRedirect","AddcounterblockContainer","compose","reset","Addcounterbutton","addcounter_button","Addcounter","exact","path","render","Shortcounter","short_counter","work","notwork","LoadingCounters","loading_counter","Counterslist","countersElement","countersListData","pagesCount","ceil","pages","push","pagesButtonsElements","changePage","table_head","list","CounterslistContainer","getCounters","Counters","Addaudienceblock","clicked","deleteCounter","getAttribute","countersOptionsElements","countersSelect","key","countersElements","audience_badge","counterid","version","viewBox","xmlns","d","fill","name_input","createRef","description_input","counters_select","add_form","onChange","reloadInput","current","nameInput","ref","descriptionName","cols","rows","htmlFor","audience_badges","audience_selector","options","selectedIndex","reloadSelect","reverse","selectedCounter","addCounter","addAudience","reloadAudienceInputActionCreator","reloadAudienceSelectActionCreator","deleteAudienceCounterActionCreator","addaudience_button","Addaudiences","audienceData","Shortaudience","countersNames","short_audience","audience_name","body","info","info_block","toFixed","Audienceslist","shortAudienceElements","audiences","audience","audiencelist","AudiecelistContainer","Audiences","EditInput","inputText","inputEditMode","wasUpdated","changeCondition","inputState","setState","putInfo","reloadNameInput","e","currentTarget","prevProps","prevState","snapshot","setInterval","withedit_block","src","loadingImg","alt","done_check","doneImg","onBlur","autoFocus","withedit_current","EditTextarea","formatText","text","textarr","hasHrefPosition","isUrl","brPosition","wrap","YourProfile","profile_cont","photo_col","photo_wr","info_col","info_inputs","putProfileInfo","YourProfileContainer","getProfileInfo","newInfo","HaveAccess","LoginReduxForm","dont_reg_yet","LoginBlock","sendLoginRequest","success_auth","LoginContainer","loginThunkCreator","message","stopSubmit","_error","Profile","ProfileContainer","SignUpReduxForm","SignUpFormBlock","signup_form","sendSignUpRequest","ProfileForm","profile_form_wr","auth_info","profile_form","add_photo_row","photo_cont","add_photo","SignUpBlock","SignUpContainer","signUpThunkCreator","App","InitializingApp","promise","Promise","all","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b54aa5c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"day_graphic\":\"daystat_day_graphic__-TRGJ\",\"day_stat\":\"daystat_day_stat__2MNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audiencelist\":\"audienceslist_audiencelist__y4ALj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"signup_signup_form__7HJVd\",\"dont_reg_yet\":\"signup_dont_reg_yet__239zS\",\"input_wr\":\"signup_input_wr__WIkn0\",\"input_danger\":\"signup_input_danger__2AIPg\",\"password_strength\":\"signup_password_strength__peCEw\",\"smoothappearance\":\"signup_smoothappearance__4VAwc\",\"tooWeak\":\"signup_tooWeak__Vo_W9\",\"weak\":\"signup_weak__bx5Hx\",\"medium\":\"signup_medium__1OxDa\",\"good\":\"signup_good__2KcH1\",\"loading_bar\":\"signup_loading_bar__3cVFs\",\"loading\":\"signup_loading__1IMnh\",\"active\":\"signup_active__3mlkR\",\"auth_info\":\"signup_auth_info__eHPph\",\"profile_form_wr\":\"signup_profile_form_wr__3zHGM\",\"profile_form\":\"signup_profile_form__hgX0S\",\"photo_cont\":\"signup_photo_cont__-6OF5\",\"add_photo_row\":\"signup_add_photo_row__AGbTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2PtWF\",\"input_wr\":\"login_input_wr__3ZVSI\",\"input_danger\":\"login_input_danger__3KsA1\",\"danger\":\"login_danger__3q7pY\",\"loading_bar\":\"login_loading_bar__2MWMF\",\"loading\":\"login_loading__2cTaD\",\"active\":\"login_active__1BE-r\",\"false_alert\":\"login_false_alert__134YL\",\"dont_reg_yet\":\"login_dont_reg_yet__1a9fd\",\"form_danger\":\"login_form_danger__2x0dg\",\"success_auth\":\"login_success_auth__1Bv0W\",\"password_strength\":\"login_password_strength__2bQOP\",\"smoothappearance\":\"login_smoothappearance__3HXh5\",\"tooWeak\":\"login_tooWeak__3G-5M\",\"weak\":\"login_weak__1bssw\",\"medium\":\"login_medium__2Wr46\",\"good\":\"login_good__3UmXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_head\":\"counterslist_table_head__3GKut\",\"name\":\"counterslist_name__26sx8\",\"domen\":\"counterslist_domen__28w4t\",\"dayusers\":\"counterslist_dayusers__1qIrK\",\"totalusers\":\"counterslist_totalusers__cwCPg\",\"status\":\"counterslist_status__1Nkgx\",\"loading_counter\":\"counterslist_loading_counter__2YVWV\",\"loading\":\"counterslist_loading__ODluH\",\"list\":\"counterslist_list__3QBS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__15BfM\",\"link_item\":\"navbar_link_item__2Qnum\",\"active\":\"navbar_active__uE8Zz\",\"profile\":\"navbar_profile__SnKZH\",\"logo\":\"navbar_logo__3hFZg\",\"navbar_menu\":\"navbar_navbar_menu__2_8AK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_audience\":\"shortaudience_short_audience__1xEgI\",\"audience_name\":\"shortaudience_audience_name__2XXhl\",\"body\":\"shortaudience_body__1YFTB\",\"description\":\"shortaudience_description__2NI-e\",\"counters\":\"shortaudience_counters__2Eiuy\",\"counter\":\"shortaudience_counter__20zuS\",\"info\":\"shortaudience_info__3HDf6\",\"info_block\":\"shortaudience_info_block__YFlmx\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/counters'\r\n})\r\n\r\nexport const countersAPI = {\r\n    postCounter(data){\r\n        return axiosInstance.post('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getCounters(page, limit){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}, params: {page: page, limit: limit}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    getCounterById(counterId){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {countersAPI} from \"../api/counters-api\";\r\nimport store from \"./redux-store\"\r\nimport {reset} from 'redux-form';\r\nlet initialState = {\r\n        counterslistData: [],\r\n        pageSize: 5,\r\n        totalCounters: '',\r\n        currentPage: 1,\r\n        isFetching: ''\r\n}\r\n\r\nconst countersReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"ADD-COUNTER\":{\r\n            let newCounter = {\r\n                id: action.counterData._id,\r\n                name: action.counterData.name,\r\n                domen: action.counterData.domen,\r\n                dayusers: action.counterData.dayusers,\r\n                allusers: action.counterData.allusers,\r\n                status: action.counterData.status\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                counterslistData : [...state.counterslistData, newCounter],\r\n                counterNameInput: '',\r\n                counterDomenInput: ''\r\n            }\r\n        }\r\n\r\n        case \"RELOAD-COUNTER-INPUT\":{\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        }\r\n        case \"SET-COUNTERS\":{\r\n            return {\r\n                ...state,\r\n                counterslistData: action.countersData.items\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\":{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case 'SET-TOTAL-COUNTERS':{\r\n            return {\r\n                ...state,\r\n                totalCounters: action.totalCounters.totalPages\r\n            }\r\n        }\r\n        case 'TOGGLE-IS-FETCHING':{\r\n\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addCounter = (counterData) =>({\r\n    type: 'ADD-COUNTER',\r\n    counterData: counterData\r\n})\r\nexport const setCounters = (countersData) =>({\r\n    type: 'SET-COUNTERS',\r\n    countersData: countersData\r\n\r\n})\r\nexport const setCurrentPage = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalCounters = (totalCounters) =>({\r\n    type: 'SET-TOTAL-COUNTERS',\r\n    totalCounters: totalCounters\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) =>({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\n\r\n\r\nexport const getCounters = () =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        countersAPI.getCounters(store.getState().countersPage.currentPage, store.getState().countersPage.pageSize).then(response =>{\r\n            dispatch(setCounters(response))\r\n            dispatch(setTotalCounters(response))\r\n            dispatch(toggleIsFetching(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const postCounter = (data) => {\r\n    return (dispatch) => {\r\n        countersAPI.postCounter(data).then(response =>{\r\n            dispatch(setCurrentPage(1))\r\n            dispatch(toggleIsFetching(true))\r\n            countersAPI.getCounters(store.getState().countersPage.currentPage, store.getState().countersPage.pageSize).then(response =>{\r\n                dispatch(setCounters(response))\r\n                dispatch(setTotalCounters(response))\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(reset('addcounter-form'))\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default countersReducer","let initialState = {\r\n\r\n        audiencelistData: [\r\n\r\n            {\r\n                id: 0,\r\n                name: 'Аудитория 1',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '1003',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n\r\n            {\r\n                id: 1,\r\n                name: 'Аудитория 2',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Аудитория 3',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Аудитория 4',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Аудитория 5',\r\n                description: 'Описание',\r\n                counters: [{counterId: 2, counterName: ''}, {counterId: 3, counterName: ''}],\r\n                totalusers: '10000',\r\n                usersnow: '200',\r\n                status: 'work'\r\n            }\r\n\r\n        ],\r\n        audienceNameInput: '',\r\n        audienceDescriptionInput: '',\r\n        AudienceCountersSelect: [{}],\r\n        audienceCountersSelectSelected: {},\r\n        audienceCounters: [{}],\r\n    counterslistData : [\r\n        {id:0, name:'Счётчик y', domen:'ya.ru', dayusers:100, total: '10000', status:'work'},\r\n        {id:1, name:'Счётчик 2', domen:'vk.com', dayusers:100, total: '10000', status:'notwork'},\r\n        {id:2, name:'Счётчик 3', domen:'facebook.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:3, name:'Счётчик 4', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:4, name:'Счётчик 5', domen:'mail.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:5, name:'Счётчик 6', domen:'google.com', dayusers:100, total: '10000', status:'work'},\r\n        {id:6, name:'Счётчик z', domen:'vk.ru', dayusers:200, total: '10000', status:'notwork'},\r\n        {id:7, name:'Счётчик 8', domen:'google.com', dayusers:100, total: '10000', status:'work'}\r\n\r\n    ],\r\n    addCountersNames(){\r\n        let i =0;\r\n        while(i < this.audiencelistData.length){\r\n            let i2 = 0;\r\n            while(i2 < this.audiencelistData[i].counters.length){\r\n                let counterId = this.audiencelistData[i].counters[i2].counterId\r\n                this.audiencelistData[i].counters[i2].counterName = this.counterslistData[counterId].name\r\n                i2++\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n    addAudienceSelectCounters(){\r\n        let i = 0;\r\n        while (i < this.counterslistData.length){\r\n            let counter = {'counterId': this.counterslistData[i].id,\r\n                'counterName': this.counterslistData[i].name};\r\n            this.AudienceCountersSelect[i] = counter\r\n            i++;\r\n        }\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst audiencesReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"RELOAD-AUDIENCE-INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.inputName] : action.value\r\n            }\r\n        case \"RELOAD-AUDIENCE-COUNTERS-SELECT\":\r\n            let counterName = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            let newAudienceCounter = {\r\n                counterId: action.counterId,\r\n                counterName: counterName[0].name\r\n            }\r\n            return {\r\n                ...state,\r\n                audienceCountersSelectSelected: newAudienceCounter\r\n            }\r\n        case 'ADD-AUDIENCE-COUNTER':\r\n            let deleteOption = state.AudienceCountersSelect.findIndex(option => option.counterId == state.audienceCountersSelectSelected.counterId)\r\n                let copySelect = [...state.AudienceCountersSelect]\r\n                copySelect.splice(deleteOption,1)\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                audienceCounters: [...state.audienceCounters, state.audienceCountersSelectSelected],\r\n                AudienceCountersSelect: copySelect,\r\n                audienceCountersSelectSelected: {}\r\n            }\r\n        case 'DELETE-AUDIENCE-COUNTER':\r\n            let deletedCounter = state.audienceCounters.findIndex(counter => counter.counterId == action.counterId)\r\n\r\n            let copydeletedCounter =  [...state.audienceCounters]\r\n            copydeletedCounter.splice(deletedCounter ,1)\r\n            let returnCounter = state.counterslistData.filter(counter => counter.id == action.counterId)\r\n            return {\r\n                ...state,\r\n                audienceCounters: copydeletedCounter,\r\n                AudienceCountersSelect: [...state.AudienceCountersSelect, {\r\n                    counterId: action.counterId,\r\n                    counterName: returnCounter[0].name\r\n                }]\r\n            }\r\n        case 'ADD-AUDIENCE':\r\n            debugger\r\n            let audienceCounters = [...state.audienceCounters]\r\n            audienceCounters.splice(0,1)\r\n\r\n            let newAudience = {\r\n                id: 5,\r\n                name: state.audienceNameInput,\r\n                description: state.audienceDescriptionInput,\r\n                counters: audienceCounters,\r\n                totalUsers: '100',\r\n                usersnow: '2',\r\n                status: '1'\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                audiencelistData: [...state.audiencelistData, newAudience],\r\n                audienceNameInput: '',\r\n                audienceDescriptionInput: '',\r\n                audienceCounters: [{}],\r\n                ...state.addAudienceSelectCounters()\r\n            }\r\n        default:\r\n            state.addCountersNames()\r\n            state.addAudienceSelectCounters()\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const reloadAudienceInputActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-AUDIENCE-INPUT',\r\n    value: value,\r\n    inputName: inputName})\r\nexport const reloadAudienceSelectActionCreator = (counterId) =>({\r\n    type: 'RELOAD-AUDIENCE-COUNTERS-SELECT',\r\n    counterId: counterId})\r\nexport const addAudienceCounterActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE-COUNTER'\r\n})\r\nexport const addAudienceActionCreator = () =>({\r\n    type: 'ADD-AUDIENCE'\r\n})\r\nexport const deleteAudienceCounterActionCreator = (counterId) =>({\r\n    type: 'DELETE-AUDIENCE-COUNTER',\r\n    counterId: counterId\r\n})\r\n\r\nexport default audiencesReducer","let initialState = {\r\n    dayusersData: [],\r\n    pageSize: 5,\r\n    totalUsers: 17,\r\n    currentPage: 1,\r\n    graphicData : [\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:20, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:40, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"},\r\n        {value:30, day:\"Вчера 11:00 - 12:00\"}\r\n\r\n    ]\r\n}\r\n\r\nconst summaryReducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case \"SET-USERS\":{\r\n\r\n            if(state.dayusersData.length === 0){\r\n                return{\r\n                    ...state,\r\n                    dayusersData: [...state.dayusersData,  ...action.usersData],\r\n                    currentPage: state.currentPage + 1\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        case \"LOAD-NEW-PAGE\":{\r\n            let newCurrentPage = state.currentPage + 1\r\n            return {\r\n\r\n                ...state,\r\n                dayusersData: [...state.dayusersData, ...action.usersData],\r\n                currentPage: newCurrentPage\r\n\r\n            }\r\n\r\n        }\r\n        case \"SET-TOTAL-USERS\":{\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUsersActionCreator = (usersData) =>({\r\n    type: \"SET-USERS\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const loadNewPageActionCreator = (usersData) =>({\r\n    type: \"LOAD-NEW-PAGE\",\r\n    usersData: usersData\r\n})\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) =>({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n\r\n})\r\nexport const setTotalUsersActionCreator = (totalUsers) =>({\r\n    type: 'SET-TOTAL-USERS',\r\n    totalUsers: totalUsers\r\n})\r\n\r\nexport default summaryReducer\r\n","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/profile'\r\n})\r\n\r\nexport const profileAPI = {\r\n    putProfileInfo(data){\r\n        return axiosInstance.put('/', data, {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.warn(error)\r\n                })\r\n    },\r\n    getProfileInfo(){\r\n        return axiosInstance.get('/', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    }\r\n}\r\n","import {profileAPI} from '../api/profile-api'\r\n\r\nlet initialState = {\r\n    name: '',\r\n    soName: '',\r\n    company: '',\r\n    description: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SET-PROFILE-INFO':\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        default:\r\n                return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const saveInfoActionCreator = () =>({type: 'SAVE-INFO'})\r\nexport const reloadTextareaActionCreator = (value, inputName) =>({\r\n    type: 'RELOAD-TEXTAREA',\r\n    value: value,\r\n    inputName: inputName\r\n})\r\n\r\nexport const setProfileInfo = (data) =>({\r\n    type: 'SET-PROFILE-INFO',\r\n    data: data\r\n})\r\n\r\n\r\n\r\nexport const getProfileInfo = () =>{\r\n    return (dispatch) =>{\r\n        profileAPI.getProfileInfo()\r\n                .then(response =>{\r\n                    dispatch(setProfileInfo(response))\r\n                })\r\n    }\r\n}\r\n\r\nexport const putProfileInfo = (data) =>{\r\n    return (dispatch) =>{\r\n        profileAPI.putProfileInfo(data)\r\n                .then(response =>{\r\n                    dispatch(setProfileInfo(response.newInfo))\r\n                })\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer","import * as axios from 'axios';\r\nimport store from \"../redux/redux-store\";\r\nconst authedInstance = axios.create({\r\n    baseURL: 'http://nikrainev.ru:3000/auth/'\r\n})\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getAuthInfo(){\r\n        return authedInstance.get('me', {headers: {\"Authorization\": \"Bearer \"+store.getState().auth.token}})\r\n                .then(response =>{\r\n                    return response.data;\r\n                })\r\n    },\r\n    postLoginInfo(email,password){\r\n        return authedInstance.post('login',{\"email\": email, \"password\":password})\r\n                .then(response =>{\r\n            return response.data;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signUpAPI = {\r\n    postSignUpInfo(email,login,password){\r\n        return authedInstance.post('signup',{\"email\":email,\"login\":login,\"password\":password})\r\n                .then(response =>{\r\n                    return response;\r\n                })\r\n    }\r\n\r\n}","\r\nimport {authAPI, signUpAPI} from \"../api/auth-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n    profileId: null,\r\n    email: null,\r\n    login: null,\r\n    regDate: null,\r\n    token:'',\r\n    isAuth: false,\r\n    isFetching: false,\r\n    signUpState: 'signUpForm'\r\n}\r\n\r\n\r\nconst authReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                profileId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                regDate: action.data.regDate,\r\n\r\n            }\r\n        case \"SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case \"DELETE_PROFILE_DATA\":\r\n            return {\r\n                ...state,\r\n                profileId: null,\r\n                email: null,\r\n                login: null,\r\n                regDate: null,\r\n                token:'',\r\n                isAuth: false\r\n\r\n            }\r\n        case 'TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case 'TOGGLE_SIGNUP_STATE':\r\n            return {\r\n                ...state,\r\n                signUpState: action.signUpState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileData = (authProfileData) => ({\r\n    type: \"SET_USER_DATA\",\r\n    data: authProfileData})\r\nexport const setToken = (token) =>({\r\n    type: 'SET_TOKEN',\r\n    token: token\r\n})\r\nexport const deleteProfileData = () => ({\r\n    type: 'DELETE_PROFILE_DATA'\r\n})\r\n\r\nexport const setInputState = (inputName, inputState) =>({\r\n    type: 'SET_LOGIN_INPUT_STATE',\r\n    inputName: inputName,\r\n    inputState: inputState\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching)=>({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n})\r\n\r\n\r\nexport const setSignUpState = (signUpState) =>{return {\r\n    type: 'TOGGLE_SIGNUP_STATE',\r\n    signUpState: signUpState\r\n}}\r\n\r\n\r\n\r\nexport const loginThunkCreator = (emailInput, passwordInput) =>{\r\n\r\n    return (dispatch)=>{\r\n    dispatch(toggleIsFetching(true))\r\n    authAPI.postLoginInfo(emailInput, passwordInput)\r\n            .then(response => {\r\n                dispatch(setToken(response.token))\r\n                dispatch(toggleIsFetching(false))\r\n                if(response.message == \"Auth successful\"){\r\n                    document.cookie = 'email='+emailInput+'; max-age=360000'\r\n                    document.cookie = 'password='+passwordInput+'; max-age=360000'\r\n                    authAPI.getAuthInfo()\r\n                            .then(response => {\r\n                                console.log(response)\r\n\r\n                                dispatch(setProfileData(response))\r\n                            })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(stopSubmit('login-form', {_error : \"Неверные данные\"}))\r\n                dispatch(toggleIsFetching(false))\r\n\r\n            })\r\n}\r\n}\r\n\r\nexport const signUpThunkCreator = (email,login,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(toggleIsFetching(true))\r\n        signUpAPI.postSignUpInfo(email,login,password).then(response => {\r\n            dispatch(toggleIsFetching(false))\r\n            if(response.data.message === 'user created'){\r\n\r\n                dispatch(setSignUpState('userInfoForm'))\r\n                authAPI.postLoginInfo(email, password)\r\n                        .then(response => {\r\n                            dispatch(setToken(response.token))\r\n                            if(response.message == \"Auth successful\"){\r\n                                document.cookie = 'email='+email+'; max-age=360000'\r\n                                document.cookie = 'password='+password+'; max-age=360000'\r\n                                authAPI.getAuthInfo()\r\n                                        .then(response => {\r\n                                            dispatch(setProfileData(response))\r\n                                        })\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch(toggleIsFetching(false))\r\n                        })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            dispatch(toggleIsFetching(false))\r\n            if(error.response.data.message === \"Mail exists\"){\r\n               dispatch(stopSubmit('signup-form', {email : 'Данная почта уже зарегистрирована'}))\r\n            }\r\n            else if(error.response.data.message === \"Login exists\"){\r\n                dispatch(stopSubmit('signup-form', {login : 'Данный логин уже зарегистрирован'}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const AuthThunkCreator = () => (dispatch)=>{\r\n    let getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    let getAuth = () =>{\r\n        authAPI.getAuthInfo().then(response => {\r\n            dispatch(setProfileData(response))\r\n        })\r\n    }\r\n\r\n    if (getCookie('email') && getCookie('password')){\r\n       return  authAPI.postLoginInfo(getCookie('email'), getCookie('password')).then(response => {\r\n            dispatch(setToken(response.token))\r\n            getAuth()\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default authReducer\r\n","import {AuthThunkCreator} from './auth-reducer'\r\n\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\n\r\nconst appReducer =(state =initialState, action) =>{\r\n    switch (action.type){\r\n        case \"INITIALIZED_SUCCESS\":\r\n            return{\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: \"INITIALIZED_SUCCESS\"})\r\n\r\n\r\nexport const InitializingApp = () => (dispatch) =>{\r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n                dispatch(setInitializedSuccess())\r\n            })\r\n\r\n}\r\n\r\n\r\n\r\nexport  default appReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport countersReducer from \"./counters-reducer\";\r\nimport audiencesReducer from \"./audiences-reducer\";\r\nimport summaryReducer from \"./summary-reducer\";\r\nimport profileReducer from './profile-reducer'\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    summaryPage: summaryReducer,\r\n    countersPage: countersReducer,\r\n    audiencePage: audiencesReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store\r\nexport default store","import React from 'react';\r\nimport s from './sidebar.module.scss';\r\n\r\nconst Sidebar = () =>{\r\n    let i = 0;\r\n    let setBorders = () =>{\r\n        let allelements = document.querySelectorAll(\".fluent-line\")\r\n        for(let i = 0; i < allelements.length; i++){\r\n            if(!allelements[i].classList.contains('loaded_fluent')){\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_topborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_rightborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_bottomborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].insertAdjacentHTML('beforeend', '<div class=\"f_leftborder\"><div class=\"f_borderbeam\"></div></div>');\r\n                allelements[i].classList.add('loaded_fluent')\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let setOpacity = (event, lineElem) =>{\r\n        let targetCoords = lineElem.getBoundingClientRect();\r\n        let procent = Math.round((event.clientY - targetCoords.top)*(100/92))\r\n        procent = 100 - Math.abs(procent)\r\n        procent = procent+\"%\"\r\n        return procent\r\n    }\r\n\r\n    let getElementIndex = (elem) =>{\r\n        elem = elem.tagName ? elem : document.querySelector(elem) // можно добавить еще проверок\r\n        return [].indexOf.call(elem.parentNode.children, elem)\r\n    }\r\n\r\n    let onmouseover = (event) =>{\r\n\r\n          setBorders()\r\n          event.target.onmousemove = (event) =>{\r\n              if(event.target.classList.contains('fluent-line')){\r\n\r\n              let alllines = document.querySelectorAll('.fluent-line')\r\n\r\n              for(i=0; i < alllines.length; i++){\r\n                  let topBeam = alllines[i].querySelector(\".f_topborder\").children[0];\r\n                  let bottomBeam = alllines[i].querySelector(\".f_bottomborder\").children[0];\r\n                  if(getElementIndex(event.target)){\r\n                      topBeam.style.opacity = setOpacity(event, topBeam)\r\n                      bottomBeam.style.opacity = setOpacity(event, bottomBeam)\r\n                  }\r\n                  else{\r\n                      topBeam.style.opacity = 0\r\n                      bottomBeam.style.opacity = 0\r\n                  }\r\n              }\r\n\r\n\r\n\r\n              let width = event.target.offsetWidth;\r\n              let targetCoords = event.target.getBoundingClientRect();\r\n              let xCoord = event.clientX - targetCoords.left;\r\n              let yCoord = event.clientY - targetCoords.top;\r\n              let horizontProcent = Math.round(100*(xCoord/width))\r\n              let horizontProcent2 = 100 - horizontProcent\r\n              horizontProcent=horizontProcent+\"%\"\r\n              let bottomborder = event.target.querySelector(\".f_bottomborder\");\r\n              bottomborder.children[0].style.left=horizontProcent;\r\n              let topborder = event.target.querySelector(\".f_topborder\");\r\n              topborder.children[0].style.left=horizontProcent;\r\n\r\n\r\n              let nextline = event.target.nextSibling\r\n              let prevline = event.target.previousSibling\r\n\r\n              if(nextline){\r\n\r\n                  let bottomborder = nextline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = nextline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n\r\n              }\r\n              if(prevline){\r\n                  let bottomborder = prevline.querySelector(\".f_bottomborder\");\r\n                  bottomborder.children[0].style.left=horizontProcent;\r\n                  let topborder = prevline.querySelector(\".f_topborder\");\r\n                  topborder.children[0].style.left=horizontProcent;\r\n              }\r\n\r\n\r\n\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let onmouseout = () =>{\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.sidebar} >\r\n             <div className={s.sidebar_menu + \" fluent-menu\"} onMouseOver={onmouseover} onMouseOut={onmouseout}>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Сводка</a>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Посетители</a>\r\n                 <a href=\"\" className={s.link_item + \" fluent-line\"}>Конверсии</a>\r\n\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let logout = () =>{\r\n      props.logout()\r\n    }\r\n    return  (\r\n\r\n\r\n        <nav className={s.navbar}>\r\n            <div className={s.logo}>\r\n                Трекер\r\n            </div>\r\n\r\n            <div className={s.navbar_menu}>\r\n\r\n                <NavLink className={s.link_item} to=\"/summary\" activeClassName={s.active}>Общее</NavLink>\r\n                <NavLink className={s.link_item} to=\"/counters\" activeClassName={s.active}>Счётчики</NavLink>\r\n                <NavLink className={s.link_item} to=\"/audiences\" activeClassName={s.active}>Аудитории</NavLink>\r\n\r\n            </div>\r\n            <div className={s.profile}>\r\n                <div className='dropdown'>\r\n\r\n                    <NavLink to=\"/profile\" className={s.link_item}>{props.isAuth == true ? props.profileLogin : \"Профиль\" }</NavLink>\r\n                    <div className='dropdown_block'>\r\n                        <NavLink to=\"/profilesettings\" className='dropdown_link' activeClassName='active'>Настройки</NavLink>\r\n                        <NavLink to=\"/share\" className='dropdown_link' activeClassName='active'>Поделиться</NavLink>\r\n                        {props.isAuth == true ? <div className=\"dropdown_link\" onClick={logout}>Выйти</div> : <NavLink to=\"/login\" className='dropdown_link' activeClassName='active'>Войти</NavLink>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </nav>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {setToken, setProfileData, deleteProfileData} from \"../../redux/auth-reducer\";\r\n\r\nclass NavbarContainer extends React.Component {\r\n\r\n    getCookie = (name) =>{\r\n        let matches = document.cookie.match(new RegExp(\r\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n    logOut = () =>{\r\n        document.cookie = 'token='+this.props.token+'; max-age=-1'\r\n        document.cookie = 'email='+this.props.emailInput+'; max-age=-1'\r\n        document.cookie = 'password='+this.props.passwordInput+'; max-age=-1'\r\n        this.props.deleteProfileData()\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Navbar isAuth={this.props.isAuth}\r\n                       profileLogin={this.props.profileLogin}\r\n                       logout={this.logOut}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        token: state.auth.token,\r\n        isAuth: state.auth.isAuth,\r\n        profileLogin: state.auth.login\r\n    }\r\n}\r\n\r\n\r\nexport default NavbarContainer = connect(mapStateToProps, {setToken,setProfileData, deleteProfileData})(NavbarContainer)","import React from 'react';\r\nimport s from './shortuser.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Shortuser = (props) =>{\r\n    const mongoDate = (mongoDate) => {\r\n        let daysSeparate = mongoDate.split('T')\r\n        let date = daysSeparate[0];\r\n        let timeSeparate = daysSeparate[1];\r\n        timeSeparate = timeSeparate.split(':')\r\n        let time = timeSeparate.slice(0,2).join(':')\r\n        let seconds = timeSeparate[2].replace('Z','')\r\n        return{\r\n            date: date,\r\n            time: time,\r\n            seconds: seconds\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n\r\n                <NavLink to={'/users/'+props.id} className={s.shortuser}>\r\n                    <div className={s.user_alias}>\r\n\r\n                    </div>\r\n                    <div className={s.user_country}><p>{props.country}</p></div>\r\n                    <div className={s.user_time}><p>{props.time}</p></div>\r\n                    <div className={s.user_date}><p>{mongoDate(props.date).time}</p></div>\r\n                    <div className={s.user_revenue}><p>{props.revenue}</p></div>\r\n                </NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Shortuser;","import React from 'react';\r\nimport s from './dayusers.module.scss';\r\nimport Shortuser from \"./shortuser/shortuser\";\r\n\r\n\r\nconst LoadingShortuser = () =>{\r\n    return (\r\n            <div className={s.loading_shortuser}>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Dayusers = (props) => {\r\n\r\n\r\n\r\n    let dayusers = props.dayusers;\r\n\r\n    let dayUserElements = [];\r\n    let i = 0\r\n    if(dayusers.length == 0){\r\n        while(i <= 5){\r\n            dayUserElements[i] = <LoadingShortuser />\r\n            i++\r\n        }\r\n    }\r\n    else{\r\n        dayUserElements = dayusers.map(dayuser => <Shortuser id={dayuser.id} country={dayuser.country} time={dayuser.time} date={dayuser.date} revenue={dayuser.revenue} />)\r\n    }\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className={s.tablehead}>\r\n                    <div className={s.user_alias}><p>Псевдоним</p></div>\r\n                    <div className={s.user_country}><p>Страна</p></div>\r\n                    <div className={s.user_time}><p>Время на сайте</p></div>\r\n                    <div className={s.user_date}><p>Дата посещения</p></div>\r\n                    <div className={s.user_revenue}><p>Доход</p></div>\r\n                </div>\r\n                <div className=\"dayuser_list\">\r\n                    {dayUserElements}\r\n                    <button className={s.loadmore_button+ \" attractive-button\"} onClick={() => {props.loadMore()}}>Загрузить ещё</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dayusers;","import React from \"react\";\r\nimport Dayusers from \"./dayusers\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersActionCreator, loadNewPageActionCreator,setCurrentPageActionCreator, setTotalUsersActionCreator} from '../../../../redux/summary-reducer'\r\nimport * as axios from \"axios\";\r\n\r\n\r\nclass DayusersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('http://nikrainev.ru:3000/auth/me', {headers:{\"Authorization\": \"Bearer \"+ this.props.token}})\r\n                .then(response => {\r\n\r\n                })\r\n\r\n        axios.get('http://195.161.62.108:3000/users').then(response =>{\r\n            this.props.setTotalUsers(response.data.totalPages)\r\n        })\r\n\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=1&limit=5`).then(response =>{\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n\r\n    }\r\n\r\n    loadMore = ()=>{\r\n\r\n        axios.get(`http://195.161.62.108:3000/users?page=${this.props.currentPage}&limit=${this.props.pageSize}`).then(response =>{\r\n\r\n            this.props.loadNewPage(response.data.items)\r\n\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return <Dayusers\r\n                dayusers={this.props.dayusers}\r\n                loadMore={this.loadMore}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        dayusers: state.summaryPage.dayusersData,\r\n        currentPage: state.summaryPage.currentPage,\r\n        totalUsers: state.summaryPage.totalUsers,\r\n        pageSize: state.summaryPage.pageSize,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n     setUsers: (usersData) => {\r\n         dispatch(setUsersActionCreator(usersData))\r\n     },\r\n     loadNewPage: (usersData) =>{\r\n         dispatch(loadNewPageActionCreator(usersData))\r\n     },\r\n     setCurrentPage: () =>{\r\n         dispatch(setCurrentPageActionCreator())\r\n     },\r\n     setTotalUsers:(totalUsers) =>{\r\n         dispatch(setTotalUsersActionCreator(totalUsers))\r\n     }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default  DayusersContainer = connect(mapStateToProps, mapDispatchToProps)(DayusersContainer)\r\n\r\n","import React from 'react';\r\nimport s from '../graphic.module.scss';\r\nconst Graphiccol = (props) => {\r\n    let colheight = {\r\n     height: props.graphicvalue+'px'\r\n    }\r\n    return(\r\n            <div className={s.graphic_col_wr}>\r\n                <div className={s.graphic_col_text}>\r\n                    <p className={s.graphic_col_day}>{props.graphicday}</p>\r\n                    <p className={s.graphic_col_number}>{props.graphicvalue}</p>\r\n                </div>\r\n                <div className={s.graphic_col} style={colheight}></div>\r\n            </div>\r\n    )\r\n}\r\nexport default Graphiccol;","import React from 'react';\r\nimport s from './graphic.module.scss';\r\nimport Graphiccol from \"./graphiccol/graphiccol\";\r\nimport Shortuser from \"../content/summary/dayusers/shortuser/shortuser\";\r\nconst Graphic = (props) => {\r\n    let graphicColElements = props.graphicData.map(coldata => <Graphiccol graphicday={coldata.day} graphicvalue={coldata.value}/>)\r\n\r\n    return  (\r\n            <div className={s.graphic}>\r\n                <div className={s.graphic_cols}>\r\n                    {graphicColElements}\r\n                </div>\r\n              <div className={s.graphic_bottom}>\r\n                  <p>48 часов назад</p>\r\n                  <p>Сейчас</p>\r\n              </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Graphic;","import React from 'react';\r\nimport s from './daystat.module.scss';\r\nimport Graphic from \"../../../graphic/graphic\";\r\nconst Daystat = (props) => {\r\n\r\n    return  (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className={s.day_stat}>\r\n                            <p>Клики<br />120</p>\r\n                            <p>Пользователи<br />65</p>\r\n                            <p>Конверсии<br />2</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n\r\n                            <Graphic graphicData={props.graphicData}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Daystat;","import React from \"react\";\r\nimport Daystat from \"./daystat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        graphicData: state.summaryPage.graphicData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n\r\n\r\n    }\r\n}\r\n\r\nconst DaystatContainer = connect(mapStateToProps, mapDispatchToProps())(Daystat)\r\n\r\nexport default DaystatContainer;","import React from 'react';\r\nimport DayusersContainer from \"./dayusers/dayusersContainer\";\r\nimport DaystatContainer from \"./daystat/daystatContainer\";\r\nconst Summary = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n\r\n\r\n                <DaystatContainer/>\r\n                <DayusersContainer/>\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Summary;","import React from \"react\";\r\nimport s from \"../profile/login/login.module.scss\";\r\nexport const Input = ({input, meta, ...props}) =>{\r\n    return (\r\n\r\n                <div className={s.input_wr}>\r\n                    {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                    <input className=\"plain_input\" {...input} {...props} />\r\n                </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport const PasswordScoreInput = ({input, meta, ...props}) =>{\r\n        let strengthValue = 'none'\r\n        let strengthText = ''\r\n\r\n        if(input.value === ''){\r\n            strengthValue = 'none'\r\n            strengthText = ''\r\n        }\r\n        else if(input.value.length <= 4 && input.value.length >= 1){\r\n            strengthValue = 'tooWeak'\r\n            strengthText = 'Слишком слабый пароль'\r\n        }\r\n        else if(input.value.length <= 6){\r\n            strengthValue = 'weak'\r\n            strengthText = 'Слабый пароль'\r\n        }\r\n        else if(input.value.length <= 8){\r\n            strengthValue = 'medium'\r\n            strengthText = 'Средний пароль'\r\n        }\r\n        else{\r\n            strengthValue = 'good'\r\n            strengthText = 'Хороший пароль'\r\n        }\r\n\r\n    return (\r\n\r\n            <div className={s.input_wr}>\r\n                {meta.touched && meta.error && <span className={s.input_danger}>{meta.error}</span>}\r\n                <input className=\"plain_input\" {...input} {...props} />\r\n                {strengthValue !== 'none' ?  <div className={s.password_strength}><div className={s[strengthValue]}></div>\r\n                    <p>{strengthText}</p></div> : ''}\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n","export const required = value => (value || typeof value === 'number' ? undefined : 'Обязательно')\r\n\r\nexport const checkLogin = value => (value && /^[a-z]+([-_]?[a-z0-9]+){0,2}$/i.test(value) ? undefined : 'Некорректный логин')\r\n\r\nexport const checkEmail = value => (value && /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i.test(value) ? undefined : 'Почта некорректная')\r\n\r\nexport const checkPassword = value => (value && /^[0-9a-z#!_-]/i.test(value) ? undefined : 'Пароль некорректный')\r\n\r\nexport const passwordsMatch = (value, allValues) =>\r\n        value !== allValues.password ? 'Пароли не совпадают' : undefined;\r\n","import React from 'react';\r\nimport s from '../addcounter.module.scss';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport {Input} from \"../../../../common/formControls\";\r\nimport {required} from \"../../../../../utils/validation\";\r\n\r\nconst AddCounterForm = (props) =>{\r\n    console.log(props)\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"counterName\" type=\"text\"  component={Input} placeholder=\"Название счётчика\" validate={required}/>\r\n                <Field name=\"counterDomen\" type=\"text\"  component={Input} placeholder=\"Домен\" validate={required}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst AddCounterReduxForm = reduxForm({form: 'addcounter-form'})(AddCounterForm)\r\n\r\n\r\n\r\n\r\nconst Addcounterblock = (props) =>{\r\n    const onSubmit = (values) =>{\r\n        props.postCounter(values.counterName, values.counterDomen)\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n          <div className=\"col-6\"><p>Добавьте ваш счётчик</p>\r\n\r\n          </div>\r\n          <div className=\"col-6\">\r\n               <div className={s.addcounter_form}>\r\n                  <AddCounterReduxForm onSubmit={onSubmit}/>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Addcounterblock;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../App.scss\"\r\nimport {NavLink, Route, withRouter, Link} from \"react-router-dom\";\r\nconst mapStateToProps  = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AccountNotExist = (props) =>{\r\n    return <div className=\"gotologinblock\">\r\n\r\n        <h1>Войдите в аккаунт</h1>\r\n        <Link className=\"control_button\" to='/login'>Войти</Link>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n const WithAuthRedirect = (Component) =>{\r\n\r\n\r\n    let RedirectComponent = (props) =>{\r\n        if(props.isAuth) return <Component {...props}/>\r\n        else return <AccountNotExist/>\r\n    }\r\n\r\n    let ConnectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedWithAuthRedirect\r\n\r\n}\r\nexport default WithAuthRedirect","import React from \"react\";\r\n\r\nimport {postCounter} from \"../../../../../redux/counters-reducer\";\r\nimport Addcounterblock from \"./addcounterblock\";\r\n\r\nimport WithAuthRedirect from \"../../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass AddcounterblockContainer extends React.Component {\r\n    postCounter = (name, domen) =>{\r\n        this.props.postCounter({name: name, domen: domen})\r\n    }\r\n\r\n    render (){\r\n        return <Addcounterblock postCounter={this.postCounter}\r\n\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {postCounter}), WithAuthRedirect)(AddcounterblockContainer);","import React from 'react';\r\nimport s from './addcounter.module.scss';\r\nimport { BrowserRouter, NavLink, Route} from \"react-router-dom\";\r\nimport AddcounterblockContainer from \"./addcounterblock/addcounterblockContainer\";\r\nconst Addcounterbutton =()=>{\r\n    return(\r\n            <NavLink to='/counters/addcounter' className={s.addcounter_button+\" attractive-button\"}>\r\n                Добавить счётчик\r\n            </NavLink>\r\n    );\r\n}\r\nconst Addcounter = (props) =>{\r\n    return (\r\n\r\n\r\n            <div className=\"container\">\r\n                <Route exact path='/counters' render={() => <Addcounterbutton />} />\r\n                <Route path='/counters/addcounter' render={ () => <AddcounterblockContainer countersData={props.countersData} dispatch={props.dispatch} />} />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addcounter;","import React from 'react';\r\nimport s from './shortcounter.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Shortcounter = (props) =>{\r\n    return(\r\n                    <NavLink to={'/counters/'+props.id} className={s.short_counter}>\r\n                        <div className={s.name}>\r\n                            <p>{props.name}</p>\r\n                        </div>\r\n                        <div className={s.domen}>\r\n                            <p>{props.domen}</p>\r\n                        </div>\r\n                        <div className={s.dayusers}>\r\n                            <p>{props.dayusers}</p>\r\n                        </div>\r\n                        <div className={s.totalusers}>\r\n                            <p>{props.allusers}</p>\r\n                        </div>\r\n\r\n                        <div className={s.status+\" \"+ s[props.status]}>\r\n                            <p><span className={s.work}>Активен</span><span className={s.notwork}>Не активен</span></p>\r\n                        </div>\r\n                    </NavLink>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Shortcounter;","import React from 'react';\r\nimport s from './counterslist.module.scss';\r\nimport Shortcounter from './shortcounter/shortcounter.jsx';\r\n\r\nconst LoadingCounters = ()=>{\r\n    return(\r\n            <div className=\"list\">\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n                <div className={s.loading_counter}></div>\r\n            </div>\r\n            )\r\n\r\n}\r\n\r\n\r\n\r\nconst Counterslist = (props) => {\r\n\r\n       let counters =  props.countersListData\r\n       let countersElement = []\r\n\r\n       countersElement = counters.map(counter => <Shortcounter id={counter._id}\r\n                                                                   name={counter.name}\r\n                                                                   domen={counter.domen}\r\n                                                                   dayusers={counter.dayusers}\r\n                                                                   allusers={counter.allusers}\r\n                                                                   status={counter.status}/> )\r\n\r\n\r\n\r\n       let pagesCount = Math.ceil(props.totalCounters / props.pageSize)\r\n       let pages =[]\r\n       for(let i=1; i<=pagesCount; i++){\r\n           pages.push(i)\r\n       }\r\n       let pagesButtonsElements = pages.map(page => <span className={props.currentPage === page && \"current-page\"}\r\n                                                          onClick={() => {props.changePage(page)}}>{page}</span>)\r\n\r\n\r\n\r\n       return <div className=\"container\">\r\n                   <div className={s.table_head}>\r\n                       <div className={s.name}>\r\n                           <p>Название счётчика</p>\r\n                       </div>\r\n                       <div className={s.domen}>\r\n                           <p>Адрес</p>\r\n                       </div>\r\n                       <div className={s.dayusers}>\r\n                           <p>Пользователи за день</p>\r\n                       </div>\r\n                       <div className={s.totalusers}>\r\n                           <p>Пользователей всего</p>\r\n                       </div>\r\n                       <div className={s.status}>\r\n                           <p>Статус</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className={s.list}>\r\n\r\n                       {props.isFetching ? <LoadingCounters /> : countersElement}\r\n                   </div>\r\n                   <div className=\"pages-buttons\">\r\n                       {pagesButtonsElements}\r\n                   </div>\r\n               </div>\r\n\r\n\r\n}\r\nexport default Counterslist;","import React from \"react\";\r\nimport Counterslist from \"./counterslist\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCounters, setCurrentPage, setTotalCounters,toggleIsFetching, getCounters} from \"../../../../redux/counters-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from   \"redux\"\r\nclass CounterslistContainer extends React.Component{\r\n    componentDidMount() {\r\n       this.props.getCounters()\r\n    }\r\n\r\n    changePage = (page) =>{\r\n        this.props.setCurrentPage(page)\r\n        this.props.getCounters()\r\n    }\r\n    render(){\r\n      return <Counterslist\r\n              countersListData={this.props.countersListData}\r\n              pageSize={this.props.pageSize}\r\n              totalCounters={this.props.totalCounters}\r\n              currentPage={this.props.currentPage}\r\n              isFetching={this.props.isFetching}\r\n              changePage={this.changePage}\r\n\r\n      />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        countersListData: state.countersPage.counterslistData,\r\n        pageSize: state.countersPage.pageSize,\r\n        totalCounters: state.countersPage.totalCounters,\r\n        currentPage: state.countersPage.currentPage,\r\n        isFetching: state.countersPage.isFetching\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default CounterslistContainer = compose(connect(mapStateToProps, {setCounters, setCurrentPage,setTotalCounters,\r\n    toggleIsFetching, getCounters}), WithAuthRedirect)(CounterslistContainer)\r\n\r\n","import React from 'react';\r\nimport Addcounter from './addcounter/addcounter.jsx';\r\nimport CounterslistContainer from \"./counterslist/counterslistContainer\";\r\n\r\nconst Counters = (props) =>{\r\n    return (\r\n\r\n            <div className='content'>\r\n             <Addcounter/>\r\n             <CounterslistContainer />\r\n\r\n\r\n\r\n            </div>\r\n    );\r\n}\r\nexport default Counters;","import React from 'react';\r\nimport s from './addaudience.module.scss';\r\n\r\nconst Addaudienceblock = (props) =>{\r\n    let clicked  = (event) =>{\r\n        props.deleteCounter(event.target.getAttribute('counterid'))\r\n\r\n    }\r\n\r\n    let countersOptionsElements = props.countersSelect.map(counter => <option key={counter.counterId} value={counter.counterId}>{counter.counterName}</option> )\r\n\r\n    let countersElements = props.counters.filter(counter => counter.counterName != undefined);\r\n        countersElements = countersElements.map(counter => <div  className={s.audience_badge}>\r\n        <svg counterid={counter.counterId} onClick={clicked} height=\"20px\"  version=\"1.1\"\r\n              viewBox=\"0 0 128 128\" width=\"20px\"  xmlns=\"http://www.w3.org/2000/svg\" ><path counterid={counter.counterId} d=\"M81.646,64l22.248-22.249c3.48-3.48,3.474-9.131-0.019-12.623l-5.006-5.005\r\n                                     c-3.489-3.49-9.142-3.499-12.622-0.019L64,46.354L41.753,24.106c-3.484-3.483-9.133-3.472-12.624,0.018l-5.005,5.005\r\n                                     c-3.491,3.492-3.501,9.14-0.018,12.623L46.354,64L24.108,86.246c-3.483,3.484-3.472,9.133,0.018,12.623l5.005,5.006\r\n                                     c3.492,3.492,9.14,3.502,12.623,0.018L64,81.647l22.247,22.246c3.48,3.481,9.131,3.475,12.622-0.019l5.006-5.006\r\n                                     c3.489-3.489,3.498-9.142,0.019-12.622L81.646,64z\" fill=\"white\"/></svg><p>{counter.counterName}</p></div>)\r\n    let name_input = React.createRef();\r\n    let description_input = React.createRef();\r\n    let counters_select = React.createRef();\r\n    let updateNameInput = () =>{\r\n        props.reloadInput(name_input.current.value,'audienceNameInput')\r\n\r\n    }\r\n    let updateDescriptionInput = () =>{\r\n        props.reloadInput(description_input.current.value,'audienceDescriptionInput')\r\n\r\n    }\r\n\r\n    let updateCountersSelect = () =>{\r\n        let counterId = counters_select.current.options[counters_select.current.selectedIndex].value;\r\n        props.reloadSelect(counterId)\r\n\r\n    }\r\n    let addCounter = () =>{\r\n        if (props.selectedCounter.counterId == undefined){\r\n\r\n        }\r\n        else{\r\n            props.addCounter()\r\n            console.log(props.selectedCounter)\r\n        }\r\n\r\n\r\n    }\r\n    let addAudience = () =>{\r\n        if(props.nameInput !='' && props.descriptionName !='' && props.counters.length > 1){\r\n            props.addAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6\"><p>Добавьте вашу аудиторию:</p></div>\r\n                <div className=\"col-6\">\r\n                    <div className={s.add_form}>\r\n                        <input type=\"text\" onChange={updateNameInput} value={props.nameInput} ref={name_input} placeholder='Имя счётчика' className='plain_input'/>\r\n                        <textarea name=\"\" onChange={updateDescriptionInput} value={props.descriptionName} ref={description_input} className=\"plain_textarea\" cols=\"30\" rows=\"10\" placeholder='Краткое описание счётчика' />\r\n                        <label htmlFor=\"\">Выберите счётчики:</label>\r\n                        <div className={s.audience_badges}>\r\n                            <div className={s.audience_selector}>\r\n                                <select name=\"\" id=\"\" onClick={updateCountersSelect} ref={counters_select}>\r\n                                    {countersOptionsElements.reverse()}\r\n                                </select>\r\n                                <button onClick={addCounter}>Добавить</button>\r\n                            </div>\r\n                            {countersElements}\r\n                        </div>\r\n                        <button onClick={addAudience} className=\"control_button\">Добавить аудиторию</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Addaudienceblock;","import React from 'react';\r\nimport Addaudienceblock from \"./addaudienceblock\";\r\nimport {reloadAudienceInputActionCreator,\r\n    reloadAudienceSelectActionCreator,\r\n    addAudienceCounterActionCreator,\r\n    addAudienceActionCreator,\r\n    deleteAudienceCounterActionCreator\r\n} from \"../../../../redux/audiences-reducer\";\r\nimport WithAuthRedirect from \"../../../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        nameInput: state.audiencePage.audienceNameInput,\r\n        descriptionName: state.audiencePage.audienceDescriptionInput,\r\n        counters: state.audiencePage.audienceCounters,\r\n        countersSelect: state.audiencePage.AudienceCountersSelect,\r\n        selectedCounter: state.audiencePage.audienceCountersSelectSelected\r\n    }\r\n}\r\nlet mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        reloadInput: (value, inputName) => {dispatch(reloadAudienceInputActionCreator(value, inputName))},\r\n        reloadSelect: (counterId) => {dispatch(reloadAudienceSelectActionCreator(counterId))},\r\n        addCounter: () => {dispatch(addAudienceCounterActionCreator())},\r\n        deleteCounter: (counterId) =>{dispatch(deleteAudienceCounterActionCreator(counterId))},\r\n        addAudience:()=> {dispatch(addAudienceActionCreator())}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Addaudienceblock)","import React from 'react';\r\nimport s from './addaudience.module.scss'\r\nimport {BrowserRouter, NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport AddaudienceblockContainer from \"./addaudienceblockContainer\";\r\n\r\nconst Addcounterbutton =(props)=>{\r\n    return(\r\n\r\n            <NavLink to='/audiences/addaudience' className={s.addaudience_button+\" attractive-button\"}>\r\n                Добавить аудиторию\r\n            </NavLink>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Addaudiences = (props) =>{\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <Route exact path='/audiences' render={() => <Addcounterbutton />} />\r\n                    <Route path='/audiences/addaudience' render={ () =><AddaudienceblockContainer audienceData={props.audienceData}\r\n                                                                                         dispatch={props.dispatch} />} />\r\n                </div>\r\n           \r\n    );\r\n}\r\n\r\n\r\nexport default Addaudiences;","import React from 'react';\r\nimport s from './shortaudience.module.scss';\r\nconst Shortaudience = (props) =>{\r\n    let counters = props.countersNames.map(counter => <div className={s.counter}><p>{counter.counterName}</p></div>)\r\n    let totalUsers = () =>{\r\n        if (1000<props.totalUsers<10000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n        else if(10000<props.totalUsers<1000000){\r\n            return (props.totalUsers/1000).toFixed(1)+'K'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <div className={s.short_audience}>\r\n              <div className={s.audience_name}>\r\n                  <p>{props.name}</p>\r\n              </div>\r\n                <div className={s.body}>\r\n                    <div className={s.description}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={s.counters}>\r\n                        {counters}\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.info_block}>\r\n                            <span>{totalUsers()}</span>\r\n                            <p>Пользователи</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.usersnow}</span>\r\n                            <p>За день</p>\r\n                        </div>\r\n                        <div className={s.info_block}>\r\n                            <span>{props.status}</span>\r\n                            <p>Статус</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Shortaudience;","import React from 'react';\r\nimport s from './audienceslist.module.scss';\r\nimport Shortaudience from \"./shortaudience/shortaudience\";\r\nconst Audienceslist = (props) =>{\r\n\r\n    let shortAudienceElements = props.audiences.map(audience => <Shortaudience name={audience.name}\r\n                                                                                  description={audience.description}\r\n                                                                                  countersNames={audience.counters}\r\n                                                                                  totalUsers={audience.totalusers}\r\n                                                                                  usersnow={audience.usersnow}\r\n                                                                                  status={audience.status}\r\n    />)\r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    Ваши аудитории:\r\n                    <div className={s.audiencelist}>\r\n                        {shortAudienceElements}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n    );\r\n}\r\nexport default Audienceslist;","import React from \"react\";\r\nimport Audienceslist from \"./audienceslist\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        audiences: state.audiencePage.audiencelistData\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n    }\r\n}\r\n\r\nconst AudiecelistContainer = connect(mapStateToProps, mapDispatchToProps)(Audienceslist)\r\n\r\nexport default AudiecelistContainer;","import React from 'react';\r\nimport Addaudiences from \"./addaudience/addaudience\";\r\nimport AudiecelistContainer from \"./audienceslist/audiencelistContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Audiences = (props) =>{\r\n    return (\r\n            <div className=\"content\">\r\n                <Addaudiences />\r\n                <AudiecelistContainer />\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Audiences;","import React from \"react\";\r\nimport loadingImg from \"../../assets/icons/small-loading.svg\";\r\nimport doneImg from \"../../assets/icons/done.svg\";\r\nimport s from \"./common.module.scss\"\r\nexport class EditInput extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n                this.setState({isFetching: true})\r\n                this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n\r\n            if(prevState.isFetching === true){\r\n                this.setState({wasUpdated: true})\r\n                setInterval(()=>{this.setState({wasUpdated: false})}, 1000)\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n                    {this.state.inputEditMode\r\n                            ?\r\n\r\n                                        <div>\r\n                                            <input onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                                   type=\"text\" className='plain_input' placeholder={this.props.placeholder}\r\n                                                   onBlur={() => {this.changeCondition(false)}} autoFocus={true}/>\r\n\r\n                                        </div>\r\n                            :\r\n                            <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.props.inputText}</div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class EditTextarea extends React.Component{\r\n    state = {\r\n        inputText: this.props.inputText,\r\n        inputEditMode: false,\r\n        isFetching: false,\r\n        wasUpdated: false\r\n    }\r\n\r\n    formatText = (text) =>{\r\n        let textarr = text.split('\\n');\r\n        let hasHrefPosition = 0;\r\n        const isUrl = /^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/;\r\n        for (let brPosition = 1; brPosition < textarr.length; brPosition = brPosition + 2){\r\n            textarr.splice(brPosition,0, <br />)\r\n            if(isUrl.test(textarr[hasHrefPosition])){\r\n                textarr[hasHrefPosition] = <a href='https://ya.ru'>{textarr[hasHrefPosition]}</a>\r\n            }\r\n            hasHrefPosition = hasHrefPosition + 2\r\n        }\r\n\r\n        return(\r\n                <p>{textarr}</p>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    changeCondition = (inputState) =>{\r\n        this.setState({inputEditMode: inputState})\r\n        if(!inputState && this.state.inputText !== this.props.inputText){\r\n            this.setState({isFetching: true})\r\n            this.props.putInfo({[this.props.name]: this.state.inputText})\r\n        }\r\n    }\r\n    reloadNameInput =(e) =>{\r\n        this.setState({inputText: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({inputText: this.props.inputText})\r\n            this.setState({isFetching: false})\r\n            \r\n        }\r\n\r\n        if(prevState.isFetching === true && prevProps !== this.props){\r\n            this.setState({wasUpdated: true})\r\n            setInterval(()=>{this.setState({wasUpdated: false})}, 1000)\r\n        }\r\n    }\r\n    render (){\r\n        return <div  onClick={() =>{this.changeCondition(true)}}  className={s.withedit_block}>\r\n            {this.state.isFetching === true ? <img className={s.loading_bar} src={loadingImg} alt=\"\"/> : ''}\r\n            {this.state.wasUpdated === true ? <img className={s.done_check} src={doneImg} alt=\"\"/> : ''}\r\n            {this.state.inputEditMode\r\n                    ?\r\n\r\n                    <div>\r\n                        <textarea onChange={this.reloadNameInput} value={this.state.inputText}\r\n                                  wrap=\"soft\" className='plain_textarea'\r\n                                  type=\"text\"  placeholder={this.props.placeholder}\r\n                                  cols=\"30\" rows=\"10\"\r\n                                  onBlur={() => {this.changeCondition(false)}} autoFocus={true}> </textarea>\r\n                    </div>\r\n                    :\r\n                    <div className={s.withedit_current}>{this.props.inputText === '' ? this.props.placeholder : this.formatText(this.props.inputText)}</div>\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport s from './yourprofile.module.scss'\r\nimport {EditInput, EditTextarea} from \"../../../common/editinput\";\r\n\r\nclass YourProfile extends React.Component{\r\n    render (){\r\n        return(\r\n                <div className=\"container\">\r\n                    <div className={s.profile_cont}>\r\n                        <div className={s.photo_col}>\r\n                            <div className={s.photo_wr}>\r\n                                <p>Добавить фото</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.info_col}>\r\n                            <div className={s.info_inputs}>\r\n                                <EditInput inputText={this.props.name} putInfo={this.props.putProfileInfo} name={\"name\"} placeholder={\"Введите ваше имя\"}/>\r\n                                <EditInput inputText={this.props.soName} putInfo={this.props.putProfileInfo} name={\"soName\"} placeholder={\"Введите вашу фамилию\"}/>\r\n                                <EditInput inputText={this.props.company} putInfo={this.props.putProfileInfo} name={\"company\"} placeholder={\"Введите вашу компанию\"}/>\r\n                                <EditTextarea inputText={this.props.description} putInfo={this.props.putProfileInfo} name={\"description\"} placeholder={\"Введите описание\"} />\r\n                            </div>\r\n                            <button className='control_button'>Сохранить</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default YourProfile;","import React from \"react\";\r\nimport YourProfile from \"./yourprofile\";\r\nimport {getProfileInfo, putProfileInfo} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass YourProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n      this.props.getProfileInfo()\r\n\r\n    }\r\n    render() {\r\n        return <YourProfile name={this.props.name} soName={this.props.soName}\r\n                            company={this.props.company} description={this.props.description}\r\n                            putProfileInfo={this.props.putProfileInfo}\r\n\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        name: state.profilePage.name,\r\n        soName: state.profilePage.soName,\r\n        company: state.profilePage.company,\r\n        description: state.profilePage.description\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getProfileInfo, putProfileInfo})(YourProfileContainer);","import React from 'react';\r\n\r\nconst HaveAccess = (props) =>{\r\n    return(\r\n            <div className=\"container\">\r\n              <p>hj</p>\r\n            </div>\r\n    )\r\n}\r\nexport default HaveAccess;","import React from 'react';\r\nimport YourProfileContainer from \"./yourprofile/yourprofileContainer\";\r\nimport HaveAccess from \"./haveaccess/haveaccess\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nconst ProfileSettings = () =>{\r\n    return(\r\n            <div className=\"content\">\r\n               <YourProfileContainer />\r\n               <HaveAccess />\r\n            </div>\r\n    )\r\n};\r\nexport default WithAuthRedirect(ProfileSettings);","import React from 'react';\r\nimport s from './login.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../components/common/formControls\"\r\nimport {required} from \"../../../utils/validation\";\r\nimport doneImg from \"../../../assets/icons/done.svg\";\r\nconst LoginForm = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"emailInput\" type=\"text\"  component={Input} placeholder=\"Введите почту\" validate={required}/>\r\n                <Field name=\"passwordInput\" type=\"password\"  component={Input} placeholder=\"Введите пароль\" validate={required}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                <p className={s.dont_reg_yet}>Ещё нет аккаунта? <NavLink to='signup'>Зарегистрируйтесь</NavLink></p>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login-form'})(LoginForm)\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendLoginRequest(values.emailInput, values.passwordInput)\r\n\r\n    }\r\n    return  (\r\n          <div className=\"container\">\r\n              <div className=\"login_block\">\r\n                  {props.isAuth == false ?\r\n                          <div className={s.form}>\r\n                              <LoginReduxForm isFetching={props.isFetching} onSubmit={onSubmit}/>\r\n                          </div>\r\n                          :\r\n                          <div className={s.success_auth}><img src={doneImg} alt=\"\"/><p>Вы авторизованы</p></div>\r\n\r\n                  }\r\n                      </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default LoginBlock;","import React from 'react';\r\nimport LoginBlock from \"./loginform\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    sendLoginRequest = (email, password) => {\r\n        this.props.loginThunkCreator(email, password)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n            <LoginBlock\r\n                       isFetching={this.props.isFetching}\r\n                       isAuth={this.props.isAuth}\r\n                       sendLoginRequest={this.sendLoginRequest}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nexport default LoginContainer = connect(mapStateToProps,\r\n        {loginThunkCreator})(LoginContainer)","import React from 'react';\r\nimport s from './profile.module.scss'\r\nconst Profile = (props) =>{\r\n    return(\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    <p>{props.profileId}</p>\r\n                    <p>{props.email}</p>\r\n                    <p>{props.login}</p>\r\n                    <p>{props.regDate}</p>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    render(){\r\n        return <Profile profileId={this.props.profileId}\r\n                        email={this.props.email}\r\n                        login={this.props.login}\r\n                        regDate={this.props.regDate}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps), WithAuthRedirect)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './signup.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, PasswordScoreInput} from \"../../common/formControls\";\r\nimport {required, checkLogin, checkEmail, checkPassword, passwordsMatch} from \"../../../utils/validation\";\r\n\r\n\r\nconst SignUpForm = (props) =>{\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                {props.error ? <span className={s.form_danger}>{props.error}</span> : ''}\r\n                <div className={props.isFetching === true ? s.loading_bar + \" \" + s.active : s.loading_bar}></div>\r\n                <Field name=\"login\" type=\"text\"  component={Input} placeholder=\"Придумайте логин\" validate={[required, checkLogin]}/>\r\n                <Field name=\"email\" type=\"text\"  component={Input} placeholder=\"Ваша почта\" validate={[required, checkEmail]}/>\r\n                <Field name=\"password\" type=\"password\"  component={PasswordScoreInput} placeholder=\"Придумайте пароль\" validate={[required, checkPassword]}/>\r\n                <Field name=\"repeatPassword\" type=\"password\"  component={Input} placeholder=\"Повторите пароль\" validate={[required, passwordsMatch]}/>\r\n                <button className='control_button' disabled={props.submitting || props.error}  type=\"submit\" >Отправить</button>\r\n                <p className={s.dont_reg_yet}>Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></p>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({form: 'signup-form'})(SignUpForm)\r\n\r\n\r\nconst SignUpFormBlock = (props) =>{\r\n\r\n    const onSubmit = (values) =>{\r\n        props.sendSignUpRequest( values.email, values.login, values.password)\r\n    }\r\n\r\n    return(\r\n\r\n            <div className={s.signup_form}>\r\n                <SignUpReduxForm onSubmit={onSubmit} isFetching={props.isFetching}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className={s.profile_form_wr}>\r\n            <div className={s.auth_info}>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Почта:</p><p className=\"line-text\">{props.email}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Логин:</p><p className=\"line-text\">{props.login}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">Дата регистрации:</p><p className=\"line-text\">{props.regDate}</p></div>\r\n                <div className=\"labeled-line\"><p className=\"line-label\">ID</p><p className=\"line-text\">{props.profileId}</p></div>\r\n            </div>\r\n            <div className={s.profile_form}>\r\n                    <div className={s.add_photo_row}>\r\n                         <div className={s.photo_cont}></div>\r\n                         <p className={s.add_photo}>Добавить фото</p>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Имя' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <input className=\"plain_input\" placeholder='Фамилия' type=\"text\"/>\r\n                    </div>\r\n                    <div className={s.input_wr}>\r\n                        <textarea className=\"plain_textarea\" placeholder='Информация о вас' name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <button>Отправить</button>\r\n                    <NavLink to='/summary'>Пропустить</NavLink>\r\n                </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst SignUpBlock = (props) => {\r\n\r\n\r\n\r\n\r\n    return  (\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    {props.signUpState == 'signUpForm' ?\r\n                   <SignUpFormBlock\r\n                             isFetching={props.isFetching} sendSignUpRequest={props.sendSignUpRequest}\r\n                   /> : <ProfileForm profileId={props.profileId} email={props.email}\r\n                                     login={props.login} regDate={props.regDate}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\nexport default SignUpBlock;","import React from 'react';\r\nimport SignUpBlock from \"./signup\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSignUpState, signUpThunkCreator} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n    sendSignUpRequest = (email,login,password) =>{\r\n      this.props.signUpThunkCreator(email,login,password)\r\n    }\r\n    render() {\r\n        return <SignUpBlock\r\n\r\n                isFetching={this.props.isFetching}\r\n                signUpState={this.props.signUpState}\r\n                profileId={this.props.profileId}\r\n                email={this.props.email}\r\n                login={this.props.login}\r\n                regDate={this.props.regDate}\r\n                sendSignUpRequest={this.sendSignUpRequest}\r\n\r\n\r\n\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isFetching: state.auth.isFetching,\r\n        signUpState: state.auth.signUpState,\r\n        profileId: state.auth.profileId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        regDate: state.auth.regDate\r\n\r\n    }\r\n}\r\n\r\nexport default SignUpContainer = connect(mapStateToProps, {setSignUpState, signUpThunkCreator})(SignUpContainer)","import React from 'react';\n/*import logo from './logo.svg'; */\nimport './App.scss';\nimport Sidebar from \"./components/sidebar/sidebar.jsx\";\nimport NavbarContainer from './components/navbar/navbarContainer.jsx';\nimport Summary from \"./components/content/summary/summary\";\nimport Counters from \"./components/content/counters/counters\";\nimport Audiences from \"./components/content/audiences/audiences\";\nimport {Route } from \"react-router-dom\";\nimport ProfileSettings from \"./components/profile/profilesettings/profilesettings\";\nimport LoginContainer from \"./components/profile/login/loginContainer\"\nimport ProfileContainer from \"./components/profile/profilePage/profileContainer\";\nimport SignUpContainer from \"./components/profile/signup/signupContainer\"\nimport {InitializingApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.InitializingApp()\n    }\n\n    render (){\n        return <div className=\"app-wrapper\">\n            <NavbarContainer />\n            <div className=\"row\">\n                <Sidebar />\n                {/* <Redirect exact from='/' to='/summary'  /> */}\n\n                <Route path='/summary'  render={ () => <Summary  /> } />\n                <Route path='/counters' render={() => <Counters />}/>\n                <Route path='/audiences' render={() => <Audiences />} />\n                <Route path='/profile' render={() => <ProfileContainer />} />\n                <Route path='/profilesettings' render={() => <ProfileSettings />} />\n                <Route exact path='/login'  render={()=> <LoginContainer />} />\n                <Route path='/signup' render={()=> <SignUpContainer />} />\n\n\n            </div>\n        </div>\n    }\n}\n\n\nlet mapStateToProps = (state) =>{\n    return{\n\n    }\n}\n\n\nexport default connect(mapStateToProps, {InitializingApp})(App)\n\n\n","import React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\n\n    ReactDOM.render(\n            <BrowserRouter>\n            <Provider store={store}>  <App  /></Provider></BrowserRouter> ,\n            document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"graphic_graphic__3IRmr\",\"graphic_bottom\":\"graphic_graphic_bottom__1uDkm\",\"graphic_col_wr\":\"graphic_graphic_col_wr__t0l7L\",\"graphic_col\":\"graphic_graphic_col__N_PB4\",\"graphic_col_text\":\"graphic_graphic_col_text__3ayWZ\",\"graphic_col_day\":\"graphic_graphic_col_day__3MQq2\",\"graphic_col_number\":\"graphic_graphic_col_number__2f8zS\",\"graphic_cols\":\"graphic_graphic_cols__2ETRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"short_counter\":\"shortcounter_short_counter__2Mkqz\",\"name\":\"shortcounter_name__2XGTE\",\"domen\":\"shortcounter_domen__13SoB\",\"dayusers\":\"shortcounter_dayusers__3LOqd\",\"totalusers\":\"shortcounter_totalusers__9w9vy\",\"status\":\"shortcounter_status__2OofU\",\"work\":\"shortcounter_work__1ylaG\",\"notwork\":\"shortcounter_notwork__3MW4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablehead\":\"dayusers_tablehead__1Lc84\",\"user_alias\":\"dayusers_user_alias__1YKwO\",\"user_country\":\"dayusers_user_country__3l0Wx\",\"user_time\":\"dayusers_user_time__3xRTE\",\"user_date\":\"dayusers_user_date__3WejA\",\"user_revenue\":\"dayusers_user_revenue___kRiq\",\"loadmore_button\":\"dayusers_loadmore_button__6nQO4\",\"loading_shortuser\":\"dayusers_loading_shortuser__3jw8s\",\"loading\":\"dayusers_loading__3tKjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withedit_current\":\"common_withedit_current__3mFwP\",\"withedit_block\":\"common_withedit_block__11_W2\",\"plain_input\":\"common_plain_input__3zzxU\",\"plain_textarea\":\"common_plain_textarea__237u6\",\"loading_bar\":\"common_loading_bar__TjjZG\",\"loading\":\"common_loading__2aPGq\",\"done_check\":\"common_done_check__3kKij\",\"input_wr\":\"common_input_wr__1j_qc\",\"form_danger\":\"common_form_danger__2ZFlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addcounter_button\":\"addcounter_addcounter_button__2E3-U\",\"addcounter_form\":\"addcounter_addcounter_form__2pfR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addaudience_button\":\"addaudience_addaudience_button__3OmVs\",\"audience_selector\":\"addaudience_audience_selector__3jn0d\",\"add_form\":\"addaudience_add_form__2YkYT\",\"audience_badges\":\"addaudience_audience_badges__3oP8E\",\"audience_badge\":\"addaudience_audience_badge__kOlhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortuser\":\"shortuser_shortuser__bnE4M\",\"user_alias\":\"shortuser_user_alias__3mR9I\",\"user_country\":\"shortuser_user_country__1CMLk\",\"user_time\":\"shortuser_user_time__1MOfy\",\"user_date\":\"shortuser_user_date__1dObS\",\"user_revenue\":\"shortuser_user_revenue__1ur_q\",\"dayuser_list\":\"shortuser_dayuser_list__zSlo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__POGZ7\",\"sidebar_menu\":\"sidebar_sidebar_menu__3nXwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_cont\":\"yourprofile_profile_cont__1UBDa\",\"photo_col\":\"yourprofile_photo_col__1_Awe\",\"info_col\":\"yourprofile_info_col__AvHHq\",\"photo_wr\":\"yourprofile_photo_wr__6zYEk\",\"info_inputs\":\"yourprofile_info_inputs__HAXhr\"};","module.exports = __webpack_public_path__ + \"static/media/done.40c37f81.svg\";","module.exports = __webpack_public_path__ + \"static/media/small-loading.320ffa1d.svg\";"],"sourceRoot":""}